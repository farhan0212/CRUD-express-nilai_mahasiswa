
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Mahasiswa
 * 
 */
export type Mahasiswa = $Result.DefaultSelection<Prisma.$MahasiswaPayload>
/**
 * Model MataKuliah
 * 
 */
export type MataKuliah = $Result.DefaultSelection<Prisma.$MataKuliahPayload>
/**
 * Model Dosen
 * 
 */
export type Dosen = $Result.DefaultSelection<Prisma.$DosenPayload>
/**
 * Model Nilai
 * 
 */
export type Nilai = $Result.DefaultSelection<Prisma.$NilaiPayload>
/**
 * Model MataKuliahMahasiswa
 * 
 */
export type MataKuliahMahasiswa = $Result.DefaultSelection<Prisma.$MataKuliahMahasiswaPayload>
/**
 * Model Role
 * 
 */
export type Role = $Result.DefaultSelection<Prisma.$RolePayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Mahasiswas
 * const mahasiswas = await prisma.mahasiswa.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Mahasiswas
   * const mahasiswas = await prisma.mahasiswa.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.mahasiswa`: Exposes CRUD operations for the **Mahasiswa** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Mahasiswas
    * const mahasiswas = await prisma.mahasiswa.findMany()
    * ```
    */
  get mahasiswa(): Prisma.MahasiswaDelegate<ExtArgs>;

  /**
   * `prisma.mataKuliah`: Exposes CRUD operations for the **MataKuliah** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MataKuliahs
    * const mataKuliahs = await prisma.mataKuliah.findMany()
    * ```
    */
  get mataKuliah(): Prisma.MataKuliahDelegate<ExtArgs>;

  /**
   * `prisma.dosen`: Exposes CRUD operations for the **Dosen** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Dosens
    * const dosens = await prisma.dosen.findMany()
    * ```
    */
  get dosen(): Prisma.DosenDelegate<ExtArgs>;

  /**
   * `prisma.nilai`: Exposes CRUD operations for the **Nilai** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Nilais
    * const nilais = await prisma.nilai.findMany()
    * ```
    */
  get nilai(): Prisma.NilaiDelegate<ExtArgs>;

  /**
   * `prisma.mataKuliahMahasiswa`: Exposes CRUD operations for the **MataKuliahMahasiswa** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MataKuliahMahasiswas
    * const mataKuliahMahasiswas = await prisma.mataKuliahMahasiswa.findMany()
    * ```
    */
  get mataKuliahMahasiswa(): Prisma.MataKuliahMahasiswaDelegate<ExtArgs>;

  /**
   * `prisma.role`: Exposes CRUD operations for the **Role** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Roles
    * const roles = await prisma.role.findMany()
    * ```
    */
  get role(): Prisma.RoleDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.17.0
   * Query Engine version: 393aa359c9ad4a4bb28630fb5613f9c281cde053
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | { toJSON(): unknown }

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Mahasiswa: 'Mahasiswa',
    MataKuliah: 'MataKuliah',
    Dosen: 'Dosen',
    Nilai: 'Nilai',
    MataKuliahMahasiswa: 'MataKuliahMahasiswa',
    Role: 'Role'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "mahasiswa" | "mataKuliah" | "dosen" | "nilai" | "mataKuliahMahasiswa" | "role"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Mahasiswa: {
        payload: Prisma.$MahasiswaPayload<ExtArgs>
        fields: Prisma.MahasiswaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MahasiswaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MahasiswaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPayload>
          }
          findFirst: {
            args: Prisma.MahasiswaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MahasiswaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPayload>
          }
          findMany: {
            args: Prisma.MahasiswaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPayload>[]
          }
          create: {
            args: Prisma.MahasiswaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPayload>
          }
          createMany: {
            args: Prisma.MahasiswaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MahasiswaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPayload>[]
          }
          delete: {
            args: Prisma.MahasiswaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPayload>
          }
          update: {
            args: Prisma.MahasiswaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPayload>
          }
          deleteMany: {
            args: Prisma.MahasiswaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MahasiswaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MahasiswaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MahasiswaPayload>
          }
          aggregate: {
            args: Prisma.MahasiswaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMahasiswa>
          }
          groupBy: {
            args: Prisma.MahasiswaGroupByArgs<ExtArgs>
            result: $Utils.Optional<MahasiswaGroupByOutputType>[]
          }
          count: {
            args: Prisma.MahasiswaCountArgs<ExtArgs>
            result: $Utils.Optional<MahasiswaCountAggregateOutputType> | number
          }
        }
      }
      MataKuliah: {
        payload: Prisma.$MataKuliahPayload<ExtArgs>
        fields: Prisma.MataKuliahFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MataKuliahFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MataKuliahPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MataKuliahFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MataKuliahPayload>
          }
          findFirst: {
            args: Prisma.MataKuliahFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MataKuliahPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MataKuliahFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MataKuliahPayload>
          }
          findMany: {
            args: Prisma.MataKuliahFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MataKuliahPayload>[]
          }
          create: {
            args: Prisma.MataKuliahCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MataKuliahPayload>
          }
          createMany: {
            args: Prisma.MataKuliahCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MataKuliahCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MataKuliahPayload>[]
          }
          delete: {
            args: Prisma.MataKuliahDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MataKuliahPayload>
          }
          update: {
            args: Prisma.MataKuliahUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MataKuliahPayload>
          }
          deleteMany: {
            args: Prisma.MataKuliahDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MataKuliahUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MataKuliahUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MataKuliahPayload>
          }
          aggregate: {
            args: Prisma.MataKuliahAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMataKuliah>
          }
          groupBy: {
            args: Prisma.MataKuliahGroupByArgs<ExtArgs>
            result: $Utils.Optional<MataKuliahGroupByOutputType>[]
          }
          count: {
            args: Prisma.MataKuliahCountArgs<ExtArgs>
            result: $Utils.Optional<MataKuliahCountAggregateOutputType> | number
          }
        }
      }
      Dosen: {
        payload: Prisma.$DosenPayload<ExtArgs>
        fields: Prisma.DosenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DosenFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DosenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DosenFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DosenPayload>
          }
          findFirst: {
            args: Prisma.DosenFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DosenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DosenFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DosenPayload>
          }
          findMany: {
            args: Prisma.DosenFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DosenPayload>[]
          }
          create: {
            args: Prisma.DosenCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DosenPayload>
          }
          createMany: {
            args: Prisma.DosenCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DosenCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DosenPayload>[]
          }
          delete: {
            args: Prisma.DosenDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DosenPayload>
          }
          update: {
            args: Prisma.DosenUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DosenPayload>
          }
          deleteMany: {
            args: Prisma.DosenDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DosenUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.DosenUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DosenPayload>
          }
          aggregate: {
            args: Prisma.DosenAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDosen>
          }
          groupBy: {
            args: Prisma.DosenGroupByArgs<ExtArgs>
            result: $Utils.Optional<DosenGroupByOutputType>[]
          }
          count: {
            args: Prisma.DosenCountArgs<ExtArgs>
            result: $Utils.Optional<DosenCountAggregateOutputType> | number
          }
        }
      }
      Nilai: {
        payload: Prisma.$NilaiPayload<ExtArgs>
        fields: Prisma.NilaiFieldRefs
        operations: {
          findUnique: {
            args: Prisma.NilaiFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NilaiPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.NilaiFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NilaiPayload>
          }
          findFirst: {
            args: Prisma.NilaiFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NilaiPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.NilaiFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NilaiPayload>
          }
          findMany: {
            args: Prisma.NilaiFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NilaiPayload>[]
          }
          create: {
            args: Prisma.NilaiCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NilaiPayload>
          }
          createMany: {
            args: Prisma.NilaiCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.NilaiCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NilaiPayload>[]
          }
          delete: {
            args: Prisma.NilaiDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NilaiPayload>
          }
          update: {
            args: Prisma.NilaiUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NilaiPayload>
          }
          deleteMany: {
            args: Prisma.NilaiDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.NilaiUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.NilaiUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$NilaiPayload>
          }
          aggregate: {
            args: Prisma.NilaiAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNilai>
          }
          groupBy: {
            args: Prisma.NilaiGroupByArgs<ExtArgs>
            result: $Utils.Optional<NilaiGroupByOutputType>[]
          }
          count: {
            args: Prisma.NilaiCountArgs<ExtArgs>
            result: $Utils.Optional<NilaiCountAggregateOutputType> | number
          }
        }
      }
      MataKuliahMahasiswa: {
        payload: Prisma.$MataKuliahMahasiswaPayload<ExtArgs>
        fields: Prisma.MataKuliahMahasiswaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MataKuliahMahasiswaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MataKuliahMahasiswaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MataKuliahMahasiswaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MataKuliahMahasiswaPayload>
          }
          findFirst: {
            args: Prisma.MataKuliahMahasiswaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MataKuliahMahasiswaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MataKuliahMahasiswaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MataKuliahMahasiswaPayload>
          }
          findMany: {
            args: Prisma.MataKuliahMahasiswaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MataKuliahMahasiswaPayload>[]
          }
          create: {
            args: Prisma.MataKuliahMahasiswaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MataKuliahMahasiswaPayload>
          }
          createMany: {
            args: Prisma.MataKuliahMahasiswaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MataKuliahMahasiswaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MataKuliahMahasiswaPayload>[]
          }
          delete: {
            args: Prisma.MataKuliahMahasiswaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MataKuliahMahasiswaPayload>
          }
          update: {
            args: Prisma.MataKuliahMahasiswaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MataKuliahMahasiswaPayload>
          }
          deleteMany: {
            args: Prisma.MataKuliahMahasiswaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MataKuliahMahasiswaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MataKuliahMahasiswaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MataKuliahMahasiswaPayload>
          }
          aggregate: {
            args: Prisma.MataKuliahMahasiswaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMataKuliahMahasiswa>
          }
          groupBy: {
            args: Prisma.MataKuliahMahasiswaGroupByArgs<ExtArgs>
            result: $Utils.Optional<MataKuliahMahasiswaGroupByOutputType>[]
          }
          count: {
            args: Prisma.MataKuliahMahasiswaCountArgs<ExtArgs>
            result: $Utils.Optional<MataKuliahMahasiswaCountAggregateOutputType> | number
          }
        }
      }
      Role: {
        payload: Prisma.$RolePayload<ExtArgs>
        fields: Prisma.RoleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RoleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RoleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          findFirst: {
            args: Prisma.RoleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RoleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          findMany: {
            args: Prisma.RoleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>[]
          }
          create: {
            args: Prisma.RoleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          createMany: {
            args: Prisma.RoleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.RoleCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>[]
          }
          delete: {
            args: Prisma.RoleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          update: {
            args: Prisma.RoleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          deleteMany: {
            args: Prisma.RoleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RoleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.RoleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RolePayload>
          }
          aggregate: {
            args: Prisma.RoleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRole>
          }
          groupBy: {
            args: Prisma.RoleGroupByArgs<ExtArgs>
            result: $Utils.Optional<RoleGroupByOutputType>[]
          }
          count: {
            args: Prisma.RoleCountArgs<ExtArgs>
            result: $Utils.Optional<RoleCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type MahasiswaCountOutputType
   */

  export type MahasiswaCountOutputType = {
    matakuliahs: number
    nilais: number
  }

  export type MahasiswaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    matakuliahs?: boolean | MahasiswaCountOutputTypeCountMatakuliahsArgs
    nilais?: boolean | MahasiswaCountOutputTypeCountNilaisArgs
  }

  // Custom InputTypes
  /**
   * MahasiswaCountOutputType without action
   */
  export type MahasiswaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MahasiswaCountOutputType
     */
    select?: MahasiswaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MahasiswaCountOutputType without action
   */
  export type MahasiswaCountOutputTypeCountMatakuliahsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MataKuliahMahasiswaWhereInput
  }

  /**
   * MahasiswaCountOutputType without action
   */
  export type MahasiswaCountOutputTypeCountNilaisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NilaiWhereInput
  }


  /**
   * Count Type MataKuliahCountOutputType
   */

  export type MataKuliahCountOutputType = {
    mahasiswas: number
    nilais: number
  }

  export type MataKuliahCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mahasiswas?: boolean | MataKuliahCountOutputTypeCountMahasiswasArgs
    nilais?: boolean | MataKuliahCountOutputTypeCountNilaisArgs
  }

  // Custom InputTypes
  /**
   * MataKuliahCountOutputType without action
   */
  export type MataKuliahCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliahCountOutputType
     */
    select?: MataKuliahCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MataKuliahCountOutputType without action
   */
  export type MataKuliahCountOutputTypeCountMahasiswasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MataKuliahMahasiswaWhereInput
  }

  /**
   * MataKuliahCountOutputType without action
   */
  export type MataKuliahCountOutputTypeCountNilaisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NilaiWhereInput
  }


  /**
   * Count Type DosenCountOutputType
   */

  export type DosenCountOutputType = {
    matakuliahs: number
  }

  export type DosenCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    matakuliahs?: boolean | DosenCountOutputTypeCountMatakuliahsArgs
  }

  // Custom InputTypes
  /**
   * DosenCountOutputType without action
   */
  export type DosenCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DosenCountOutputType
     */
    select?: DosenCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DosenCountOutputType without action
   */
  export type DosenCountOutputTypeCountMatakuliahsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MataKuliahWhereInput
  }


  /**
   * Count Type RoleCountOutputType
   */

  export type RoleCountOutputType = {
    dosens: number
    mahasiswas: number
  }

  export type RoleCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    dosens?: boolean | RoleCountOutputTypeCountDosensArgs
    mahasiswas?: boolean | RoleCountOutputTypeCountMahasiswasArgs
  }

  // Custom InputTypes
  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RoleCountOutputType
     */
    select?: RoleCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeCountDosensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DosenWhereInput
  }

  /**
   * RoleCountOutputType without action
   */
  export type RoleCountOutputTypeCountMahasiswasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MahasiswaWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Mahasiswa
   */

  export type AggregateMahasiswa = {
    _count: MahasiswaCountAggregateOutputType | null
    _avg: MahasiswaAvgAggregateOutputType | null
    _sum: MahasiswaSumAggregateOutputType | null
    _min: MahasiswaMinAggregateOutputType | null
    _max: MahasiswaMaxAggregateOutputType | null
  }

  export type MahasiswaAvgAggregateOutputType = {
    id: number | null
    roleId: number | null
  }

  export type MahasiswaSumAggregateOutputType = {
    id: number | null
    roleId: number | null
  }

  export type MahasiswaMinAggregateOutputType = {
    id: number | null
    username: string | null
    password: string | null
    name: string | null
    email: string | null
    roleId: number | null
  }

  export type MahasiswaMaxAggregateOutputType = {
    id: number | null
    username: string | null
    password: string | null
    name: string | null
    email: string | null
    roleId: number | null
  }

  export type MahasiswaCountAggregateOutputType = {
    id: number
    username: number
    password: number
    name: number
    email: number
    roleId: number
    _all: number
  }


  export type MahasiswaAvgAggregateInputType = {
    id?: true
    roleId?: true
  }

  export type MahasiswaSumAggregateInputType = {
    id?: true
    roleId?: true
  }

  export type MahasiswaMinAggregateInputType = {
    id?: true
    username?: true
    password?: true
    name?: true
    email?: true
    roleId?: true
  }

  export type MahasiswaMaxAggregateInputType = {
    id?: true
    username?: true
    password?: true
    name?: true
    email?: true
    roleId?: true
  }

  export type MahasiswaCountAggregateInputType = {
    id?: true
    username?: true
    password?: true
    name?: true
    email?: true
    roleId?: true
    _all?: true
  }

  export type MahasiswaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Mahasiswa to aggregate.
     */
    where?: MahasiswaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mahasiswas to fetch.
     */
    orderBy?: MahasiswaOrderByWithRelationInput | MahasiswaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MahasiswaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mahasiswas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mahasiswas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Mahasiswas
    **/
    _count?: true | MahasiswaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MahasiswaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MahasiswaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MahasiswaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MahasiswaMaxAggregateInputType
  }

  export type GetMahasiswaAggregateType<T extends MahasiswaAggregateArgs> = {
        [P in keyof T & keyof AggregateMahasiswa]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMahasiswa[P]>
      : GetScalarType<T[P], AggregateMahasiswa[P]>
  }




  export type MahasiswaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MahasiswaWhereInput
    orderBy?: MahasiswaOrderByWithAggregationInput | MahasiswaOrderByWithAggregationInput[]
    by: MahasiswaScalarFieldEnum[] | MahasiswaScalarFieldEnum
    having?: MahasiswaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MahasiswaCountAggregateInputType | true
    _avg?: MahasiswaAvgAggregateInputType
    _sum?: MahasiswaSumAggregateInputType
    _min?: MahasiswaMinAggregateInputType
    _max?: MahasiswaMaxAggregateInputType
  }

  export type MahasiswaGroupByOutputType = {
    id: number
    username: string
    password: string
    name: string
    email: string
    roleId: number
    _count: MahasiswaCountAggregateOutputType | null
    _avg: MahasiswaAvgAggregateOutputType | null
    _sum: MahasiswaSumAggregateOutputType | null
    _min: MahasiswaMinAggregateOutputType | null
    _max: MahasiswaMaxAggregateOutputType | null
  }

  type GetMahasiswaGroupByPayload<T extends MahasiswaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MahasiswaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MahasiswaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MahasiswaGroupByOutputType[P]>
            : GetScalarType<T[P], MahasiswaGroupByOutputType[P]>
        }
      >
    >


  export type MahasiswaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    password?: boolean
    name?: boolean
    email?: boolean
    roleId?: boolean
    matakuliahs?: boolean | Mahasiswa$matakuliahsArgs<ExtArgs>
    nilais?: boolean | Mahasiswa$nilaisArgs<ExtArgs>
    role?: boolean | RoleDefaultArgs<ExtArgs>
    _count?: boolean | MahasiswaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mahasiswa"]>

  export type MahasiswaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    password?: boolean
    name?: boolean
    email?: boolean
    roleId?: boolean
    role?: boolean | RoleDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mahasiswa"]>

  export type MahasiswaSelectScalar = {
    id?: boolean
    username?: boolean
    password?: boolean
    name?: boolean
    email?: boolean
    roleId?: boolean
  }

  export type MahasiswaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    matakuliahs?: boolean | Mahasiswa$matakuliahsArgs<ExtArgs>
    nilais?: boolean | Mahasiswa$nilaisArgs<ExtArgs>
    role?: boolean | RoleDefaultArgs<ExtArgs>
    _count?: boolean | MahasiswaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type MahasiswaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    role?: boolean | RoleDefaultArgs<ExtArgs>
  }

  export type $MahasiswaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Mahasiswa"
    objects: {
      matakuliahs: Prisma.$MataKuliahMahasiswaPayload<ExtArgs>[]
      nilais: Prisma.$NilaiPayload<ExtArgs>[]
      role: Prisma.$RolePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      username: string
      password: string
      name: string
      email: string
      roleId: number
    }, ExtArgs["result"]["mahasiswa"]>
    composites: {}
  }

  type MahasiswaGetPayload<S extends boolean | null | undefined | MahasiswaDefaultArgs> = $Result.GetResult<Prisma.$MahasiswaPayload, S>

  type MahasiswaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<MahasiswaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: MahasiswaCountAggregateInputType | true
    }

  export interface MahasiswaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Mahasiswa'], meta: { name: 'Mahasiswa' } }
    /**
     * Find zero or one Mahasiswa that matches the filter.
     * @param {MahasiswaFindUniqueArgs} args - Arguments to find a Mahasiswa
     * @example
     * // Get one Mahasiswa
     * const mahasiswa = await prisma.mahasiswa.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MahasiswaFindUniqueArgs>(args: SelectSubset<T, MahasiswaFindUniqueArgs<ExtArgs>>): Prisma__MahasiswaClient<$Result.GetResult<Prisma.$MahasiswaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Mahasiswa that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {MahasiswaFindUniqueOrThrowArgs} args - Arguments to find a Mahasiswa
     * @example
     * // Get one Mahasiswa
     * const mahasiswa = await prisma.mahasiswa.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MahasiswaFindUniqueOrThrowArgs>(args: SelectSubset<T, MahasiswaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MahasiswaClient<$Result.GetResult<Prisma.$MahasiswaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Mahasiswa that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaFindFirstArgs} args - Arguments to find a Mahasiswa
     * @example
     * // Get one Mahasiswa
     * const mahasiswa = await prisma.mahasiswa.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MahasiswaFindFirstArgs>(args?: SelectSubset<T, MahasiswaFindFirstArgs<ExtArgs>>): Prisma__MahasiswaClient<$Result.GetResult<Prisma.$MahasiswaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Mahasiswa that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaFindFirstOrThrowArgs} args - Arguments to find a Mahasiswa
     * @example
     * // Get one Mahasiswa
     * const mahasiswa = await prisma.mahasiswa.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MahasiswaFindFirstOrThrowArgs>(args?: SelectSubset<T, MahasiswaFindFirstOrThrowArgs<ExtArgs>>): Prisma__MahasiswaClient<$Result.GetResult<Prisma.$MahasiswaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Mahasiswas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Mahasiswas
     * const mahasiswas = await prisma.mahasiswa.findMany()
     * 
     * // Get first 10 Mahasiswas
     * const mahasiswas = await prisma.mahasiswa.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const mahasiswaWithIdOnly = await prisma.mahasiswa.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MahasiswaFindManyArgs>(args?: SelectSubset<T, MahasiswaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MahasiswaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Mahasiswa.
     * @param {MahasiswaCreateArgs} args - Arguments to create a Mahasiswa.
     * @example
     * // Create one Mahasiswa
     * const Mahasiswa = await prisma.mahasiswa.create({
     *   data: {
     *     // ... data to create a Mahasiswa
     *   }
     * })
     * 
     */
    create<T extends MahasiswaCreateArgs>(args: SelectSubset<T, MahasiswaCreateArgs<ExtArgs>>): Prisma__MahasiswaClient<$Result.GetResult<Prisma.$MahasiswaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Mahasiswas.
     * @param {MahasiswaCreateManyArgs} args - Arguments to create many Mahasiswas.
     * @example
     * // Create many Mahasiswas
     * const mahasiswa = await prisma.mahasiswa.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MahasiswaCreateManyArgs>(args?: SelectSubset<T, MahasiswaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Mahasiswas and returns the data saved in the database.
     * @param {MahasiswaCreateManyAndReturnArgs} args - Arguments to create many Mahasiswas.
     * @example
     * // Create many Mahasiswas
     * const mahasiswa = await prisma.mahasiswa.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Mahasiswas and only return the `id`
     * const mahasiswaWithIdOnly = await prisma.mahasiswa.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MahasiswaCreateManyAndReturnArgs>(args?: SelectSubset<T, MahasiswaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MahasiswaPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Mahasiswa.
     * @param {MahasiswaDeleteArgs} args - Arguments to delete one Mahasiswa.
     * @example
     * // Delete one Mahasiswa
     * const Mahasiswa = await prisma.mahasiswa.delete({
     *   where: {
     *     // ... filter to delete one Mahasiswa
     *   }
     * })
     * 
     */
    delete<T extends MahasiswaDeleteArgs>(args: SelectSubset<T, MahasiswaDeleteArgs<ExtArgs>>): Prisma__MahasiswaClient<$Result.GetResult<Prisma.$MahasiswaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Mahasiswa.
     * @param {MahasiswaUpdateArgs} args - Arguments to update one Mahasiswa.
     * @example
     * // Update one Mahasiswa
     * const mahasiswa = await prisma.mahasiswa.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MahasiswaUpdateArgs>(args: SelectSubset<T, MahasiswaUpdateArgs<ExtArgs>>): Prisma__MahasiswaClient<$Result.GetResult<Prisma.$MahasiswaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Mahasiswas.
     * @param {MahasiswaDeleteManyArgs} args - Arguments to filter Mahasiswas to delete.
     * @example
     * // Delete a few Mahasiswas
     * const { count } = await prisma.mahasiswa.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MahasiswaDeleteManyArgs>(args?: SelectSubset<T, MahasiswaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mahasiswas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Mahasiswas
     * const mahasiswa = await prisma.mahasiswa.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MahasiswaUpdateManyArgs>(args: SelectSubset<T, MahasiswaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Mahasiswa.
     * @param {MahasiswaUpsertArgs} args - Arguments to update or create a Mahasiswa.
     * @example
     * // Update or create a Mahasiswa
     * const mahasiswa = await prisma.mahasiswa.upsert({
     *   create: {
     *     // ... data to create a Mahasiswa
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Mahasiswa we want to update
     *   }
     * })
     */
    upsert<T extends MahasiswaUpsertArgs>(args: SelectSubset<T, MahasiswaUpsertArgs<ExtArgs>>): Prisma__MahasiswaClient<$Result.GetResult<Prisma.$MahasiswaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Mahasiswas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaCountArgs} args - Arguments to filter Mahasiswas to count.
     * @example
     * // Count the number of Mahasiswas
     * const count = await prisma.mahasiswa.count({
     *   where: {
     *     // ... the filter for the Mahasiswas we want to count
     *   }
     * })
    **/
    count<T extends MahasiswaCountArgs>(
      args?: Subset<T, MahasiswaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MahasiswaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Mahasiswa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MahasiswaAggregateArgs>(args: Subset<T, MahasiswaAggregateArgs>): Prisma.PrismaPromise<GetMahasiswaAggregateType<T>>

    /**
     * Group by Mahasiswa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MahasiswaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MahasiswaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MahasiswaGroupByArgs['orderBy'] }
        : { orderBy?: MahasiswaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MahasiswaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMahasiswaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Mahasiswa model
   */
  readonly fields: MahasiswaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Mahasiswa.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MahasiswaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    matakuliahs<T extends Mahasiswa$matakuliahsArgs<ExtArgs> = {}>(args?: Subset<T, Mahasiswa$matakuliahsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MataKuliahMahasiswaPayload<ExtArgs>, T, "findMany"> | Null>
    nilais<T extends Mahasiswa$nilaisArgs<ExtArgs> = {}>(args?: Subset<T, Mahasiswa$nilaisArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NilaiPayload<ExtArgs>, T, "findMany"> | Null>
    role<T extends RoleDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RoleDefaultArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Mahasiswa model
   */ 
  interface MahasiswaFieldRefs {
    readonly id: FieldRef<"Mahasiswa", 'Int'>
    readonly username: FieldRef<"Mahasiswa", 'String'>
    readonly password: FieldRef<"Mahasiswa", 'String'>
    readonly name: FieldRef<"Mahasiswa", 'String'>
    readonly email: FieldRef<"Mahasiswa", 'String'>
    readonly roleId: FieldRef<"Mahasiswa", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Mahasiswa findUnique
   */
  export type MahasiswaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mahasiswa
     */
    select?: MahasiswaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaInclude<ExtArgs> | null
    /**
     * Filter, which Mahasiswa to fetch.
     */
    where: MahasiswaWhereUniqueInput
  }

  /**
   * Mahasiswa findUniqueOrThrow
   */
  export type MahasiswaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mahasiswa
     */
    select?: MahasiswaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaInclude<ExtArgs> | null
    /**
     * Filter, which Mahasiswa to fetch.
     */
    where: MahasiswaWhereUniqueInput
  }

  /**
   * Mahasiswa findFirst
   */
  export type MahasiswaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mahasiswa
     */
    select?: MahasiswaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaInclude<ExtArgs> | null
    /**
     * Filter, which Mahasiswa to fetch.
     */
    where?: MahasiswaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mahasiswas to fetch.
     */
    orderBy?: MahasiswaOrderByWithRelationInput | MahasiswaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Mahasiswas.
     */
    cursor?: MahasiswaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mahasiswas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mahasiswas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Mahasiswas.
     */
    distinct?: MahasiswaScalarFieldEnum | MahasiswaScalarFieldEnum[]
  }

  /**
   * Mahasiswa findFirstOrThrow
   */
  export type MahasiswaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mahasiswa
     */
    select?: MahasiswaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaInclude<ExtArgs> | null
    /**
     * Filter, which Mahasiswa to fetch.
     */
    where?: MahasiswaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mahasiswas to fetch.
     */
    orderBy?: MahasiswaOrderByWithRelationInput | MahasiswaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Mahasiswas.
     */
    cursor?: MahasiswaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mahasiswas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mahasiswas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Mahasiswas.
     */
    distinct?: MahasiswaScalarFieldEnum | MahasiswaScalarFieldEnum[]
  }

  /**
   * Mahasiswa findMany
   */
  export type MahasiswaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mahasiswa
     */
    select?: MahasiswaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaInclude<ExtArgs> | null
    /**
     * Filter, which Mahasiswas to fetch.
     */
    where?: MahasiswaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Mahasiswas to fetch.
     */
    orderBy?: MahasiswaOrderByWithRelationInput | MahasiswaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Mahasiswas.
     */
    cursor?: MahasiswaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Mahasiswas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Mahasiswas.
     */
    skip?: number
    distinct?: MahasiswaScalarFieldEnum | MahasiswaScalarFieldEnum[]
  }

  /**
   * Mahasiswa create
   */
  export type MahasiswaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mahasiswa
     */
    select?: MahasiswaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaInclude<ExtArgs> | null
    /**
     * The data needed to create a Mahasiswa.
     */
    data: XOR<MahasiswaCreateInput, MahasiswaUncheckedCreateInput>
  }

  /**
   * Mahasiswa createMany
   */
  export type MahasiswaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Mahasiswas.
     */
    data: MahasiswaCreateManyInput | MahasiswaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Mahasiswa createManyAndReturn
   */
  export type MahasiswaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mahasiswa
     */
    select?: MahasiswaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Mahasiswas.
     */
    data: MahasiswaCreateManyInput | MahasiswaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Mahasiswa update
   */
  export type MahasiswaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mahasiswa
     */
    select?: MahasiswaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaInclude<ExtArgs> | null
    /**
     * The data needed to update a Mahasiswa.
     */
    data: XOR<MahasiswaUpdateInput, MahasiswaUncheckedUpdateInput>
    /**
     * Choose, which Mahasiswa to update.
     */
    where: MahasiswaWhereUniqueInput
  }

  /**
   * Mahasiswa updateMany
   */
  export type MahasiswaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Mahasiswas.
     */
    data: XOR<MahasiswaUpdateManyMutationInput, MahasiswaUncheckedUpdateManyInput>
    /**
     * Filter which Mahasiswas to update
     */
    where?: MahasiswaWhereInput
  }

  /**
   * Mahasiswa upsert
   */
  export type MahasiswaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mahasiswa
     */
    select?: MahasiswaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaInclude<ExtArgs> | null
    /**
     * The filter to search for the Mahasiswa to update in case it exists.
     */
    where: MahasiswaWhereUniqueInput
    /**
     * In case the Mahasiswa found by the `where` argument doesn't exist, create a new Mahasiswa with this data.
     */
    create: XOR<MahasiswaCreateInput, MahasiswaUncheckedCreateInput>
    /**
     * In case the Mahasiswa was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MahasiswaUpdateInput, MahasiswaUncheckedUpdateInput>
  }

  /**
   * Mahasiswa delete
   */
  export type MahasiswaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mahasiswa
     */
    select?: MahasiswaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaInclude<ExtArgs> | null
    /**
     * Filter which Mahasiswa to delete.
     */
    where: MahasiswaWhereUniqueInput
  }

  /**
   * Mahasiswa deleteMany
   */
  export type MahasiswaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Mahasiswas to delete
     */
    where?: MahasiswaWhereInput
  }

  /**
   * Mahasiswa.matakuliahs
   */
  export type Mahasiswa$matakuliahsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliahMahasiswa
     */
    select?: MataKuliahMahasiswaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahMahasiswaInclude<ExtArgs> | null
    where?: MataKuliahMahasiswaWhereInput
    orderBy?: MataKuliahMahasiswaOrderByWithRelationInput | MataKuliahMahasiswaOrderByWithRelationInput[]
    cursor?: MataKuliahMahasiswaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MataKuliahMahasiswaScalarFieldEnum | MataKuliahMahasiswaScalarFieldEnum[]
  }

  /**
   * Mahasiswa.nilais
   */
  export type Mahasiswa$nilaisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Nilai
     */
    select?: NilaiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NilaiInclude<ExtArgs> | null
    where?: NilaiWhereInput
    orderBy?: NilaiOrderByWithRelationInput | NilaiOrderByWithRelationInput[]
    cursor?: NilaiWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NilaiScalarFieldEnum | NilaiScalarFieldEnum[]
  }

  /**
   * Mahasiswa without action
   */
  export type MahasiswaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mahasiswa
     */
    select?: MahasiswaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaInclude<ExtArgs> | null
  }


  /**
   * Model MataKuliah
   */

  export type AggregateMataKuliah = {
    _count: MataKuliahCountAggregateOutputType | null
    _avg: MataKuliahAvgAggregateOutputType | null
    _sum: MataKuliahSumAggregateOutputType | null
    _min: MataKuliahMinAggregateOutputType | null
    _max: MataKuliahMaxAggregateOutputType | null
  }

  export type MataKuliahAvgAggregateOutputType = {
    id: number | null
    dosenId: number | null
  }

  export type MataKuliahSumAggregateOutputType = {
    id: number | null
    dosenId: number | null
  }

  export type MataKuliahMinAggregateOutputType = {
    id: number | null
    name: string | null
    dosenId: number | null
  }

  export type MataKuliahMaxAggregateOutputType = {
    id: number | null
    name: string | null
    dosenId: number | null
  }

  export type MataKuliahCountAggregateOutputType = {
    id: number
    name: number
    dosenId: number
    _all: number
  }


  export type MataKuliahAvgAggregateInputType = {
    id?: true
    dosenId?: true
  }

  export type MataKuliahSumAggregateInputType = {
    id?: true
    dosenId?: true
  }

  export type MataKuliahMinAggregateInputType = {
    id?: true
    name?: true
    dosenId?: true
  }

  export type MataKuliahMaxAggregateInputType = {
    id?: true
    name?: true
    dosenId?: true
  }

  export type MataKuliahCountAggregateInputType = {
    id?: true
    name?: true
    dosenId?: true
    _all?: true
  }

  export type MataKuliahAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MataKuliah to aggregate.
     */
    where?: MataKuliahWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MataKuliahs to fetch.
     */
    orderBy?: MataKuliahOrderByWithRelationInput | MataKuliahOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MataKuliahWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MataKuliahs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MataKuliahs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MataKuliahs
    **/
    _count?: true | MataKuliahCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MataKuliahAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MataKuliahSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MataKuliahMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MataKuliahMaxAggregateInputType
  }

  export type GetMataKuliahAggregateType<T extends MataKuliahAggregateArgs> = {
        [P in keyof T & keyof AggregateMataKuliah]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMataKuliah[P]>
      : GetScalarType<T[P], AggregateMataKuliah[P]>
  }




  export type MataKuliahGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MataKuliahWhereInput
    orderBy?: MataKuliahOrderByWithAggregationInput | MataKuliahOrderByWithAggregationInput[]
    by: MataKuliahScalarFieldEnum[] | MataKuliahScalarFieldEnum
    having?: MataKuliahScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MataKuliahCountAggregateInputType | true
    _avg?: MataKuliahAvgAggregateInputType
    _sum?: MataKuliahSumAggregateInputType
    _min?: MataKuliahMinAggregateInputType
    _max?: MataKuliahMaxAggregateInputType
  }

  export type MataKuliahGroupByOutputType = {
    id: number
    name: string
    dosenId: number
    _count: MataKuliahCountAggregateOutputType | null
    _avg: MataKuliahAvgAggregateOutputType | null
    _sum: MataKuliahSumAggregateOutputType | null
    _min: MataKuliahMinAggregateOutputType | null
    _max: MataKuliahMaxAggregateOutputType | null
  }

  type GetMataKuliahGroupByPayload<T extends MataKuliahGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MataKuliahGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MataKuliahGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MataKuliahGroupByOutputType[P]>
            : GetScalarType<T[P], MataKuliahGroupByOutputType[P]>
        }
      >
    >


  export type MataKuliahSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    dosenId?: boolean
    dosen?: boolean | DosenDefaultArgs<ExtArgs>
    mahasiswas?: boolean | MataKuliah$mahasiswasArgs<ExtArgs>
    nilais?: boolean | MataKuliah$nilaisArgs<ExtArgs>
    _count?: boolean | MataKuliahCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mataKuliah"]>

  export type MataKuliahSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    dosenId?: boolean
    dosen?: boolean | DosenDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mataKuliah"]>

  export type MataKuliahSelectScalar = {
    id?: boolean
    name?: boolean
    dosenId?: boolean
  }

  export type MataKuliahInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    dosen?: boolean | DosenDefaultArgs<ExtArgs>
    mahasiswas?: boolean | MataKuliah$mahasiswasArgs<ExtArgs>
    nilais?: boolean | MataKuliah$nilaisArgs<ExtArgs>
    _count?: boolean | MataKuliahCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type MataKuliahIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    dosen?: boolean | DosenDefaultArgs<ExtArgs>
  }

  export type $MataKuliahPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MataKuliah"
    objects: {
      dosen: Prisma.$DosenPayload<ExtArgs>
      mahasiswas: Prisma.$MataKuliahMahasiswaPayload<ExtArgs>[]
      nilais: Prisma.$NilaiPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      dosenId: number
    }, ExtArgs["result"]["mataKuliah"]>
    composites: {}
  }

  type MataKuliahGetPayload<S extends boolean | null | undefined | MataKuliahDefaultArgs> = $Result.GetResult<Prisma.$MataKuliahPayload, S>

  type MataKuliahCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<MataKuliahFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: MataKuliahCountAggregateInputType | true
    }

  export interface MataKuliahDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MataKuliah'], meta: { name: 'MataKuliah' } }
    /**
     * Find zero or one MataKuliah that matches the filter.
     * @param {MataKuliahFindUniqueArgs} args - Arguments to find a MataKuliah
     * @example
     * // Get one MataKuliah
     * const mataKuliah = await prisma.mataKuliah.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MataKuliahFindUniqueArgs>(args: SelectSubset<T, MataKuliahFindUniqueArgs<ExtArgs>>): Prisma__MataKuliahClient<$Result.GetResult<Prisma.$MataKuliahPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one MataKuliah that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {MataKuliahFindUniqueOrThrowArgs} args - Arguments to find a MataKuliah
     * @example
     * // Get one MataKuliah
     * const mataKuliah = await prisma.mataKuliah.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MataKuliahFindUniqueOrThrowArgs>(args: SelectSubset<T, MataKuliahFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MataKuliahClient<$Result.GetResult<Prisma.$MataKuliahPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first MataKuliah that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MataKuliahFindFirstArgs} args - Arguments to find a MataKuliah
     * @example
     * // Get one MataKuliah
     * const mataKuliah = await prisma.mataKuliah.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MataKuliahFindFirstArgs>(args?: SelectSubset<T, MataKuliahFindFirstArgs<ExtArgs>>): Prisma__MataKuliahClient<$Result.GetResult<Prisma.$MataKuliahPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first MataKuliah that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MataKuliahFindFirstOrThrowArgs} args - Arguments to find a MataKuliah
     * @example
     * // Get one MataKuliah
     * const mataKuliah = await prisma.mataKuliah.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MataKuliahFindFirstOrThrowArgs>(args?: SelectSubset<T, MataKuliahFindFirstOrThrowArgs<ExtArgs>>): Prisma__MataKuliahClient<$Result.GetResult<Prisma.$MataKuliahPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more MataKuliahs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MataKuliahFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MataKuliahs
     * const mataKuliahs = await prisma.mataKuliah.findMany()
     * 
     * // Get first 10 MataKuliahs
     * const mataKuliahs = await prisma.mataKuliah.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const mataKuliahWithIdOnly = await prisma.mataKuliah.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MataKuliahFindManyArgs>(args?: SelectSubset<T, MataKuliahFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MataKuliahPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a MataKuliah.
     * @param {MataKuliahCreateArgs} args - Arguments to create a MataKuliah.
     * @example
     * // Create one MataKuliah
     * const MataKuliah = await prisma.mataKuliah.create({
     *   data: {
     *     // ... data to create a MataKuliah
     *   }
     * })
     * 
     */
    create<T extends MataKuliahCreateArgs>(args: SelectSubset<T, MataKuliahCreateArgs<ExtArgs>>): Prisma__MataKuliahClient<$Result.GetResult<Prisma.$MataKuliahPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many MataKuliahs.
     * @param {MataKuliahCreateManyArgs} args - Arguments to create many MataKuliahs.
     * @example
     * // Create many MataKuliahs
     * const mataKuliah = await prisma.mataKuliah.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MataKuliahCreateManyArgs>(args?: SelectSubset<T, MataKuliahCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MataKuliahs and returns the data saved in the database.
     * @param {MataKuliahCreateManyAndReturnArgs} args - Arguments to create many MataKuliahs.
     * @example
     * // Create many MataKuliahs
     * const mataKuliah = await prisma.mataKuliah.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MataKuliahs and only return the `id`
     * const mataKuliahWithIdOnly = await prisma.mataKuliah.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MataKuliahCreateManyAndReturnArgs>(args?: SelectSubset<T, MataKuliahCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MataKuliahPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a MataKuliah.
     * @param {MataKuliahDeleteArgs} args - Arguments to delete one MataKuliah.
     * @example
     * // Delete one MataKuliah
     * const MataKuliah = await prisma.mataKuliah.delete({
     *   where: {
     *     // ... filter to delete one MataKuliah
     *   }
     * })
     * 
     */
    delete<T extends MataKuliahDeleteArgs>(args: SelectSubset<T, MataKuliahDeleteArgs<ExtArgs>>): Prisma__MataKuliahClient<$Result.GetResult<Prisma.$MataKuliahPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one MataKuliah.
     * @param {MataKuliahUpdateArgs} args - Arguments to update one MataKuliah.
     * @example
     * // Update one MataKuliah
     * const mataKuliah = await prisma.mataKuliah.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MataKuliahUpdateArgs>(args: SelectSubset<T, MataKuliahUpdateArgs<ExtArgs>>): Prisma__MataKuliahClient<$Result.GetResult<Prisma.$MataKuliahPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more MataKuliahs.
     * @param {MataKuliahDeleteManyArgs} args - Arguments to filter MataKuliahs to delete.
     * @example
     * // Delete a few MataKuliahs
     * const { count } = await prisma.mataKuliah.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MataKuliahDeleteManyArgs>(args?: SelectSubset<T, MataKuliahDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MataKuliahs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MataKuliahUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MataKuliahs
     * const mataKuliah = await prisma.mataKuliah.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MataKuliahUpdateManyArgs>(args: SelectSubset<T, MataKuliahUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one MataKuliah.
     * @param {MataKuliahUpsertArgs} args - Arguments to update or create a MataKuliah.
     * @example
     * // Update or create a MataKuliah
     * const mataKuliah = await prisma.mataKuliah.upsert({
     *   create: {
     *     // ... data to create a MataKuliah
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MataKuliah we want to update
     *   }
     * })
     */
    upsert<T extends MataKuliahUpsertArgs>(args: SelectSubset<T, MataKuliahUpsertArgs<ExtArgs>>): Prisma__MataKuliahClient<$Result.GetResult<Prisma.$MataKuliahPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of MataKuliahs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MataKuliahCountArgs} args - Arguments to filter MataKuliahs to count.
     * @example
     * // Count the number of MataKuliahs
     * const count = await prisma.mataKuliah.count({
     *   where: {
     *     // ... the filter for the MataKuliahs we want to count
     *   }
     * })
    **/
    count<T extends MataKuliahCountArgs>(
      args?: Subset<T, MataKuliahCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MataKuliahCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MataKuliah.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MataKuliahAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MataKuliahAggregateArgs>(args: Subset<T, MataKuliahAggregateArgs>): Prisma.PrismaPromise<GetMataKuliahAggregateType<T>>

    /**
     * Group by MataKuliah.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MataKuliahGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MataKuliahGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MataKuliahGroupByArgs['orderBy'] }
        : { orderBy?: MataKuliahGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MataKuliahGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMataKuliahGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MataKuliah model
   */
  readonly fields: MataKuliahFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MataKuliah.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MataKuliahClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    dosen<T extends DosenDefaultArgs<ExtArgs> = {}>(args?: Subset<T, DosenDefaultArgs<ExtArgs>>): Prisma__DosenClient<$Result.GetResult<Prisma.$DosenPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    mahasiswas<T extends MataKuliah$mahasiswasArgs<ExtArgs> = {}>(args?: Subset<T, MataKuliah$mahasiswasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MataKuliahMahasiswaPayload<ExtArgs>, T, "findMany"> | Null>
    nilais<T extends MataKuliah$nilaisArgs<ExtArgs> = {}>(args?: Subset<T, MataKuliah$nilaisArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NilaiPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MataKuliah model
   */ 
  interface MataKuliahFieldRefs {
    readonly id: FieldRef<"MataKuliah", 'Int'>
    readonly name: FieldRef<"MataKuliah", 'String'>
    readonly dosenId: FieldRef<"MataKuliah", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * MataKuliah findUnique
   */
  export type MataKuliahFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliah
     */
    select?: MataKuliahSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahInclude<ExtArgs> | null
    /**
     * Filter, which MataKuliah to fetch.
     */
    where: MataKuliahWhereUniqueInput
  }

  /**
   * MataKuliah findUniqueOrThrow
   */
  export type MataKuliahFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliah
     */
    select?: MataKuliahSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahInclude<ExtArgs> | null
    /**
     * Filter, which MataKuliah to fetch.
     */
    where: MataKuliahWhereUniqueInput
  }

  /**
   * MataKuliah findFirst
   */
  export type MataKuliahFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliah
     */
    select?: MataKuliahSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahInclude<ExtArgs> | null
    /**
     * Filter, which MataKuliah to fetch.
     */
    where?: MataKuliahWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MataKuliahs to fetch.
     */
    orderBy?: MataKuliahOrderByWithRelationInput | MataKuliahOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MataKuliahs.
     */
    cursor?: MataKuliahWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MataKuliahs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MataKuliahs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MataKuliahs.
     */
    distinct?: MataKuliahScalarFieldEnum | MataKuliahScalarFieldEnum[]
  }

  /**
   * MataKuliah findFirstOrThrow
   */
  export type MataKuliahFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliah
     */
    select?: MataKuliahSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahInclude<ExtArgs> | null
    /**
     * Filter, which MataKuliah to fetch.
     */
    where?: MataKuliahWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MataKuliahs to fetch.
     */
    orderBy?: MataKuliahOrderByWithRelationInput | MataKuliahOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MataKuliahs.
     */
    cursor?: MataKuliahWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MataKuliahs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MataKuliahs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MataKuliahs.
     */
    distinct?: MataKuliahScalarFieldEnum | MataKuliahScalarFieldEnum[]
  }

  /**
   * MataKuliah findMany
   */
  export type MataKuliahFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliah
     */
    select?: MataKuliahSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahInclude<ExtArgs> | null
    /**
     * Filter, which MataKuliahs to fetch.
     */
    where?: MataKuliahWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MataKuliahs to fetch.
     */
    orderBy?: MataKuliahOrderByWithRelationInput | MataKuliahOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MataKuliahs.
     */
    cursor?: MataKuliahWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MataKuliahs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MataKuliahs.
     */
    skip?: number
    distinct?: MataKuliahScalarFieldEnum | MataKuliahScalarFieldEnum[]
  }

  /**
   * MataKuliah create
   */
  export type MataKuliahCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliah
     */
    select?: MataKuliahSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahInclude<ExtArgs> | null
    /**
     * The data needed to create a MataKuliah.
     */
    data: XOR<MataKuliahCreateInput, MataKuliahUncheckedCreateInput>
  }

  /**
   * MataKuliah createMany
   */
  export type MataKuliahCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MataKuliahs.
     */
    data: MataKuliahCreateManyInput | MataKuliahCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MataKuliah createManyAndReturn
   */
  export type MataKuliahCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliah
     */
    select?: MataKuliahSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many MataKuliahs.
     */
    data: MataKuliahCreateManyInput | MataKuliahCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * MataKuliah update
   */
  export type MataKuliahUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliah
     */
    select?: MataKuliahSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahInclude<ExtArgs> | null
    /**
     * The data needed to update a MataKuliah.
     */
    data: XOR<MataKuliahUpdateInput, MataKuliahUncheckedUpdateInput>
    /**
     * Choose, which MataKuliah to update.
     */
    where: MataKuliahWhereUniqueInput
  }

  /**
   * MataKuliah updateMany
   */
  export type MataKuliahUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MataKuliahs.
     */
    data: XOR<MataKuliahUpdateManyMutationInput, MataKuliahUncheckedUpdateManyInput>
    /**
     * Filter which MataKuliahs to update
     */
    where?: MataKuliahWhereInput
  }

  /**
   * MataKuliah upsert
   */
  export type MataKuliahUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliah
     */
    select?: MataKuliahSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahInclude<ExtArgs> | null
    /**
     * The filter to search for the MataKuliah to update in case it exists.
     */
    where: MataKuliahWhereUniqueInput
    /**
     * In case the MataKuliah found by the `where` argument doesn't exist, create a new MataKuliah with this data.
     */
    create: XOR<MataKuliahCreateInput, MataKuliahUncheckedCreateInput>
    /**
     * In case the MataKuliah was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MataKuliahUpdateInput, MataKuliahUncheckedUpdateInput>
  }

  /**
   * MataKuliah delete
   */
  export type MataKuliahDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliah
     */
    select?: MataKuliahSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahInclude<ExtArgs> | null
    /**
     * Filter which MataKuliah to delete.
     */
    where: MataKuliahWhereUniqueInput
  }

  /**
   * MataKuliah deleteMany
   */
  export type MataKuliahDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MataKuliahs to delete
     */
    where?: MataKuliahWhereInput
  }

  /**
   * MataKuliah.mahasiswas
   */
  export type MataKuliah$mahasiswasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliahMahasiswa
     */
    select?: MataKuliahMahasiswaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahMahasiswaInclude<ExtArgs> | null
    where?: MataKuliahMahasiswaWhereInput
    orderBy?: MataKuliahMahasiswaOrderByWithRelationInput | MataKuliahMahasiswaOrderByWithRelationInput[]
    cursor?: MataKuliahMahasiswaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MataKuliahMahasiswaScalarFieldEnum | MataKuliahMahasiswaScalarFieldEnum[]
  }

  /**
   * MataKuliah.nilais
   */
  export type MataKuliah$nilaisArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Nilai
     */
    select?: NilaiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NilaiInclude<ExtArgs> | null
    where?: NilaiWhereInput
    orderBy?: NilaiOrderByWithRelationInput | NilaiOrderByWithRelationInput[]
    cursor?: NilaiWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NilaiScalarFieldEnum | NilaiScalarFieldEnum[]
  }

  /**
   * MataKuliah without action
   */
  export type MataKuliahDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliah
     */
    select?: MataKuliahSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahInclude<ExtArgs> | null
  }


  /**
   * Model Dosen
   */

  export type AggregateDosen = {
    _count: DosenCountAggregateOutputType | null
    _avg: DosenAvgAggregateOutputType | null
    _sum: DosenSumAggregateOutputType | null
    _min: DosenMinAggregateOutputType | null
    _max: DosenMaxAggregateOutputType | null
  }

  export type DosenAvgAggregateOutputType = {
    id: number | null
    roleId: number | null
  }

  export type DosenSumAggregateOutputType = {
    id: number | null
    roleId: number | null
  }

  export type DosenMinAggregateOutputType = {
    id: number | null
    username: string | null
    password: string | null
    name: string | null
    email: string | null
    createdAt: Date | null
    updatedAt: Date | null
    roleId: number | null
  }

  export type DosenMaxAggregateOutputType = {
    id: number | null
    username: string | null
    password: string | null
    name: string | null
    email: string | null
    createdAt: Date | null
    updatedAt: Date | null
    roleId: number | null
  }

  export type DosenCountAggregateOutputType = {
    id: number
    username: number
    password: number
    name: number
    email: number
    createdAt: number
    updatedAt: number
    roleId: number
    _all: number
  }


  export type DosenAvgAggregateInputType = {
    id?: true
    roleId?: true
  }

  export type DosenSumAggregateInputType = {
    id?: true
    roleId?: true
  }

  export type DosenMinAggregateInputType = {
    id?: true
    username?: true
    password?: true
    name?: true
    email?: true
    createdAt?: true
    updatedAt?: true
    roleId?: true
  }

  export type DosenMaxAggregateInputType = {
    id?: true
    username?: true
    password?: true
    name?: true
    email?: true
    createdAt?: true
    updatedAt?: true
    roleId?: true
  }

  export type DosenCountAggregateInputType = {
    id?: true
    username?: true
    password?: true
    name?: true
    email?: true
    createdAt?: true
    updatedAt?: true
    roleId?: true
    _all?: true
  }

  export type DosenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Dosen to aggregate.
     */
    where?: DosenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Dosens to fetch.
     */
    orderBy?: DosenOrderByWithRelationInput | DosenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DosenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Dosens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Dosens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Dosens
    **/
    _count?: true | DosenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DosenAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DosenSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DosenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DosenMaxAggregateInputType
  }

  export type GetDosenAggregateType<T extends DosenAggregateArgs> = {
        [P in keyof T & keyof AggregateDosen]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDosen[P]>
      : GetScalarType<T[P], AggregateDosen[P]>
  }




  export type DosenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DosenWhereInput
    orderBy?: DosenOrderByWithAggregationInput | DosenOrderByWithAggregationInput[]
    by: DosenScalarFieldEnum[] | DosenScalarFieldEnum
    having?: DosenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DosenCountAggregateInputType | true
    _avg?: DosenAvgAggregateInputType
    _sum?: DosenSumAggregateInputType
    _min?: DosenMinAggregateInputType
    _max?: DosenMaxAggregateInputType
  }

  export type DosenGroupByOutputType = {
    id: number
    username: string
    password: string
    name: string
    email: string
    createdAt: Date
    updatedAt: Date
    roleId: number
    _count: DosenCountAggregateOutputType | null
    _avg: DosenAvgAggregateOutputType | null
    _sum: DosenSumAggregateOutputType | null
    _min: DosenMinAggregateOutputType | null
    _max: DosenMaxAggregateOutputType | null
  }

  type GetDosenGroupByPayload<T extends DosenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DosenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DosenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DosenGroupByOutputType[P]>
            : GetScalarType<T[P], DosenGroupByOutputType[P]>
        }
      >
    >


  export type DosenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    password?: boolean
    name?: boolean
    email?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    roleId?: boolean
    matakuliahs?: boolean | Dosen$matakuliahsArgs<ExtArgs>
    role?: boolean | RoleDefaultArgs<ExtArgs>
    _count?: boolean | DosenCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["dosen"]>

  export type DosenSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    password?: boolean
    name?: boolean
    email?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    roleId?: boolean
    role?: boolean | RoleDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["dosen"]>

  export type DosenSelectScalar = {
    id?: boolean
    username?: boolean
    password?: boolean
    name?: boolean
    email?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    roleId?: boolean
  }

  export type DosenInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    matakuliahs?: boolean | Dosen$matakuliahsArgs<ExtArgs>
    role?: boolean | RoleDefaultArgs<ExtArgs>
    _count?: boolean | DosenCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type DosenIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    role?: boolean | RoleDefaultArgs<ExtArgs>
  }

  export type $DosenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Dosen"
    objects: {
      matakuliahs: Prisma.$MataKuliahPayload<ExtArgs>[]
      role: Prisma.$RolePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      username: string
      password: string
      name: string
      email: string
      createdAt: Date
      updatedAt: Date
      roleId: number
    }, ExtArgs["result"]["dosen"]>
    composites: {}
  }

  type DosenGetPayload<S extends boolean | null | undefined | DosenDefaultArgs> = $Result.GetResult<Prisma.$DosenPayload, S>

  type DosenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<DosenFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DosenCountAggregateInputType | true
    }

  export interface DosenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Dosen'], meta: { name: 'Dosen' } }
    /**
     * Find zero or one Dosen that matches the filter.
     * @param {DosenFindUniqueArgs} args - Arguments to find a Dosen
     * @example
     * // Get one Dosen
     * const dosen = await prisma.dosen.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DosenFindUniqueArgs>(args: SelectSubset<T, DosenFindUniqueArgs<ExtArgs>>): Prisma__DosenClient<$Result.GetResult<Prisma.$DosenPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Dosen that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {DosenFindUniqueOrThrowArgs} args - Arguments to find a Dosen
     * @example
     * // Get one Dosen
     * const dosen = await prisma.dosen.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DosenFindUniqueOrThrowArgs>(args: SelectSubset<T, DosenFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DosenClient<$Result.GetResult<Prisma.$DosenPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Dosen that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DosenFindFirstArgs} args - Arguments to find a Dosen
     * @example
     * // Get one Dosen
     * const dosen = await prisma.dosen.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DosenFindFirstArgs>(args?: SelectSubset<T, DosenFindFirstArgs<ExtArgs>>): Prisma__DosenClient<$Result.GetResult<Prisma.$DosenPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Dosen that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DosenFindFirstOrThrowArgs} args - Arguments to find a Dosen
     * @example
     * // Get one Dosen
     * const dosen = await prisma.dosen.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DosenFindFirstOrThrowArgs>(args?: SelectSubset<T, DosenFindFirstOrThrowArgs<ExtArgs>>): Prisma__DosenClient<$Result.GetResult<Prisma.$DosenPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Dosens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DosenFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Dosens
     * const dosens = await prisma.dosen.findMany()
     * 
     * // Get first 10 Dosens
     * const dosens = await prisma.dosen.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const dosenWithIdOnly = await prisma.dosen.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DosenFindManyArgs>(args?: SelectSubset<T, DosenFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DosenPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Dosen.
     * @param {DosenCreateArgs} args - Arguments to create a Dosen.
     * @example
     * // Create one Dosen
     * const Dosen = await prisma.dosen.create({
     *   data: {
     *     // ... data to create a Dosen
     *   }
     * })
     * 
     */
    create<T extends DosenCreateArgs>(args: SelectSubset<T, DosenCreateArgs<ExtArgs>>): Prisma__DosenClient<$Result.GetResult<Prisma.$DosenPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Dosens.
     * @param {DosenCreateManyArgs} args - Arguments to create many Dosens.
     * @example
     * // Create many Dosens
     * const dosen = await prisma.dosen.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DosenCreateManyArgs>(args?: SelectSubset<T, DosenCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Dosens and returns the data saved in the database.
     * @param {DosenCreateManyAndReturnArgs} args - Arguments to create many Dosens.
     * @example
     * // Create many Dosens
     * const dosen = await prisma.dosen.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Dosens and only return the `id`
     * const dosenWithIdOnly = await prisma.dosen.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DosenCreateManyAndReturnArgs>(args?: SelectSubset<T, DosenCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DosenPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Dosen.
     * @param {DosenDeleteArgs} args - Arguments to delete one Dosen.
     * @example
     * // Delete one Dosen
     * const Dosen = await prisma.dosen.delete({
     *   where: {
     *     // ... filter to delete one Dosen
     *   }
     * })
     * 
     */
    delete<T extends DosenDeleteArgs>(args: SelectSubset<T, DosenDeleteArgs<ExtArgs>>): Prisma__DosenClient<$Result.GetResult<Prisma.$DosenPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Dosen.
     * @param {DosenUpdateArgs} args - Arguments to update one Dosen.
     * @example
     * // Update one Dosen
     * const dosen = await prisma.dosen.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DosenUpdateArgs>(args: SelectSubset<T, DosenUpdateArgs<ExtArgs>>): Prisma__DosenClient<$Result.GetResult<Prisma.$DosenPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Dosens.
     * @param {DosenDeleteManyArgs} args - Arguments to filter Dosens to delete.
     * @example
     * // Delete a few Dosens
     * const { count } = await prisma.dosen.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DosenDeleteManyArgs>(args?: SelectSubset<T, DosenDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Dosens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DosenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Dosens
     * const dosen = await prisma.dosen.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DosenUpdateManyArgs>(args: SelectSubset<T, DosenUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Dosen.
     * @param {DosenUpsertArgs} args - Arguments to update or create a Dosen.
     * @example
     * // Update or create a Dosen
     * const dosen = await prisma.dosen.upsert({
     *   create: {
     *     // ... data to create a Dosen
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Dosen we want to update
     *   }
     * })
     */
    upsert<T extends DosenUpsertArgs>(args: SelectSubset<T, DosenUpsertArgs<ExtArgs>>): Prisma__DosenClient<$Result.GetResult<Prisma.$DosenPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Dosens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DosenCountArgs} args - Arguments to filter Dosens to count.
     * @example
     * // Count the number of Dosens
     * const count = await prisma.dosen.count({
     *   where: {
     *     // ... the filter for the Dosens we want to count
     *   }
     * })
    **/
    count<T extends DosenCountArgs>(
      args?: Subset<T, DosenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DosenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Dosen.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DosenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DosenAggregateArgs>(args: Subset<T, DosenAggregateArgs>): Prisma.PrismaPromise<GetDosenAggregateType<T>>

    /**
     * Group by Dosen.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DosenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DosenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DosenGroupByArgs['orderBy'] }
        : { orderBy?: DosenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DosenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDosenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Dosen model
   */
  readonly fields: DosenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Dosen.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DosenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    matakuliahs<T extends Dosen$matakuliahsArgs<ExtArgs> = {}>(args?: Subset<T, Dosen$matakuliahsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MataKuliahPayload<ExtArgs>, T, "findMany"> | Null>
    role<T extends RoleDefaultArgs<ExtArgs> = {}>(args?: Subset<T, RoleDefaultArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Dosen model
   */ 
  interface DosenFieldRefs {
    readonly id: FieldRef<"Dosen", 'Int'>
    readonly username: FieldRef<"Dosen", 'String'>
    readonly password: FieldRef<"Dosen", 'String'>
    readonly name: FieldRef<"Dosen", 'String'>
    readonly email: FieldRef<"Dosen", 'String'>
    readonly createdAt: FieldRef<"Dosen", 'DateTime'>
    readonly updatedAt: FieldRef<"Dosen", 'DateTime'>
    readonly roleId: FieldRef<"Dosen", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Dosen findUnique
   */
  export type DosenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Dosen
     */
    select?: DosenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DosenInclude<ExtArgs> | null
    /**
     * Filter, which Dosen to fetch.
     */
    where: DosenWhereUniqueInput
  }

  /**
   * Dosen findUniqueOrThrow
   */
  export type DosenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Dosen
     */
    select?: DosenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DosenInclude<ExtArgs> | null
    /**
     * Filter, which Dosen to fetch.
     */
    where: DosenWhereUniqueInput
  }

  /**
   * Dosen findFirst
   */
  export type DosenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Dosen
     */
    select?: DosenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DosenInclude<ExtArgs> | null
    /**
     * Filter, which Dosen to fetch.
     */
    where?: DosenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Dosens to fetch.
     */
    orderBy?: DosenOrderByWithRelationInput | DosenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Dosens.
     */
    cursor?: DosenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Dosens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Dosens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Dosens.
     */
    distinct?: DosenScalarFieldEnum | DosenScalarFieldEnum[]
  }

  /**
   * Dosen findFirstOrThrow
   */
  export type DosenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Dosen
     */
    select?: DosenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DosenInclude<ExtArgs> | null
    /**
     * Filter, which Dosen to fetch.
     */
    where?: DosenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Dosens to fetch.
     */
    orderBy?: DosenOrderByWithRelationInput | DosenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Dosens.
     */
    cursor?: DosenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Dosens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Dosens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Dosens.
     */
    distinct?: DosenScalarFieldEnum | DosenScalarFieldEnum[]
  }

  /**
   * Dosen findMany
   */
  export type DosenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Dosen
     */
    select?: DosenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DosenInclude<ExtArgs> | null
    /**
     * Filter, which Dosens to fetch.
     */
    where?: DosenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Dosens to fetch.
     */
    orderBy?: DosenOrderByWithRelationInput | DosenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Dosens.
     */
    cursor?: DosenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Dosens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Dosens.
     */
    skip?: number
    distinct?: DosenScalarFieldEnum | DosenScalarFieldEnum[]
  }

  /**
   * Dosen create
   */
  export type DosenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Dosen
     */
    select?: DosenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DosenInclude<ExtArgs> | null
    /**
     * The data needed to create a Dosen.
     */
    data: XOR<DosenCreateInput, DosenUncheckedCreateInput>
  }

  /**
   * Dosen createMany
   */
  export type DosenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Dosens.
     */
    data: DosenCreateManyInput | DosenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Dosen createManyAndReturn
   */
  export type DosenCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Dosen
     */
    select?: DosenSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Dosens.
     */
    data: DosenCreateManyInput | DosenCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DosenIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Dosen update
   */
  export type DosenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Dosen
     */
    select?: DosenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DosenInclude<ExtArgs> | null
    /**
     * The data needed to update a Dosen.
     */
    data: XOR<DosenUpdateInput, DosenUncheckedUpdateInput>
    /**
     * Choose, which Dosen to update.
     */
    where: DosenWhereUniqueInput
  }

  /**
   * Dosen updateMany
   */
  export type DosenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Dosens.
     */
    data: XOR<DosenUpdateManyMutationInput, DosenUncheckedUpdateManyInput>
    /**
     * Filter which Dosens to update
     */
    where?: DosenWhereInput
  }

  /**
   * Dosen upsert
   */
  export type DosenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Dosen
     */
    select?: DosenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DosenInclude<ExtArgs> | null
    /**
     * The filter to search for the Dosen to update in case it exists.
     */
    where: DosenWhereUniqueInput
    /**
     * In case the Dosen found by the `where` argument doesn't exist, create a new Dosen with this data.
     */
    create: XOR<DosenCreateInput, DosenUncheckedCreateInput>
    /**
     * In case the Dosen was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DosenUpdateInput, DosenUncheckedUpdateInput>
  }

  /**
   * Dosen delete
   */
  export type DosenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Dosen
     */
    select?: DosenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DosenInclude<ExtArgs> | null
    /**
     * Filter which Dosen to delete.
     */
    where: DosenWhereUniqueInput
  }

  /**
   * Dosen deleteMany
   */
  export type DosenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Dosens to delete
     */
    where?: DosenWhereInput
  }

  /**
   * Dosen.matakuliahs
   */
  export type Dosen$matakuliahsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliah
     */
    select?: MataKuliahSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahInclude<ExtArgs> | null
    where?: MataKuliahWhereInput
    orderBy?: MataKuliahOrderByWithRelationInput | MataKuliahOrderByWithRelationInput[]
    cursor?: MataKuliahWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MataKuliahScalarFieldEnum | MataKuliahScalarFieldEnum[]
  }

  /**
   * Dosen without action
   */
  export type DosenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Dosen
     */
    select?: DosenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DosenInclude<ExtArgs> | null
  }


  /**
   * Model Nilai
   */

  export type AggregateNilai = {
    _count: NilaiCountAggregateOutputType | null
    _avg: NilaiAvgAggregateOutputType | null
    _sum: NilaiSumAggregateOutputType | null
    _min: NilaiMinAggregateOutputType | null
    _max: NilaiMaxAggregateOutputType | null
  }

  export type NilaiAvgAggregateOutputType = {
    id: number | null
    value: number | null
    mahasiswaId: number | null
    matakuliahId: number | null
  }

  export type NilaiSumAggregateOutputType = {
    id: number | null
    value: number | null
    mahasiswaId: number | null
    matakuliahId: number | null
  }

  export type NilaiMinAggregateOutputType = {
    id: number | null
    value: number | null
    mahasiswaId: number | null
    matakuliahId: number | null
  }

  export type NilaiMaxAggregateOutputType = {
    id: number | null
    value: number | null
    mahasiswaId: number | null
    matakuliahId: number | null
  }

  export type NilaiCountAggregateOutputType = {
    id: number
    value: number
    mahasiswaId: number
    matakuliahId: number
    _all: number
  }


  export type NilaiAvgAggregateInputType = {
    id?: true
    value?: true
    mahasiswaId?: true
    matakuliahId?: true
  }

  export type NilaiSumAggregateInputType = {
    id?: true
    value?: true
    mahasiswaId?: true
    matakuliahId?: true
  }

  export type NilaiMinAggregateInputType = {
    id?: true
    value?: true
    mahasiswaId?: true
    matakuliahId?: true
  }

  export type NilaiMaxAggregateInputType = {
    id?: true
    value?: true
    mahasiswaId?: true
    matakuliahId?: true
  }

  export type NilaiCountAggregateInputType = {
    id?: true
    value?: true
    mahasiswaId?: true
    matakuliahId?: true
    _all?: true
  }

  export type NilaiAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Nilai to aggregate.
     */
    where?: NilaiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Nilais to fetch.
     */
    orderBy?: NilaiOrderByWithRelationInput | NilaiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: NilaiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Nilais from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Nilais.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Nilais
    **/
    _count?: true | NilaiCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: NilaiAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: NilaiSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NilaiMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NilaiMaxAggregateInputType
  }

  export type GetNilaiAggregateType<T extends NilaiAggregateArgs> = {
        [P in keyof T & keyof AggregateNilai]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNilai[P]>
      : GetScalarType<T[P], AggregateNilai[P]>
  }




  export type NilaiGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NilaiWhereInput
    orderBy?: NilaiOrderByWithAggregationInput | NilaiOrderByWithAggregationInput[]
    by: NilaiScalarFieldEnum[] | NilaiScalarFieldEnum
    having?: NilaiScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NilaiCountAggregateInputType | true
    _avg?: NilaiAvgAggregateInputType
    _sum?: NilaiSumAggregateInputType
    _min?: NilaiMinAggregateInputType
    _max?: NilaiMaxAggregateInputType
  }

  export type NilaiGroupByOutputType = {
    id: number
    value: number
    mahasiswaId: number
    matakuliahId: number
    _count: NilaiCountAggregateOutputType | null
    _avg: NilaiAvgAggregateOutputType | null
    _sum: NilaiSumAggregateOutputType | null
    _min: NilaiMinAggregateOutputType | null
    _max: NilaiMaxAggregateOutputType | null
  }

  type GetNilaiGroupByPayload<T extends NilaiGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NilaiGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NilaiGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NilaiGroupByOutputType[P]>
            : GetScalarType<T[P], NilaiGroupByOutputType[P]>
        }
      >
    >


  export type NilaiSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    value?: boolean
    mahasiswaId?: boolean
    matakuliahId?: boolean
    mahasiswa?: boolean | MahasiswaDefaultArgs<ExtArgs>
    matakuliah?: boolean | MataKuliahDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["nilai"]>

  export type NilaiSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    value?: boolean
    mahasiswaId?: boolean
    matakuliahId?: boolean
    mahasiswa?: boolean | MahasiswaDefaultArgs<ExtArgs>
    matakuliah?: boolean | MataKuliahDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["nilai"]>

  export type NilaiSelectScalar = {
    id?: boolean
    value?: boolean
    mahasiswaId?: boolean
    matakuliahId?: boolean
  }

  export type NilaiInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mahasiswa?: boolean | MahasiswaDefaultArgs<ExtArgs>
    matakuliah?: boolean | MataKuliahDefaultArgs<ExtArgs>
  }
  export type NilaiIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mahasiswa?: boolean | MahasiswaDefaultArgs<ExtArgs>
    matakuliah?: boolean | MataKuliahDefaultArgs<ExtArgs>
  }

  export type $NilaiPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Nilai"
    objects: {
      mahasiswa: Prisma.$MahasiswaPayload<ExtArgs>
      matakuliah: Prisma.$MataKuliahPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      value: number
      mahasiswaId: number
      matakuliahId: number
    }, ExtArgs["result"]["nilai"]>
    composites: {}
  }

  type NilaiGetPayload<S extends boolean | null | undefined | NilaiDefaultArgs> = $Result.GetResult<Prisma.$NilaiPayload, S>

  type NilaiCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<NilaiFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: NilaiCountAggregateInputType | true
    }

  export interface NilaiDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Nilai'], meta: { name: 'Nilai' } }
    /**
     * Find zero or one Nilai that matches the filter.
     * @param {NilaiFindUniqueArgs} args - Arguments to find a Nilai
     * @example
     * // Get one Nilai
     * const nilai = await prisma.nilai.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends NilaiFindUniqueArgs>(args: SelectSubset<T, NilaiFindUniqueArgs<ExtArgs>>): Prisma__NilaiClient<$Result.GetResult<Prisma.$NilaiPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Nilai that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {NilaiFindUniqueOrThrowArgs} args - Arguments to find a Nilai
     * @example
     * // Get one Nilai
     * const nilai = await prisma.nilai.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends NilaiFindUniqueOrThrowArgs>(args: SelectSubset<T, NilaiFindUniqueOrThrowArgs<ExtArgs>>): Prisma__NilaiClient<$Result.GetResult<Prisma.$NilaiPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Nilai that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NilaiFindFirstArgs} args - Arguments to find a Nilai
     * @example
     * // Get one Nilai
     * const nilai = await prisma.nilai.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends NilaiFindFirstArgs>(args?: SelectSubset<T, NilaiFindFirstArgs<ExtArgs>>): Prisma__NilaiClient<$Result.GetResult<Prisma.$NilaiPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Nilai that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NilaiFindFirstOrThrowArgs} args - Arguments to find a Nilai
     * @example
     * // Get one Nilai
     * const nilai = await prisma.nilai.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends NilaiFindFirstOrThrowArgs>(args?: SelectSubset<T, NilaiFindFirstOrThrowArgs<ExtArgs>>): Prisma__NilaiClient<$Result.GetResult<Prisma.$NilaiPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Nilais that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NilaiFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Nilais
     * const nilais = await prisma.nilai.findMany()
     * 
     * // Get first 10 Nilais
     * const nilais = await prisma.nilai.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const nilaiWithIdOnly = await prisma.nilai.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends NilaiFindManyArgs>(args?: SelectSubset<T, NilaiFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NilaiPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Nilai.
     * @param {NilaiCreateArgs} args - Arguments to create a Nilai.
     * @example
     * // Create one Nilai
     * const Nilai = await prisma.nilai.create({
     *   data: {
     *     // ... data to create a Nilai
     *   }
     * })
     * 
     */
    create<T extends NilaiCreateArgs>(args: SelectSubset<T, NilaiCreateArgs<ExtArgs>>): Prisma__NilaiClient<$Result.GetResult<Prisma.$NilaiPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Nilais.
     * @param {NilaiCreateManyArgs} args - Arguments to create many Nilais.
     * @example
     * // Create many Nilais
     * const nilai = await prisma.nilai.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends NilaiCreateManyArgs>(args?: SelectSubset<T, NilaiCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Nilais and returns the data saved in the database.
     * @param {NilaiCreateManyAndReturnArgs} args - Arguments to create many Nilais.
     * @example
     * // Create many Nilais
     * const nilai = await prisma.nilai.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Nilais and only return the `id`
     * const nilaiWithIdOnly = await prisma.nilai.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends NilaiCreateManyAndReturnArgs>(args?: SelectSubset<T, NilaiCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NilaiPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Nilai.
     * @param {NilaiDeleteArgs} args - Arguments to delete one Nilai.
     * @example
     * // Delete one Nilai
     * const Nilai = await prisma.nilai.delete({
     *   where: {
     *     // ... filter to delete one Nilai
     *   }
     * })
     * 
     */
    delete<T extends NilaiDeleteArgs>(args: SelectSubset<T, NilaiDeleteArgs<ExtArgs>>): Prisma__NilaiClient<$Result.GetResult<Prisma.$NilaiPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Nilai.
     * @param {NilaiUpdateArgs} args - Arguments to update one Nilai.
     * @example
     * // Update one Nilai
     * const nilai = await prisma.nilai.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends NilaiUpdateArgs>(args: SelectSubset<T, NilaiUpdateArgs<ExtArgs>>): Prisma__NilaiClient<$Result.GetResult<Prisma.$NilaiPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Nilais.
     * @param {NilaiDeleteManyArgs} args - Arguments to filter Nilais to delete.
     * @example
     * // Delete a few Nilais
     * const { count } = await prisma.nilai.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends NilaiDeleteManyArgs>(args?: SelectSubset<T, NilaiDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Nilais.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NilaiUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Nilais
     * const nilai = await prisma.nilai.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends NilaiUpdateManyArgs>(args: SelectSubset<T, NilaiUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Nilai.
     * @param {NilaiUpsertArgs} args - Arguments to update or create a Nilai.
     * @example
     * // Update or create a Nilai
     * const nilai = await prisma.nilai.upsert({
     *   create: {
     *     // ... data to create a Nilai
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Nilai we want to update
     *   }
     * })
     */
    upsert<T extends NilaiUpsertArgs>(args: SelectSubset<T, NilaiUpsertArgs<ExtArgs>>): Prisma__NilaiClient<$Result.GetResult<Prisma.$NilaiPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Nilais.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NilaiCountArgs} args - Arguments to filter Nilais to count.
     * @example
     * // Count the number of Nilais
     * const count = await prisma.nilai.count({
     *   where: {
     *     // ... the filter for the Nilais we want to count
     *   }
     * })
    **/
    count<T extends NilaiCountArgs>(
      args?: Subset<T, NilaiCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NilaiCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Nilai.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NilaiAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NilaiAggregateArgs>(args: Subset<T, NilaiAggregateArgs>): Prisma.PrismaPromise<GetNilaiAggregateType<T>>

    /**
     * Group by Nilai.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NilaiGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends NilaiGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: NilaiGroupByArgs['orderBy'] }
        : { orderBy?: NilaiGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, NilaiGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNilaiGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Nilai model
   */
  readonly fields: NilaiFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Nilai.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__NilaiClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    mahasiswa<T extends MahasiswaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MahasiswaDefaultArgs<ExtArgs>>): Prisma__MahasiswaClient<$Result.GetResult<Prisma.$MahasiswaPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    matakuliah<T extends MataKuliahDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MataKuliahDefaultArgs<ExtArgs>>): Prisma__MataKuliahClient<$Result.GetResult<Prisma.$MataKuliahPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Nilai model
   */ 
  interface NilaiFieldRefs {
    readonly id: FieldRef<"Nilai", 'Int'>
    readonly value: FieldRef<"Nilai", 'Float'>
    readonly mahasiswaId: FieldRef<"Nilai", 'Int'>
    readonly matakuliahId: FieldRef<"Nilai", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Nilai findUnique
   */
  export type NilaiFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Nilai
     */
    select?: NilaiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NilaiInclude<ExtArgs> | null
    /**
     * Filter, which Nilai to fetch.
     */
    where: NilaiWhereUniqueInput
  }

  /**
   * Nilai findUniqueOrThrow
   */
  export type NilaiFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Nilai
     */
    select?: NilaiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NilaiInclude<ExtArgs> | null
    /**
     * Filter, which Nilai to fetch.
     */
    where: NilaiWhereUniqueInput
  }

  /**
   * Nilai findFirst
   */
  export type NilaiFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Nilai
     */
    select?: NilaiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NilaiInclude<ExtArgs> | null
    /**
     * Filter, which Nilai to fetch.
     */
    where?: NilaiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Nilais to fetch.
     */
    orderBy?: NilaiOrderByWithRelationInput | NilaiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Nilais.
     */
    cursor?: NilaiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Nilais from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Nilais.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Nilais.
     */
    distinct?: NilaiScalarFieldEnum | NilaiScalarFieldEnum[]
  }

  /**
   * Nilai findFirstOrThrow
   */
  export type NilaiFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Nilai
     */
    select?: NilaiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NilaiInclude<ExtArgs> | null
    /**
     * Filter, which Nilai to fetch.
     */
    where?: NilaiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Nilais to fetch.
     */
    orderBy?: NilaiOrderByWithRelationInput | NilaiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Nilais.
     */
    cursor?: NilaiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Nilais from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Nilais.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Nilais.
     */
    distinct?: NilaiScalarFieldEnum | NilaiScalarFieldEnum[]
  }

  /**
   * Nilai findMany
   */
  export type NilaiFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Nilai
     */
    select?: NilaiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NilaiInclude<ExtArgs> | null
    /**
     * Filter, which Nilais to fetch.
     */
    where?: NilaiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Nilais to fetch.
     */
    orderBy?: NilaiOrderByWithRelationInput | NilaiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Nilais.
     */
    cursor?: NilaiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Nilais from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Nilais.
     */
    skip?: number
    distinct?: NilaiScalarFieldEnum | NilaiScalarFieldEnum[]
  }

  /**
   * Nilai create
   */
  export type NilaiCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Nilai
     */
    select?: NilaiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NilaiInclude<ExtArgs> | null
    /**
     * The data needed to create a Nilai.
     */
    data: XOR<NilaiCreateInput, NilaiUncheckedCreateInput>
  }

  /**
   * Nilai createMany
   */
  export type NilaiCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Nilais.
     */
    data: NilaiCreateManyInput | NilaiCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Nilai createManyAndReturn
   */
  export type NilaiCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Nilai
     */
    select?: NilaiSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Nilais.
     */
    data: NilaiCreateManyInput | NilaiCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NilaiIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Nilai update
   */
  export type NilaiUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Nilai
     */
    select?: NilaiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NilaiInclude<ExtArgs> | null
    /**
     * The data needed to update a Nilai.
     */
    data: XOR<NilaiUpdateInput, NilaiUncheckedUpdateInput>
    /**
     * Choose, which Nilai to update.
     */
    where: NilaiWhereUniqueInput
  }

  /**
   * Nilai updateMany
   */
  export type NilaiUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Nilais.
     */
    data: XOR<NilaiUpdateManyMutationInput, NilaiUncheckedUpdateManyInput>
    /**
     * Filter which Nilais to update
     */
    where?: NilaiWhereInput
  }

  /**
   * Nilai upsert
   */
  export type NilaiUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Nilai
     */
    select?: NilaiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NilaiInclude<ExtArgs> | null
    /**
     * The filter to search for the Nilai to update in case it exists.
     */
    where: NilaiWhereUniqueInput
    /**
     * In case the Nilai found by the `where` argument doesn't exist, create a new Nilai with this data.
     */
    create: XOR<NilaiCreateInput, NilaiUncheckedCreateInput>
    /**
     * In case the Nilai was found with the provided `where` argument, update it with this data.
     */
    update: XOR<NilaiUpdateInput, NilaiUncheckedUpdateInput>
  }

  /**
   * Nilai delete
   */
  export type NilaiDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Nilai
     */
    select?: NilaiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NilaiInclude<ExtArgs> | null
    /**
     * Filter which Nilai to delete.
     */
    where: NilaiWhereUniqueInput
  }

  /**
   * Nilai deleteMany
   */
  export type NilaiDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Nilais to delete
     */
    where?: NilaiWhereInput
  }

  /**
   * Nilai without action
   */
  export type NilaiDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Nilai
     */
    select?: NilaiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NilaiInclude<ExtArgs> | null
  }


  /**
   * Model MataKuliahMahasiswa
   */

  export type AggregateMataKuliahMahasiswa = {
    _count: MataKuliahMahasiswaCountAggregateOutputType | null
    _avg: MataKuliahMahasiswaAvgAggregateOutputType | null
    _sum: MataKuliahMahasiswaSumAggregateOutputType | null
    _min: MataKuliahMahasiswaMinAggregateOutputType | null
    _max: MataKuliahMahasiswaMaxAggregateOutputType | null
  }

  export type MataKuliahMahasiswaAvgAggregateOutputType = {
    mahasiswaId: number | null
    matakuliahId: number | null
  }

  export type MataKuliahMahasiswaSumAggregateOutputType = {
    mahasiswaId: number | null
    matakuliahId: number | null
  }

  export type MataKuliahMahasiswaMinAggregateOutputType = {
    mahasiswaId: number | null
    matakuliahId: number | null
  }

  export type MataKuliahMahasiswaMaxAggregateOutputType = {
    mahasiswaId: number | null
    matakuliahId: number | null
  }

  export type MataKuliahMahasiswaCountAggregateOutputType = {
    mahasiswaId: number
    matakuliahId: number
    _all: number
  }


  export type MataKuliahMahasiswaAvgAggregateInputType = {
    mahasiswaId?: true
    matakuliahId?: true
  }

  export type MataKuliahMahasiswaSumAggregateInputType = {
    mahasiswaId?: true
    matakuliahId?: true
  }

  export type MataKuliahMahasiswaMinAggregateInputType = {
    mahasiswaId?: true
    matakuliahId?: true
  }

  export type MataKuliahMahasiswaMaxAggregateInputType = {
    mahasiswaId?: true
    matakuliahId?: true
  }

  export type MataKuliahMahasiswaCountAggregateInputType = {
    mahasiswaId?: true
    matakuliahId?: true
    _all?: true
  }

  export type MataKuliahMahasiswaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MataKuliahMahasiswa to aggregate.
     */
    where?: MataKuliahMahasiswaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MataKuliahMahasiswas to fetch.
     */
    orderBy?: MataKuliahMahasiswaOrderByWithRelationInput | MataKuliahMahasiswaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MataKuliahMahasiswaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MataKuliahMahasiswas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MataKuliahMahasiswas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MataKuliahMahasiswas
    **/
    _count?: true | MataKuliahMahasiswaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MataKuliahMahasiswaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MataKuliahMahasiswaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MataKuliahMahasiswaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MataKuliahMahasiswaMaxAggregateInputType
  }

  export type GetMataKuliahMahasiswaAggregateType<T extends MataKuliahMahasiswaAggregateArgs> = {
        [P in keyof T & keyof AggregateMataKuliahMahasiswa]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMataKuliahMahasiswa[P]>
      : GetScalarType<T[P], AggregateMataKuliahMahasiswa[P]>
  }




  export type MataKuliahMahasiswaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MataKuliahMahasiswaWhereInput
    orderBy?: MataKuliahMahasiswaOrderByWithAggregationInput | MataKuliahMahasiswaOrderByWithAggregationInput[]
    by: MataKuliahMahasiswaScalarFieldEnum[] | MataKuliahMahasiswaScalarFieldEnum
    having?: MataKuliahMahasiswaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MataKuliahMahasiswaCountAggregateInputType | true
    _avg?: MataKuliahMahasiswaAvgAggregateInputType
    _sum?: MataKuliahMahasiswaSumAggregateInputType
    _min?: MataKuliahMahasiswaMinAggregateInputType
    _max?: MataKuliahMahasiswaMaxAggregateInputType
  }

  export type MataKuliahMahasiswaGroupByOutputType = {
    mahasiswaId: number
    matakuliahId: number
    _count: MataKuliahMahasiswaCountAggregateOutputType | null
    _avg: MataKuliahMahasiswaAvgAggregateOutputType | null
    _sum: MataKuliahMahasiswaSumAggregateOutputType | null
    _min: MataKuliahMahasiswaMinAggregateOutputType | null
    _max: MataKuliahMahasiswaMaxAggregateOutputType | null
  }

  type GetMataKuliahMahasiswaGroupByPayload<T extends MataKuliahMahasiswaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MataKuliahMahasiswaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MataKuliahMahasiswaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MataKuliahMahasiswaGroupByOutputType[P]>
            : GetScalarType<T[P], MataKuliahMahasiswaGroupByOutputType[P]>
        }
      >
    >


  export type MataKuliahMahasiswaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    mahasiswaId?: boolean
    matakuliahId?: boolean
    mahasiswa?: boolean | MahasiswaDefaultArgs<ExtArgs>
    matakuliah?: boolean | MataKuliahDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mataKuliahMahasiswa"]>

  export type MataKuliahMahasiswaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    mahasiswaId?: boolean
    matakuliahId?: boolean
    mahasiswa?: boolean | MahasiswaDefaultArgs<ExtArgs>
    matakuliah?: boolean | MataKuliahDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mataKuliahMahasiswa"]>

  export type MataKuliahMahasiswaSelectScalar = {
    mahasiswaId?: boolean
    matakuliahId?: boolean
  }

  export type MataKuliahMahasiswaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mahasiswa?: boolean | MahasiswaDefaultArgs<ExtArgs>
    matakuliah?: boolean | MataKuliahDefaultArgs<ExtArgs>
  }
  export type MataKuliahMahasiswaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mahasiswa?: boolean | MahasiswaDefaultArgs<ExtArgs>
    matakuliah?: boolean | MataKuliahDefaultArgs<ExtArgs>
  }

  export type $MataKuliahMahasiswaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MataKuliahMahasiswa"
    objects: {
      mahasiswa: Prisma.$MahasiswaPayload<ExtArgs>
      matakuliah: Prisma.$MataKuliahPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      mahasiswaId: number
      matakuliahId: number
    }, ExtArgs["result"]["mataKuliahMahasiswa"]>
    composites: {}
  }

  type MataKuliahMahasiswaGetPayload<S extends boolean | null | undefined | MataKuliahMahasiswaDefaultArgs> = $Result.GetResult<Prisma.$MataKuliahMahasiswaPayload, S>

  type MataKuliahMahasiswaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<MataKuliahMahasiswaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: MataKuliahMahasiswaCountAggregateInputType | true
    }

  export interface MataKuliahMahasiswaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MataKuliahMahasiswa'], meta: { name: 'MataKuliahMahasiswa' } }
    /**
     * Find zero or one MataKuliahMahasiswa that matches the filter.
     * @param {MataKuliahMahasiswaFindUniqueArgs} args - Arguments to find a MataKuliahMahasiswa
     * @example
     * // Get one MataKuliahMahasiswa
     * const mataKuliahMahasiswa = await prisma.mataKuliahMahasiswa.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MataKuliahMahasiswaFindUniqueArgs>(args: SelectSubset<T, MataKuliahMahasiswaFindUniqueArgs<ExtArgs>>): Prisma__MataKuliahMahasiswaClient<$Result.GetResult<Prisma.$MataKuliahMahasiswaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one MataKuliahMahasiswa that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {MataKuliahMahasiswaFindUniqueOrThrowArgs} args - Arguments to find a MataKuliahMahasiswa
     * @example
     * // Get one MataKuliahMahasiswa
     * const mataKuliahMahasiswa = await prisma.mataKuliahMahasiswa.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MataKuliahMahasiswaFindUniqueOrThrowArgs>(args: SelectSubset<T, MataKuliahMahasiswaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MataKuliahMahasiswaClient<$Result.GetResult<Prisma.$MataKuliahMahasiswaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first MataKuliahMahasiswa that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MataKuliahMahasiswaFindFirstArgs} args - Arguments to find a MataKuliahMahasiswa
     * @example
     * // Get one MataKuliahMahasiswa
     * const mataKuliahMahasiswa = await prisma.mataKuliahMahasiswa.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MataKuliahMahasiswaFindFirstArgs>(args?: SelectSubset<T, MataKuliahMahasiswaFindFirstArgs<ExtArgs>>): Prisma__MataKuliahMahasiswaClient<$Result.GetResult<Prisma.$MataKuliahMahasiswaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first MataKuliahMahasiswa that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MataKuliahMahasiswaFindFirstOrThrowArgs} args - Arguments to find a MataKuliahMahasiswa
     * @example
     * // Get one MataKuliahMahasiswa
     * const mataKuliahMahasiswa = await prisma.mataKuliahMahasiswa.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MataKuliahMahasiswaFindFirstOrThrowArgs>(args?: SelectSubset<T, MataKuliahMahasiswaFindFirstOrThrowArgs<ExtArgs>>): Prisma__MataKuliahMahasiswaClient<$Result.GetResult<Prisma.$MataKuliahMahasiswaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more MataKuliahMahasiswas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MataKuliahMahasiswaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MataKuliahMahasiswas
     * const mataKuliahMahasiswas = await prisma.mataKuliahMahasiswa.findMany()
     * 
     * // Get first 10 MataKuliahMahasiswas
     * const mataKuliahMahasiswas = await prisma.mataKuliahMahasiswa.findMany({ take: 10 })
     * 
     * // Only select the `mahasiswaId`
     * const mataKuliahMahasiswaWithMahasiswaIdOnly = await prisma.mataKuliahMahasiswa.findMany({ select: { mahasiswaId: true } })
     * 
     */
    findMany<T extends MataKuliahMahasiswaFindManyArgs>(args?: SelectSubset<T, MataKuliahMahasiswaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MataKuliahMahasiswaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a MataKuliahMahasiswa.
     * @param {MataKuliahMahasiswaCreateArgs} args - Arguments to create a MataKuliahMahasiswa.
     * @example
     * // Create one MataKuliahMahasiswa
     * const MataKuliahMahasiswa = await prisma.mataKuliahMahasiswa.create({
     *   data: {
     *     // ... data to create a MataKuliahMahasiswa
     *   }
     * })
     * 
     */
    create<T extends MataKuliahMahasiswaCreateArgs>(args: SelectSubset<T, MataKuliahMahasiswaCreateArgs<ExtArgs>>): Prisma__MataKuliahMahasiswaClient<$Result.GetResult<Prisma.$MataKuliahMahasiswaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many MataKuliahMahasiswas.
     * @param {MataKuliahMahasiswaCreateManyArgs} args - Arguments to create many MataKuliahMahasiswas.
     * @example
     * // Create many MataKuliahMahasiswas
     * const mataKuliahMahasiswa = await prisma.mataKuliahMahasiswa.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MataKuliahMahasiswaCreateManyArgs>(args?: SelectSubset<T, MataKuliahMahasiswaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MataKuliahMahasiswas and returns the data saved in the database.
     * @param {MataKuliahMahasiswaCreateManyAndReturnArgs} args - Arguments to create many MataKuliahMahasiswas.
     * @example
     * // Create many MataKuliahMahasiswas
     * const mataKuliahMahasiswa = await prisma.mataKuliahMahasiswa.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MataKuliahMahasiswas and only return the `mahasiswaId`
     * const mataKuliahMahasiswaWithMahasiswaIdOnly = await prisma.mataKuliahMahasiswa.createManyAndReturn({ 
     *   select: { mahasiswaId: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MataKuliahMahasiswaCreateManyAndReturnArgs>(args?: SelectSubset<T, MataKuliahMahasiswaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MataKuliahMahasiswaPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a MataKuliahMahasiswa.
     * @param {MataKuliahMahasiswaDeleteArgs} args - Arguments to delete one MataKuliahMahasiswa.
     * @example
     * // Delete one MataKuliahMahasiswa
     * const MataKuliahMahasiswa = await prisma.mataKuliahMahasiswa.delete({
     *   where: {
     *     // ... filter to delete one MataKuliahMahasiswa
     *   }
     * })
     * 
     */
    delete<T extends MataKuliahMahasiswaDeleteArgs>(args: SelectSubset<T, MataKuliahMahasiswaDeleteArgs<ExtArgs>>): Prisma__MataKuliahMahasiswaClient<$Result.GetResult<Prisma.$MataKuliahMahasiswaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one MataKuliahMahasiswa.
     * @param {MataKuliahMahasiswaUpdateArgs} args - Arguments to update one MataKuliahMahasiswa.
     * @example
     * // Update one MataKuliahMahasiswa
     * const mataKuliahMahasiswa = await prisma.mataKuliahMahasiswa.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MataKuliahMahasiswaUpdateArgs>(args: SelectSubset<T, MataKuliahMahasiswaUpdateArgs<ExtArgs>>): Prisma__MataKuliahMahasiswaClient<$Result.GetResult<Prisma.$MataKuliahMahasiswaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more MataKuliahMahasiswas.
     * @param {MataKuliahMahasiswaDeleteManyArgs} args - Arguments to filter MataKuliahMahasiswas to delete.
     * @example
     * // Delete a few MataKuliahMahasiswas
     * const { count } = await prisma.mataKuliahMahasiswa.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MataKuliahMahasiswaDeleteManyArgs>(args?: SelectSubset<T, MataKuliahMahasiswaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MataKuliahMahasiswas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MataKuliahMahasiswaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MataKuliahMahasiswas
     * const mataKuliahMahasiswa = await prisma.mataKuliahMahasiswa.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MataKuliahMahasiswaUpdateManyArgs>(args: SelectSubset<T, MataKuliahMahasiswaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one MataKuliahMahasiswa.
     * @param {MataKuliahMahasiswaUpsertArgs} args - Arguments to update or create a MataKuliahMahasiswa.
     * @example
     * // Update or create a MataKuliahMahasiswa
     * const mataKuliahMahasiswa = await prisma.mataKuliahMahasiswa.upsert({
     *   create: {
     *     // ... data to create a MataKuliahMahasiswa
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MataKuliahMahasiswa we want to update
     *   }
     * })
     */
    upsert<T extends MataKuliahMahasiswaUpsertArgs>(args: SelectSubset<T, MataKuliahMahasiswaUpsertArgs<ExtArgs>>): Prisma__MataKuliahMahasiswaClient<$Result.GetResult<Prisma.$MataKuliahMahasiswaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of MataKuliahMahasiswas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MataKuliahMahasiswaCountArgs} args - Arguments to filter MataKuliahMahasiswas to count.
     * @example
     * // Count the number of MataKuliahMahasiswas
     * const count = await prisma.mataKuliahMahasiswa.count({
     *   where: {
     *     // ... the filter for the MataKuliahMahasiswas we want to count
     *   }
     * })
    **/
    count<T extends MataKuliahMahasiswaCountArgs>(
      args?: Subset<T, MataKuliahMahasiswaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MataKuliahMahasiswaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MataKuliahMahasiswa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MataKuliahMahasiswaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MataKuliahMahasiswaAggregateArgs>(args: Subset<T, MataKuliahMahasiswaAggregateArgs>): Prisma.PrismaPromise<GetMataKuliahMahasiswaAggregateType<T>>

    /**
     * Group by MataKuliahMahasiswa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MataKuliahMahasiswaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MataKuliahMahasiswaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MataKuliahMahasiswaGroupByArgs['orderBy'] }
        : { orderBy?: MataKuliahMahasiswaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MataKuliahMahasiswaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMataKuliahMahasiswaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MataKuliahMahasiswa model
   */
  readonly fields: MataKuliahMahasiswaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MataKuliahMahasiswa.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MataKuliahMahasiswaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    mahasiswa<T extends MahasiswaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MahasiswaDefaultArgs<ExtArgs>>): Prisma__MahasiswaClient<$Result.GetResult<Prisma.$MahasiswaPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    matakuliah<T extends MataKuliahDefaultArgs<ExtArgs> = {}>(args?: Subset<T, MataKuliahDefaultArgs<ExtArgs>>): Prisma__MataKuliahClient<$Result.GetResult<Prisma.$MataKuliahPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the MataKuliahMahasiswa model
   */ 
  interface MataKuliahMahasiswaFieldRefs {
    readonly mahasiswaId: FieldRef<"MataKuliahMahasiswa", 'Int'>
    readonly matakuliahId: FieldRef<"MataKuliahMahasiswa", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * MataKuliahMahasiswa findUnique
   */
  export type MataKuliahMahasiswaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliahMahasiswa
     */
    select?: MataKuliahMahasiswaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahMahasiswaInclude<ExtArgs> | null
    /**
     * Filter, which MataKuliahMahasiswa to fetch.
     */
    where: MataKuliahMahasiswaWhereUniqueInput
  }

  /**
   * MataKuliahMahasiswa findUniqueOrThrow
   */
  export type MataKuliahMahasiswaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliahMahasiswa
     */
    select?: MataKuliahMahasiswaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahMahasiswaInclude<ExtArgs> | null
    /**
     * Filter, which MataKuliahMahasiswa to fetch.
     */
    where: MataKuliahMahasiswaWhereUniqueInput
  }

  /**
   * MataKuliahMahasiswa findFirst
   */
  export type MataKuliahMahasiswaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliahMahasiswa
     */
    select?: MataKuliahMahasiswaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahMahasiswaInclude<ExtArgs> | null
    /**
     * Filter, which MataKuliahMahasiswa to fetch.
     */
    where?: MataKuliahMahasiswaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MataKuliahMahasiswas to fetch.
     */
    orderBy?: MataKuliahMahasiswaOrderByWithRelationInput | MataKuliahMahasiswaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MataKuliahMahasiswas.
     */
    cursor?: MataKuliahMahasiswaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MataKuliahMahasiswas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MataKuliahMahasiswas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MataKuliahMahasiswas.
     */
    distinct?: MataKuliahMahasiswaScalarFieldEnum | MataKuliahMahasiswaScalarFieldEnum[]
  }

  /**
   * MataKuliahMahasiswa findFirstOrThrow
   */
  export type MataKuliahMahasiswaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliahMahasiswa
     */
    select?: MataKuliahMahasiswaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahMahasiswaInclude<ExtArgs> | null
    /**
     * Filter, which MataKuliahMahasiswa to fetch.
     */
    where?: MataKuliahMahasiswaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MataKuliahMahasiswas to fetch.
     */
    orderBy?: MataKuliahMahasiswaOrderByWithRelationInput | MataKuliahMahasiswaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MataKuliahMahasiswas.
     */
    cursor?: MataKuliahMahasiswaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MataKuliahMahasiswas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MataKuliahMahasiswas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MataKuliahMahasiswas.
     */
    distinct?: MataKuliahMahasiswaScalarFieldEnum | MataKuliahMahasiswaScalarFieldEnum[]
  }

  /**
   * MataKuliahMahasiswa findMany
   */
  export type MataKuliahMahasiswaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliahMahasiswa
     */
    select?: MataKuliahMahasiswaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahMahasiswaInclude<ExtArgs> | null
    /**
     * Filter, which MataKuliahMahasiswas to fetch.
     */
    where?: MataKuliahMahasiswaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MataKuliahMahasiswas to fetch.
     */
    orderBy?: MataKuliahMahasiswaOrderByWithRelationInput | MataKuliahMahasiswaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MataKuliahMahasiswas.
     */
    cursor?: MataKuliahMahasiswaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MataKuliahMahasiswas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MataKuliahMahasiswas.
     */
    skip?: number
    distinct?: MataKuliahMahasiswaScalarFieldEnum | MataKuliahMahasiswaScalarFieldEnum[]
  }

  /**
   * MataKuliahMahasiswa create
   */
  export type MataKuliahMahasiswaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliahMahasiswa
     */
    select?: MataKuliahMahasiswaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahMahasiswaInclude<ExtArgs> | null
    /**
     * The data needed to create a MataKuliahMahasiswa.
     */
    data: XOR<MataKuliahMahasiswaCreateInput, MataKuliahMahasiswaUncheckedCreateInput>
  }

  /**
   * MataKuliahMahasiswa createMany
   */
  export type MataKuliahMahasiswaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MataKuliahMahasiswas.
     */
    data: MataKuliahMahasiswaCreateManyInput | MataKuliahMahasiswaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MataKuliahMahasiswa createManyAndReturn
   */
  export type MataKuliahMahasiswaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliahMahasiswa
     */
    select?: MataKuliahMahasiswaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many MataKuliahMahasiswas.
     */
    data: MataKuliahMahasiswaCreateManyInput | MataKuliahMahasiswaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahMahasiswaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * MataKuliahMahasiswa update
   */
  export type MataKuliahMahasiswaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliahMahasiswa
     */
    select?: MataKuliahMahasiswaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahMahasiswaInclude<ExtArgs> | null
    /**
     * The data needed to update a MataKuliahMahasiswa.
     */
    data: XOR<MataKuliahMahasiswaUpdateInput, MataKuliahMahasiswaUncheckedUpdateInput>
    /**
     * Choose, which MataKuliahMahasiswa to update.
     */
    where: MataKuliahMahasiswaWhereUniqueInput
  }

  /**
   * MataKuliahMahasiswa updateMany
   */
  export type MataKuliahMahasiswaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MataKuliahMahasiswas.
     */
    data: XOR<MataKuliahMahasiswaUpdateManyMutationInput, MataKuliahMahasiswaUncheckedUpdateManyInput>
    /**
     * Filter which MataKuliahMahasiswas to update
     */
    where?: MataKuliahMahasiswaWhereInput
  }

  /**
   * MataKuliahMahasiswa upsert
   */
  export type MataKuliahMahasiswaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliahMahasiswa
     */
    select?: MataKuliahMahasiswaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahMahasiswaInclude<ExtArgs> | null
    /**
     * The filter to search for the MataKuliahMahasiswa to update in case it exists.
     */
    where: MataKuliahMahasiswaWhereUniqueInput
    /**
     * In case the MataKuliahMahasiswa found by the `where` argument doesn't exist, create a new MataKuliahMahasiswa with this data.
     */
    create: XOR<MataKuliahMahasiswaCreateInput, MataKuliahMahasiswaUncheckedCreateInput>
    /**
     * In case the MataKuliahMahasiswa was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MataKuliahMahasiswaUpdateInput, MataKuliahMahasiswaUncheckedUpdateInput>
  }

  /**
   * MataKuliahMahasiswa delete
   */
  export type MataKuliahMahasiswaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliahMahasiswa
     */
    select?: MataKuliahMahasiswaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahMahasiswaInclude<ExtArgs> | null
    /**
     * Filter which MataKuliahMahasiswa to delete.
     */
    where: MataKuliahMahasiswaWhereUniqueInput
  }

  /**
   * MataKuliahMahasiswa deleteMany
   */
  export type MataKuliahMahasiswaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MataKuliahMahasiswas to delete
     */
    where?: MataKuliahMahasiswaWhereInput
  }

  /**
   * MataKuliahMahasiswa without action
   */
  export type MataKuliahMahasiswaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MataKuliahMahasiswa
     */
    select?: MataKuliahMahasiswaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MataKuliahMahasiswaInclude<ExtArgs> | null
  }


  /**
   * Model Role
   */

  export type AggregateRole = {
    _count: RoleCountAggregateOutputType | null
    _avg: RoleAvgAggregateOutputType | null
    _sum: RoleSumAggregateOutputType | null
    _min: RoleMinAggregateOutputType | null
    _max: RoleMaxAggregateOutputType | null
  }

  export type RoleAvgAggregateOutputType = {
    id: number | null
  }

  export type RoleSumAggregateOutputType = {
    id: number | null
  }

  export type RoleMinAggregateOutputType = {
    id: number | null
    name: string | null
  }

  export type RoleMaxAggregateOutputType = {
    id: number | null
    name: string | null
  }

  export type RoleCountAggregateOutputType = {
    id: number
    name: number
    _all: number
  }


  export type RoleAvgAggregateInputType = {
    id?: true
  }

  export type RoleSumAggregateInputType = {
    id?: true
  }

  export type RoleMinAggregateInputType = {
    id?: true
    name?: true
  }

  export type RoleMaxAggregateInputType = {
    id?: true
    name?: true
  }

  export type RoleCountAggregateInputType = {
    id?: true
    name?: true
    _all?: true
  }

  export type RoleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Role to aggregate.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Roles
    **/
    _count?: true | RoleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RoleAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RoleSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RoleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RoleMaxAggregateInputType
  }

  export type GetRoleAggregateType<T extends RoleAggregateArgs> = {
        [P in keyof T & keyof AggregateRole]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRole[P]>
      : GetScalarType<T[P], AggregateRole[P]>
  }




  export type RoleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RoleWhereInput
    orderBy?: RoleOrderByWithAggregationInput | RoleOrderByWithAggregationInput[]
    by: RoleScalarFieldEnum[] | RoleScalarFieldEnum
    having?: RoleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RoleCountAggregateInputType | true
    _avg?: RoleAvgAggregateInputType
    _sum?: RoleSumAggregateInputType
    _min?: RoleMinAggregateInputType
    _max?: RoleMaxAggregateInputType
  }

  export type RoleGroupByOutputType = {
    id: number
    name: string
    _count: RoleCountAggregateOutputType | null
    _avg: RoleAvgAggregateOutputType | null
    _sum: RoleSumAggregateOutputType | null
    _min: RoleMinAggregateOutputType | null
    _max: RoleMaxAggregateOutputType | null
  }

  type GetRoleGroupByPayload<T extends RoleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RoleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RoleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RoleGroupByOutputType[P]>
            : GetScalarType<T[P], RoleGroupByOutputType[P]>
        }
      >
    >


  export type RoleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    dosens?: boolean | Role$dosensArgs<ExtArgs>
    mahasiswas?: boolean | Role$mahasiswasArgs<ExtArgs>
    _count?: boolean | RoleCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["role"]>

  export type RoleSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
  }, ExtArgs["result"]["role"]>

  export type RoleSelectScalar = {
    id?: boolean
    name?: boolean
  }

  export type RoleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    dosens?: boolean | Role$dosensArgs<ExtArgs>
    mahasiswas?: boolean | Role$mahasiswasArgs<ExtArgs>
    _count?: boolean | RoleCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type RoleIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $RolePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Role"
    objects: {
      dosens: Prisma.$DosenPayload<ExtArgs>[]
      mahasiswas: Prisma.$MahasiswaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
    }, ExtArgs["result"]["role"]>
    composites: {}
  }

  type RoleGetPayload<S extends boolean | null | undefined | RoleDefaultArgs> = $Result.GetResult<Prisma.$RolePayload, S>

  type RoleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<RoleFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: RoleCountAggregateInputType | true
    }

  export interface RoleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Role'], meta: { name: 'Role' } }
    /**
     * Find zero or one Role that matches the filter.
     * @param {RoleFindUniqueArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RoleFindUniqueArgs>(args: SelectSubset<T, RoleFindUniqueArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Role that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {RoleFindUniqueOrThrowArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RoleFindUniqueOrThrowArgs>(args: SelectSubset<T, RoleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Role that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindFirstArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RoleFindFirstArgs>(args?: SelectSubset<T, RoleFindFirstArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Role that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindFirstOrThrowArgs} args - Arguments to find a Role
     * @example
     * // Get one Role
     * const role = await prisma.role.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RoleFindFirstOrThrowArgs>(args?: SelectSubset<T, RoleFindFirstOrThrowArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Roles
     * const roles = await prisma.role.findMany()
     * 
     * // Get first 10 Roles
     * const roles = await prisma.role.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const roleWithIdOnly = await prisma.role.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RoleFindManyArgs>(args?: SelectSubset<T, RoleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Role.
     * @param {RoleCreateArgs} args - Arguments to create a Role.
     * @example
     * // Create one Role
     * const Role = await prisma.role.create({
     *   data: {
     *     // ... data to create a Role
     *   }
     * })
     * 
     */
    create<T extends RoleCreateArgs>(args: SelectSubset<T, RoleCreateArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Roles.
     * @param {RoleCreateManyArgs} args - Arguments to create many Roles.
     * @example
     * // Create many Roles
     * const role = await prisma.role.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RoleCreateManyArgs>(args?: SelectSubset<T, RoleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Roles and returns the data saved in the database.
     * @param {RoleCreateManyAndReturnArgs} args - Arguments to create many Roles.
     * @example
     * // Create many Roles
     * const role = await prisma.role.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Roles and only return the `id`
     * const roleWithIdOnly = await prisma.role.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends RoleCreateManyAndReturnArgs>(args?: SelectSubset<T, RoleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Role.
     * @param {RoleDeleteArgs} args - Arguments to delete one Role.
     * @example
     * // Delete one Role
     * const Role = await prisma.role.delete({
     *   where: {
     *     // ... filter to delete one Role
     *   }
     * })
     * 
     */
    delete<T extends RoleDeleteArgs>(args: SelectSubset<T, RoleDeleteArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Role.
     * @param {RoleUpdateArgs} args - Arguments to update one Role.
     * @example
     * // Update one Role
     * const role = await prisma.role.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RoleUpdateArgs>(args: SelectSubset<T, RoleUpdateArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Roles.
     * @param {RoleDeleteManyArgs} args - Arguments to filter Roles to delete.
     * @example
     * // Delete a few Roles
     * const { count } = await prisma.role.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RoleDeleteManyArgs>(args?: SelectSubset<T, RoleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Roles
     * const role = await prisma.role.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RoleUpdateManyArgs>(args: SelectSubset<T, RoleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Role.
     * @param {RoleUpsertArgs} args - Arguments to update or create a Role.
     * @example
     * // Update or create a Role
     * const role = await prisma.role.upsert({
     *   create: {
     *     // ... data to create a Role
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Role we want to update
     *   }
     * })
     */
    upsert<T extends RoleUpsertArgs>(args: SelectSubset<T, RoleUpsertArgs<ExtArgs>>): Prisma__RoleClient<$Result.GetResult<Prisma.$RolePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleCountArgs} args - Arguments to filter Roles to count.
     * @example
     * // Count the number of Roles
     * const count = await prisma.role.count({
     *   where: {
     *     // ... the filter for the Roles we want to count
     *   }
     * })
    **/
    count<T extends RoleCountArgs>(
      args?: Subset<T, RoleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RoleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RoleAggregateArgs>(args: Subset<T, RoleAggregateArgs>): Prisma.PrismaPromise<GetRoleAggregateType<T>>

    /**
     * Group by Role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RoleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RoleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RoleGroupByArgs['orderBy'] }
        : { orderBy?: RoleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RoleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRoleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Role model
   */
  readonly fields: RoleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Role.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RoleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    dosens<T extends Role$dosensArgs<ExtArgs> = {}>(args?: Subset<T, Role$dosensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DosenPayload<ExtArgs>, T, "findMany"> | Null>
    mahasiswas<T extends Role$mahasiswasArgs<ExtArgs> = {}>(args?: Subset<T, Role$mahasiswasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MahasiswaPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Role model
   */ 
  interface RoleFieldRefs {
    readonly id: FieldRef<"Role", 'Int'>
    readonly name: FieldRef<"Role", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Role findUnique
   */
  export type RoleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role findUniqueOrThrow
   */
  export type RoleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role findFirst
   */
  export type RoleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Roles.
     */
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role findFirstOrThrow
   */
  export type RoleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Role to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Roles.
     */
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role findMany
   */
  export type RoleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter, which Roles to fetch.
     */
    where?: RoleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Roles to fetch.
     */
    orderBy?: RoleOrderByWithRelationInput | RoleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Roles.
     */
    cursor?: RoleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Roles.
     */
    skip?: number
    distinct?: RoleScalarFieldEnum | RoleScalarFieldEnum[]
  }

  /**
   * Role create
   */
  export type RoleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The data needed to create a Role.
     */
    data: XOR<RoleCreateInput, RoleUncheckedCreateInput>
  }

  /**
   * Role createMany
   */
  export type RoleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Roles.
     */
    data: RoleCreateManyInput | RoleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Role createManyAndReturn
   */
  export type RoleCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Roles.
     */
    data: RoleCreateManyInput | RoleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Role update
   */
  export type RoleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The data needed to update a Role.
     */
    data: XOR<RoleUpdateInput, RoleUncheckedUpdateInput>
    /**
     * Choose, which Role to update.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role updateMany
   */
  export type RoleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Roles.
     */
    data: XOR<RoleUpdateManyMutationInput, RoleUncheckedUpdateManyInput>
    /**
     * Filter which Roles to update
     */
    where?: RoleWhereInput
  }

  /**
   * Role upsert
   */
  export type RoleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * The filter to search for the Role to update in case it exists.
     */
    where: RoleWhereUniqueInput
    /**
     * In case the Role found by the `where` argument doesn't exist, create a new Role with this data.
     */
    create: XOR<RoleCreateInput, RoleUncheckedCreateInput>
    /**
     * In case the Role was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RoleUpdateInput, RoleUncheckedUpdateInput>
  }

  /**
   * Role delete
   */
  export type RoleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
    /**
     * Filter which Role to delete.
     */
    where: RoleWhereUniqueInput
  }

  /**
   * Role deleteMany
   */
  export type RoleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Roles to delete
     */
    where?: RoleWhereInput
  }

  /**
   * Role.dosens
   */
  export type Role$dosensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Dosen
     */
    select?: DosenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DosenInclude<ExtArgs> | null
    where?: DosenWhereInput
    orderBy?: DosenOrderByWithRelationInput | DosenOrderByWithRelationInput[]
    cursor?: DosenWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DosenScalarFieldEnum | DosenScalarFieldEnum[]
  }

  /**
   * Role.mahasiswas
   */
  export type Role$mahasiswasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mahasiswa
     */
    select?: MahasiswaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MahasiswaInclude<ExtArgs> | null
    where?: MahasiswaWhereInput
    orderBy?: MahasiswaOrderByWithRelationInput | MahasiswaOrderByWithRelationInput[]
    cursor?: MahasiswaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MahasiswaScalarFieldEnum | MahasiswaScalarFieldEnum[]
  }

  /**
   * Role without action
   */
  export type RoleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Role
     */
    select?: RoleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RoleInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const MahasiswaScalarFieldEnum: {
    id: 'id',
    username: 'username',
    password: 'password',
    name: 'name',
    email: 'email',
    roleId: 'roleId'
  };

  export type MahasiswaScalarFieldEnum = (typeof MahasiswaScalarFieldEnum)[keyof typeof MahasiswaScalarFieldEnum]


  export const MataKuliahScalarFieldEnum: {
    id: 'id',
    name: 'name',
    dosenId: 'dosenId'
  };

  export type MataKuliahScalarFieldEnum = (typeof MataKuliahScalarFieldEnum)[keyof typeof MataKuliahScalarFieldEnum]


  export const DosenScalarFieldEnum: {
    id: 'id',
    username: 'username',
    password: 'password',
    name: 'name',
    email: 'email',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    roleId: 'roleId'
  };

  export type DosenScalarFieldEnum = (typeof DosenScalarFieldEnum)[keyof typeof DosenScalarFieldEnum]


  export const NilaiScalarFieldEnum: {
    id: 'id',
    value: 'value',
    mahasiswaId: 'mahasiswaId',
    matakuliahId: 'matakuliahId'
  };

  export type NilaiScalarFieldEnum = (typeof NilaiScalarFieldEnum)[keyof typeof NilaiScalarFieldEnum]


  export const MataKuliahMahasiswaScalarFieldEnum: {
    mahasiswaId: 'mahasiswaId',
    matakuliahId: 'matakuliahId'
  };

  export type MataKuliahMahasiswaScalarFieldEnum = (typeof MataKuliahMahasiswaScalarFieldEnum)[keyof typeof MataKuliahMahasiswaScalarFieldEnum]


  export const RoleScalarFieldEnum: {
    id: 'id',
    name: 'name'
  };

  export type RoleScalarFieldEnum = (typeof RoleScalarFieldEnum)[keyof typeof RoleScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type MahasiswaWhereInput = {
    AND?: MahasiswaWhereInput | MahasiswaWhereInput[]
    OR?: MahasiswaWhereInput[]
    NOT?: MahasiswaWhereInput | MahasiswaWhereInput[]
    id?: IntFilter<"Mahasiswa"> | number
    username?: StringFilter<"Mahasiswa"> | string
    password?: StringFilter<"Mahasiswa"> | string
    name?: StringFilter<"Mahasiswa"> | string
    email?: StringFilter<"Mahasiswa"> | string
    roleId?: IntFilter<"Mahasiswa"> | number
    matakuliahs?: MataKuliahMahasiswaListRelationFilter
    nilais?: NilaiListRelationFilter
    role?: XOR<RoleRelationFilter, RoleWhereInput>
  }

  export type MahasiswaOrderByWithRelationInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    name?: SortOrder
    email?: SortOrder
    roleId?: SortOrder
    matakuliahs?: MataKuliahMahasiswaOrderByRelationAggregateInput
    nilais?: NilaiOrderByRelationAggregateInput
    role?: RoleOrderByWithRelationInput
  }

  export type MahasiswaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    username?: string
    email?: string
    AND?: MahasiswaWhereInput | MahasiswaWhereInput[]
    OR?: MahasiswaWhereInput[]
    NOT?: MahasiswaWhereInput | MahasiswaWhereInput[]
    password?: StringFilter<"Mahasiswa"> | string
    name?: StringFilter<"Mahasiswa"> | string
    roleId?: IntFilter<"Mahasiswa"> | number
    matakuliahs?: MataKuliahMahasiswaListRelationFilter
    nilais?: NilaiListRelationFilter
    role?: XOR<RoleRelationFilter, RoleWhereInput>
  }, "id" | "username" | "email">

  export type MahasiswaOrderByWithAggregationInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    name?: SortOrder
    email?: SortOrder
    roleId?: SortOrder
    _count?: MahasiswaCountOrderByAggregateInput
    _avg?: MahasiswaAvgOrderByAggregateInput
    _max?: MahasiswaMaxOrderByAggregateInput
    _min?: MahasiswaMinOrderByAggregateInput
    _sum?: MahasiswaSumOrderByAggregateInput
  }

  export type MahasiswaScalarWhereWithAggregatesInput = {
    AND?: MahasiswaScalarWhereWithAggregatesInput | MahasiswaScalarWhereWithAggregatesInput[]
    OR?: MahasiswaScalarWhereWithAggregatesInput[]
    NOT?: MahasiswaScalarWhereWithAggregatesInput | MahasiswaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Mahasiswa"> | number
    username?: StringWithAggregatesFilter<"Mahasiswa"> | string
    password?: StringWithAggregatesFilter<"Mahasiswa"> | string
    name?: StringWithAggregatesFilter<"Mahasiswa"> | string
    email?: StringWithAggregatesFilter<"Mahasiswa"> | string
    roleId?: IntWithAggregatesFilter<"Mahasiswa"> | number
  }

  export type MataKuliahWhereInput = {
    AND?: MataKuliahWhereInput | MataKuliahWhereInput[]
    OR?: MataKuliahWhereInput[]
    NOT?: MataKuliahWhereInput | MataKuliahWhereInput[]
    id?: IntFilter<"MataKuliah"> | number
    name?: StringFilter<"MataKuliah"> | string
    dosenId?: IntFilter<"MataKuliah"> | number
    dosen?: XOR<DosenRelationFilter, DosenWhereInput>
    mahasiswas?: MataKuliahMahasiswaListRelationFilter
    nilais?: NilaiListRelationFilter
  }

  export type MataKuliahOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    dosenId?: SortOrder
    dosen?: DosenOrderByWithRelationInput
    mahasiswas?: MataKuliahMahasiswaOrderByRelationAggregateInput
    nilais?: NilaiOrderByRelationAggregateInput
  }

  export type MataKuliahWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: MataKuliahWhereInput | MataKuliahWhereInput[]
    OR?: MataKuliahWhereInput[]
    NOT?: MataKuliahWhereInput | MataKuliahWhereInput[]
    name?: StringFilter<"MataKuliah"> | string
    dosenId?: IntFilter<"MataKuliah"> | number
    dosen?: XOR<DosenRelationFilter, DosenWhereInput>
    mahasiswas?: MataKuliahMahasiswaListRelationFilter
    nilais?: NilaiListRelationFilter
  }, "id">

  export type MataKuliahOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    dosenId?: SortOrder
    _count?: MataKuliahCountOrderByAggregateInput
    _avg?: MataKuliahAvgOrderByAggregateInput
    _max?: MataKuliahMaxOrderByAggregateInput
    _min?: MataKuliahMinOrderByAggregateInput
    _sum?: MataKuliahSumOrderByAggregateInput
  }

  export type MataKuliahScalarWhereWithAggregatesInput = {
    AND?: MataKuliahScalarWhereWithAggregatesInput | MataKuliahScalarWhereWithAggregatesInput[]
    OR?: MataKuliahScalarWhereWithAggregatesInput[]
    NOT?: MataKuliahScalarWhereWithAggregatesInput | MataKuliahScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"MataKuliah"> | number
    name?: StringWithAggregatesFilter<"MataKuliah"> | string
    dosenId?: IntWithAggregatesFilter<"MataKuliah"> | number
  }

  export type DosenWhereInput = {
    AND?: DosenWhereInput | DosenWhereInput[]
    OR?: DosenWhereInput[]
    NOT?: DosenWhereInput | DosenWhereInput[]
    id?: IntFilter<"Dosen"> | number
    username?: StringFilter<"Dosen"> | string
    password?: StringFilter<"Dosen"> | string
    name?: StringFilter<"Dosen"> | string
    email?: StringFilter<"Dosen"> | string
    createdAt?: DateTimeFilter<"Dosen"> | Date | string
    updatedAt?: DateTimeFilter<"Dosen"> | Date | string
    roleId?: IntFilter<"Dosen"> | number
    matakuliahs?: MataKuliahListRelationFilter
    role?: XOR<RoleRelationFilter, RoleWhereInput>
  }

  export type DosenOrderByWithRelationInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    name?: SortOrder
    email?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    roleId?: SortOrder
    matakuliahs?: MataKuliahOrderByRelationAggregateInput
    role?: RoleOrderByWithRelationInput
  }

  export type DosenWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    username?: string
    email?: string
    AND?: DosenWhereInput | DosenWhereInput[]
    OR?: DosenWhereInput[]
    NOT?: DosenWhereInput | DosenWhereInput[]
    password?: StringFilter<"Dosen"> | string
    name?: StringFilter<"Dosen"> | string
    createdAt?: DateTimeFilter<"Dosen"> | Date | string
    updatedAt?: DateTimeFilter<"Dosen"> | Date | string
    roleId?: IntFilter<"Dosen"> | number
    matakuliahs?: MataKuliahListRelationFilter
    role?: XOR<RoleRelationFilter, RoleWhereInput>
  }, "id" | "username" | "email">

  export type DosenOrderByWithAggregationInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    name?: SortOrder
    email?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    roleId?: SortOrder
    _count?: DosenCountOrderByAggregateInput
    _avg?: DosenAvgOrderByAggregateInput
    _max?: DosenMaxOrderByAggregateInput
    _min?: DosenMinOrderByAggregateInput
    _sum?: DosenSumOrderByAggregateInput
  }

  export type DosenScalarWhereWithAggregatesInput = {
    AND?: DosenScalarWhereWithAggregatesInput | DosenScalarWhereWithAggregatesInput[]
    OR?: DosenScalarWhereWithAggregatesInput[]
    NOT?: DosenScalarWhereWithAggregatesInput | DosenScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Dosen"> | number
    username?: StringWithAggregatesFilter<"Dosen"> | string
    password?: StringWithAggregatesFilter<"Dosen"> | string
    name?: StringWithAggregatesFilter<"Dosen"> | string
    email?: StringWithAggregatesFilter<"Dosen"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Dosen"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Dosen"> | Date | string
    roleId?: IntWithAggregatesFilter<"Dosen"> | number
  }

  export type NilaiWhereInput = {
    AND?: NilaiWhereInput | NilaiWhereInput[]
    OR?: NilaiWhereInput[]
    NOT?: NilaiWhereInput | NilaiWhereInput[]
    id?: IntFilter<"Nilai"> | number
    value?: FloatFilter<"Nilai"> | number
    mahasiswaId?: IntFilter<"Nilai"> | number
    matakuliahId?: IntFilter<"Nilai"> | number
    mahasiswa?: XOR<MahasiswaRelationFilter, MahasiswaWhereInput>
    matakuliah?: XOR<MataKuliahRelationFilter, MataKuliahWhereInput>
  }

  export type NilaiOrderByWithRelationInput = {
    id?: SortOrder
    value?: SortOrder
    mahasiswaId?: SortOrder
    matakuliahId?: SortOrder
    mahasiswa?: MahasiswaOrderByWithRelationInput
    matakuliah?: MataKuliahOrderByWithRelationInput
  }

  export type NilaiWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: NilaiWhereInput | NilaiWhereInput[]
    OR?: NilaiWhereInput[]
    NOT?: NilaiWhereInput | NilaiWhereInput[]
    value?: FloatFilter<"Nilai"> | number
    mahasiswaId?: IntFilter<"Nilai"> | number
    matakuliahId?: IntFilter<"Nilai"> | number
    mahasiswa?: XOR<MahasiswaRelationFilter, MahasiswaWhereInput>
    matakuliah?: XOR<MataKuliahRelationFilter, MataKuliahWhereInput>
  }, "id">

  export type NilaiOrderByWithAggregationInput = {
    id?: SortOrder
    value?: SortOrder
    mahasiswaId?: SortOrder
    matakuliahId?: SortOrder
    _count?: NilaiCountOrderByAggregateInput
    _avg?: NilaiAvgOrderByAggregateInput
    _max?: NilaiMaxOrderByAggregateInput
    _min?: NilaiMinOrderByAggregateInput
    _sum?: NilaiSumOrderByAggregateInput
  }

  export type NilaiScalarWhereWithAggregatesInput = {
    AND?: NilaiScalarWhereWithAggregatesInput | NilaiScalarWhereWithAggregatesInput[]
    OR?: NilaiScalarWhereWithAggregatesInput[]
    NOT?: NilaiScalarWhereWithAggregatesInput | NilaiScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Nilai"> | number
    value?: FloatWithAggregatesFilter<"Nilai"> | number
    mahasiswaId?: IntWithAggregatesFilter<"Nilai"> | number
    matakuliahId?: IntWithAggregatesFilter<"Nilai"> | number
  }

  export type MataKuliahMahasiswaWhereInput = {
    AND?: MataKuliahMahasiswaWhereInput | MataKuliahMahasiswaWhereInput[]
    OR?: MataKuliahMahasiswaWhereInput[]
    NOT?: MataKuliahMahasiswaWhereInput | MataKuliahMahasiswaWhereInput[]
    mahasiswaId?: IntFilter<"MataKuliahMahasiswa"> | number
    matakuliahId?: IntFilter<"MataKuliahMahasiswa"> | number
    mahasiswa?: XOR<MahasiswaRelationFilter, MahasiswaWhereInput>
    matakuliah?: XOR<MataKuliahRelationFilter, MataKuliahWhereInput>
  }

  export type MataKuliahMahasiswaOrderByWithRelationInput = {
    mahasiswaId?: SortOrder
    matakuliahId?: SortOrder
    mahasiswa?: MahasiswaOrderByWithRelationInput
    matakuliah?: MataKuliahOrderByWithRelationInput
  }

  export type MataKuliahMahasiswaWhereUniqueInput = Prisma.AtLeast<{
    mahasiswaId_matakuliahId?: MataKuliahMahasiswaMahasiswaIdMatakuliahIdCompoundUniqueInput
    AND?: MataKuliahMahasiswaWhereInput | MataKuliahMahasiswaWhereInput[]
    OR?: MataKuliahMahasiswaWhereInput[]
    NOT?: MataKuliahMahasiswaWhereInput | MataKuliahMahasiswaWhereInput[]
    mahasiswaId?: IntFilter<"MataKuliahMahasiswa"> | number
    matakuliahId?: IntFilter<"MataKuliahMahasiswa"> | number
    mahasiswa?: XOR<MahasiswaRelationFilter, MahasiswaWhereInput>
    matakuliah?: XOR<MataKuliahRelationFilter, MataKuliahWhereInput>
  }, "mahasiswaId_matakuliahId">

  export type MataKuliahMahasiswaOrderByWithAggregationInput = {
    mahasiswaId?: SortOrder
    matakuliahId?: SortOrder
    _count?: MataKuliahMahasiswaCountOrderByAggregateInput
    _avg?: MataKuliahMahasiswaAvgOrderByAggregateInput
    _max?: MataKuliahMahasiswaMaxOrderByAggregateInput
    _min?: MataKuliahMahasiswaMinOrderByAggregateInput
    _sum?: MataKuliahMahasiswaSumOrderByAggregateInput
  }

  export type MataKuliahMahasiswaScalarWhereWithAggregatesInput = {
    AND?: MataKuliahMahasiswaScalarWhereWithAggregatesInput | MataKuliahMahasiswaScalarWhereWithAggregatesInput[]
    OR?: MataKuliahMahasiswaScalarWhereWithAggregatesInput[]
    NOT?: MataKuliahMahasiswaScalarWhereWithAggregatesInput | MataKuliahMahasiswaScalarWhereWithAggregatesInput[]
    mahasiswaId?: IntWithAggregatesFilter<"MataKuliahMahasiswa"> | number
    matakuliahId?: IntWithAggregatesFilter<"MataKuliahMahasiswa"> | number
  }

  export type RoleWhereInput = {
    AND?: RoleWhereInput | RoleWhereInput[]
    OR?: RoleWhereInput[]
    NOT?: RoleWhereInput | RoleWhereInput[]
    id?: IntFilter<"Role"> | number
    name?: StringFilter<"Role"> | string
    dosens?: DosenListRelationFilter
    mahasiswas?: MahasiswaListRelationFilter
  }

  export type RoleOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    dosens?: DosenOrderByRelationAggregateInput
    mahasiswas?: MahasiswaOrderByRelationAggregateInput
  }

  export type RoleWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    name?: string
    AND?: RoleWhereInput | RoleWhereInput[]
    OR?: RoleWhereInput[]
    NOT?: RoleWhereInput | RoleWhereInput[]
    dosens?: DosenListRelationFilter
    mahasiswas?: MahasiswaListRelationFilter
  }, "id" | "name">

  export type RoleOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    _count?: RoleCountOrderByAggregateInput
    _avg?: RoleAvgOrderByAggregateInput
    _max?: RoleMaxOrderByAggregateInput
    _min?: RoleMinOrderByAggregateInput
    _sum?: RoleSumOrderByAggregateInput
  }

  export type RoleScalarWhereWithAggregatesInput = {
    AND?: RoleScalarWhereWithAggregatesInput | RoleScalarWhereWithAggregatesInput[]
    OR?: RoleScalarWhereWithAggregatesInput[]
    NOT?: RoleScalarWhereWithAggregatesInput | RoleScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Role"> | number
    name?: StringWithAggregatesFilter<"Role"> | string
  }

  export type MahasiswaCreateInput = {
    username: string
    password: string
    name: string
    email: string
    matakuliahs?: MataKuliahMahasiswaCreateNestedManyWithoutMahasiswaInput
    nilais?: NilaiCreateNestedManyWithoutMahasiswaInput
    role: RoleCreateNestedOneWithoutMahasiswasInput
  }

  export type MahasiswaUncheckedCreateInput = {
    id?: number
    username: string
    password: string
    name: string
    email: string
    roleId: number
    matakuliahs?: MataKuliahMahasiswaUncheckedCreateNestedManyWithoutMahasiswaInput
    nilais?: NilaiUncheckedCreateNestedManyWithoutMahasiswaInput
  }

  export type MahasiswaUpdateInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    matakuliahs?: MataKuliahMahasiswaUpdateManyWithoutMahasiswaNestedInput
    nilais?: NilaiUpdateManyWithoutMahasiswaNestedInput
    role?: RoleUpdateOneRequiredWithoutMahasiswasNestedInput
  }

  export type MahasiswaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    roleId?: IntFieldUpdateOperationsInput | number
    matakuliahs?: MataKuliahMahasiswaUncheckedUpdateManyWithoutMahasiswaNestedInput
    nilais?: NilaiUncheckedUpdateManyWithoutMahasiswaNestedInput
  }

  export type MahasiswaCreateManyInput = {
    id?: number
    username: string
    password: string
    name: string
    email: string
    roleId: number
  }

  export type MahasiswaUpdateManyMutationInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
  }

  export type MahasiswaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    roleId?: IntFieldUpdateOperationsInput | number
  }

  export type MataKuliahCreateInput = {
    name: string
    dosen: DosenCreateNestedOneWithoutMatakuliahsInput
    mahasiswas?: MataKuliahMahasiswaCreateNestedManyWithoutMatakuliahInput
    nilais?: NilaiCreateNestedManyWithoutMatakuliahInput
  }

  export type MataKuliahUncheckedCreateInput = {
    id?: number
    name: string
    dosenId: number
    mahasiswas?: MataKuliahMahasiswaUncheckedCreateNestedManyWithoutMatakuliahInput
    nilais?: NilaiUncheckedCreateNestedManyWithoutMatakuliahInput
  }

  export type MataKuliahUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    dosen?: DosenUpdateOneRequiredWithoutMatakuliahsNestedInput
    mahasiswas?: MataKuliahMahasiswaUpdateManyWithoutMatakuliahNestedInput
    nilais?: NilaiUpdateManyWithoutMatakuliahNestedInput
  }

  export type MataKuliahUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    dosenId?: IntFieldUpdateOperationsInput | number
    mahasiswas?: MataKuliahMahasiswaUncheckedUpdateManyWithoutMatakuliahNestedInput
    nilais?: NilaiUncheckedUpdateManyWithoutMatakuliahNestedInput
  }

  export type MataKuliahCreateManyInput = {
    id?: number
    name: string
    dosenId: number
  }

  export type MataKuliahUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
  }

  export type MataKuliahUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    dosenId?: IntFieldUpdateOperationsInput | number
  }

  export type DosenCreateInput = {
    username: string
    password: string
    name: string
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    matakuliahs?: MataKuliahCreateNestedManyWithoutDosenInput
    role: RoleCreateNestedOneWithoutDosensInput
  }

  export type DosenUncheckedCreateInput = {
    id?: number
    username: string
    password: string
    name: string
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    roleId: number
    matakuliahs?: MataKuliahUncheckedCreateNestedManyWithoutDosenInput
  }

  export type DosenUpdateInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    matakuliahs?: MataKuliahUpdateManyWithoutDosenNestedInput
    role?: RoleUpdateOneRequiredWithoutDosensNestedInput
  }

  export type DosenUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roleId?: IntFieldUpdateOperationsInput | number
    matakuliahs?: MataKuliahUncheckedUpdateManyWithoutDosenNestedInput
  }

  export type DosenCreateManyInput = {
    id?: number
    username: string
    password: string
    name: string
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    roleId: number
  }

  export type DosenUpdateManyMutationInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DosenUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roleId?: IntFieldUpdateOperationsInput | number
  }

  export type NilaiCreateInput = {
    value: number
    mahasiswa: MahasiswaCreateNestedOneWithoutNilaisInput
    matakuliah: MataKuliahCreateNestedOneWithoutNilaisInput
  }

  export type NilaiUncheckedCreateInput = {
    id?: number
    value: number
    mahasiswaId: number
    matakuliahId: number
  }

  export type NilaiUpdateInput = {
    value?: FloatFieldUpdateOperationsInput | number
    mahasiswa?: MahasiswaUpdateOneRequiredWithoutNilaisNestedInput
    matakuliah?: MataKuliahUpdateOneRequiredWithoutNilaisNestedInput
  }

  export type NilaiUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: FloatFieldUpdateOperationsInput | number
    mahasiswaId?: IntFieldUpdateOperationsInput | number
    matakuliahId?: IntFieldUpdateOperationsInput | number
  }

  export type NilaiCreateManyInput = {
    id?: number
    value: number
    mahasiswaId: number
    matakuliahId: number
  }

  export type NilaiUpdateManyMutationInput = {
    value?: FloatFieldUpdateOperationsInput | number
  }

  export type NilaiUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: FloatFieldUpdateOperationsInput | number
    mahasiswaId?: IntFieldUpdateOperationsInput | number
    matakuliahId?: IntFieldUpdateOperationsInput | number
  }

  export type MataKuliahMahasiswaCreateInput = {
    mahasiswa: MahasiswaCreateNestedOneWithoutMatakuliahsInput
    matakuliah: MataKuliahCreateNestedOneWithoutMahasiswasInput
  }

  export type MataKuliahMahasiswaUncheckedCreateInput = {
    mahasiswaId: number
    matakuliahId: number
  }

  export type MataKuliahMahasiswaUpdateInput = {
    mahasiswa?: MahasiswaUpdateOneRequiredWithoutMatakuliahsNestedInput
    matakuliah?: MataKuliahUpdateOneRequiredWithoutMahasiswasNestedInput
  }

  export type MataKuliahMahasiswaUncheckedUpdateInput = {
    mahasiswaId?: IntFieldUpdateOperationsInput | number
    matakuliahId?: IntFieldUpdateOperationsInput | number
  }

  export type MataKuliahMahasiswaCreateManyInput = {
    mahasiswaId: number
    matakuliahId: number
  }

  export type MataKuliahMahasiswaUpdateManyMutationInput = {

  }

  export type MataKuliahMahasiswaUncheckedUpdateManyInput = {
    mahasiswaId?: IntFieldUpdateOperationsInput | number
    matakuliahId?: IntFieldUpdateOperationsInput | number
  }

  export type RoleCreateInput = {
    name: string
    dosens?: DosenCreateNestedManyWithoutRoleInput
    mahasiswas?: MahasiswaCreateNestedManyWithoutRoleInput
  }

  export type RoleUncheckedCreateInput = {
    id?: number
    name: string
    dosens?: DosenUncheckedCreateNestedManyWithoutRoleInput
    mahasiswas?: MahasiswaUncheckedCreateNestedManyWithoutRoleInput
  }

  export type RoleUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    dosens?: DosenUpdateManyWithoutRoleNestedInput
    mahasiswas?: MahasiswaUpdateManyWithoutRoleNestedInput
  }

  export type RoleUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    dosens?: DosenUncheckedUpdateManyWithoutRoleNestedInput
    mahasiswas?: MahasiswaUncheckedUpdateManyWithoutRoleNestedInput
  }

  export type RoleCreateManyInput = {
    id?: number
    name: string
  }

  export type RoleUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
  }

  export type RoleUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type MataKuliahMahasiswaListRelationFilter = {
    every?: MataKuliahMahasiswaWhereInput
    some?: MataKuliahMahasiswaWhereInput
    none?: MataKuliahMahasiswaWhereInput
  }

  export type NilaiListRelationFilter = {
    every?: NilaiWhereInput
    some?: NilaiWhereInput
    none?: NilaiWhereInput
  }

  export type RoleRelationFilter = {
    is?: RoleWhereInput
    isNot?: RoleWhereInput
  }

  export type MataKuliahMahasiswaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type NilaiOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MahasiswaCountOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    name?: SortOrder
    email?: SortOrder
    roleId?: SortOrder
  }

  export type MahasiswaAvgOrderByAggregateInput = {
    id?: SortOrder
    roleId?: SortOrder
  }

  export type MahasiswaMaxOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    name?: SortOrder
    email?: SortOrder
    roleId?: SortOrder
  }

  export type MahasiswaMinOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    name?: SortOrder
    email?: SortOrder
    roleId?: SortOrder
  }

  export type MahasiswaSumOrderByAggregateInput = {
    id?: SortOrder
    roleId?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DosenRelationFilter = {
    is?: DosenWhereInput
    isNot?: DosenWhereInput
  }

  export type MataKuliahCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    dosenId?: SortOrder
  }

  export type MataKuliahAvgOrderByAggregateInput = {
    id?: SortOrder
    dosenId?: SortOrder
  }

  export type MataKuliahMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    dosenId?: SortOrder
  }

  export type MataKuliahMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    dosenId?: SortOrder
  }

  export type MataKuliahSumOrderByAggregateInput = {
    id?: SortOrder
    dosenId?: SortOrder
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type MataKuliahListRelationFilter = {
    every?: MataKuliahWhereInput
    some?: MataKuliahWhereInput
    none?: MataKuliahWhereInput
  }

  export type MataKuliahOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DosenCountOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    name?: SortOrder
    email?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    roleId?: SortOrder
  }

  export type DosenAvgOrderByAggregateInput = {
    id?: SortOrder
    roleId?: SortOrder
  }

  export type DosenMaxOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    name?: SortOrder
    email?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    roleId?: SortOrder
  }

  export type DosenMinOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    name?: SortOrder
    email?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    roleId?: SortOrder
  }

  export type DosenSumOrderByAggregateInput = {
    id?: SortOrder
    roleId?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type MahasiswaRelationFilter = {
    is?: MahasiswaWhereInput
    isNot?: MahasiswaWhereInput
  }

  export type MataKuliahRelationFilter = {
    is?: MataKuliahWhereInput
    isNot?: MataKuliahWhereInput
  }

  export type NilaiCountOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
    mahasiswaId?: SortOrder
    matakuliahId?: SortOrder
  }

  export type NilaiAvgOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
    mahasiswaId?: SortOrder
    matakuliahId?: SortOrder
  }

  export type NilaiMaxOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
    mahasiswaId?: SortOrder
    matakuliahId?: SortOrder
  }

  export type NilaiMinOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
    mahasiswaId?: SortOrder
    matakuliahId?: SortOrder
  }

  export type NilaiSumOrderByAggregateInput = {
    id?: SortOrder
    value?: SortOrder
    mahasiswaId?: SortOrder
    matakuliahId?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type MataKuliahMahasiswaMahasiswaIdMatakuliahIdCompoundUniqueInput = {
    mahasiswaId: number
    matakuliahId: number
  }

  export type MataKuliahMahasiswaCountOrderByAggregateInput = {
    mahasiswaId?: SortOrder
    matakuliahId?: SortOrder
  }

  export type MataKuliahMahasiswaAvgOrderByAggregateInput = {
    mahasiswaId?: SortOrder
    matakuliahId?: SortOrder
  }

  export type MataKuliahMahasiswaMaxOrderByAggregateInput = {
    mahasiswaId?: SortOrder
    matakuliahId?: SortOrder
  }

  export type MataKuliahMahasiswaMinOrderByAggregateInput = {
    mahasiswaId?: SortOrder
    matakuliahId?: SortOrder
  }

  export type MataKuliahMahasiswaSumOrderByAggregateInput = {
    mahasiswaId?: SortOrder
    matakuliahId?: SortOrder
  }

  export type DosenListRelationFilter = {
    every?: DosenWhereInput
    some?: DosenWhereInput
    none?: DosenWhereInput
  }

  export type MahasiswaListRelationFilter = {
    every?: MahasiswaWhereInput
    some?: MahasiswaWhereInput
    none?: MahasiswaWhereInput
  }

  export type DosenOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MahasiswaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RoleCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type RoleAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type RoleMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type RoleMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type RoleSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type MataKuliahMahasiswaCreateNestedManyWithoutMahasiswaInput = {
    create?: XOR<MataKuliahMahasiswaCreateWithoutMahasiswaInput, MataKuliahMahasiswaUncheckedCreateWithoutMahasiswaInput> | MataKuliahMahasiswaCreateWithoutMahasiswaInput[] | MataKuliahMahasiswaUncheckedCreateWithoutMahasiswaInput[]
    connectOrCreate?: MataKuliahMahasiswaCreateOrConnectWithoutMahasiswaInput | MataKuliahMahasiswaCreateOrConnectWithoutMahasiswaInput[]
    createMany?: MataKuliahMahasiswaCreateManyMahasiswaInputEnvelope
    connect?: MataKuliahMahasiswaWhereUniqueInput | MataKuliahMahasiswaWhereUniqueInput[]
  }

  export type NilaiCreateNestedManyWithoutMahasiswaInput = {
    create?: XOR<NilaiCreateWithoutMahasiswaInput, NilaiUncheckedCreateWithoutMahasiswaInput> | NilaiCreateWithoutMahasiswaInput[] | NilaiUncheckedCreateWithoutMahasiswaInput[]
    connectOrCreate?: NilaiCreateOrConnectWithoutMahasiswaInput | NilaiCreateOrConnectWithoutMahasiswaInput[]
    createMany?: NilaiCreateManyMahasiswaInputEnvelope
    connect?: NilaiWhereUniqueInput | NilaiWhereUniqueInput[]
  }

  export type RoleCreateNestedOneWithoutMahasiswasInput = {
    create?: XOR<RoleCreateWithoutMahasiswasInput, RoleUncheckedCreateWithoutMahasiswasInput>
    connectOrCreate?: RoleCreateOrConnectWithoutMahasiswasInput
    connect?: RoleWhereUniqueInput
  }

  export type MataKuliahMahasiswaUncheckedCreateNestedManyWithoutMahasiswaInput = {
    create?: XOR<MataKuliahMahasiswaCreateWithoutMahasiswaInput, MataKuliahMahasiswaUncheckedCreateWithoutMahasiswaInput> | MataKuliahMahasiswaCreateWithoutMahasiswaInput[] | MataKuliahMahasiswaUncheckedCreateWithoutMahasiswaInput[]
    connectOrCreate?: MataKuliahMahasiswaCreateOrConnectWithoutMahasiswaInput | MataKuliahMahasiswaCreateOrConnectWithoutMahasiswaInput[]
    createMany?: MataKuliahMahasiswaCreateManyMahasiswaInputEnvelope
    connect?: MataKuliahMahasiswaWhereUniqueInput | MataKuliahMahasiswaWhereUniqueInput[]
  }

  export type NilaiUncheckedCreateNestedManyWithoutMahasiswaInput = {
    create?: XOR<NilaiCreateWithoutMahasiswaInput, NilaiUncheckedCreateWithoutMahasiswaInput> | NilaiCreateWithoutMahasiswaInput[] | NilaiUncheckedCreateWithoutMahasiswaInput[]
    connectOrCreate?: NilaiCreateOrConnectWithoutMahasiswaInput | NilaiCreateOrConnectWithoutMahasiswaInput[]
    createMany?: NilaiCreateManyMahasiswaInputEnvelope
    connect?: NilaiWhereUniqueInput | NilaiWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type MataKuliahMahasiswaUpdateManyWithoutMahasiswaNestedInput = {
    create?: XOR<MataKuliahMahasiswaCreateWithoutMahasiswaInput, MataKuliahMahasiswaUncheckedCreateWithoutMahasiswaInput> | MataKuliahMahasiswaCreateWithoutMahasiswaInput[] | MataKuliahMahasiswaUncheckedCreateWithoutMahasiswaInput[]
    connectOrCreate?: MataKuliahMahasiswaCreateOrConnectWithoutMahasiswaInput | MataKuliahMahasiswaCreateOrConnectWithoutMahasiswaInput[]
    upsert?: MataKuliahMahasiswaUpsertWithWhereUniqueWithoutMahasiswaInput | MataKuliahMahasiswaUpsertWithWhereUniqueWithoutMahasiswaInput[]
    createMany?: MataKuliahMahasiswaCreateManyMahasiswaInputEnvelope
    set?: MataKuliahMahasiswaWhereUniqueInput | MataKuliahMahasiswaWhereUniqueInput[]
    disconnect?: MataKuliahMahasiswaWhereUniqueInput | MataKuliahMahasiswaWhereUniqueInput[]
    delete?: MataKuliahMahasiswaWhereUniqueInput | MataKuliahMahasiswaWhereUniqueInput[]
    connect?: MataKuliahMahasiswaWhereUniqueInput | MataKuliahMahasiswaWhereUniqueInput[]
    update?: MataKuliahMahasiswaUpdateWithWhereUniqueWithoutMahasiswaInput | MataKuliahMahasiswaUpdateWithWhereUniqueWithoutMahasiswaInput[]
    updateMany?: MataKuliahMahasiswaUpdateManyWithWhereWithoutMahasiswaInput | MataKuliahMahasiswaUpdateManyWithWhereWithoutMahasiswaInput[]
    deleteMany?: MataKuliahMahasiswaScalarWhereInput | MataKuliahMahasiswaScalarWhereInput[]
  }

  export type NilaiUpdateManyWithoutMahasiswaNestedInput = {
    create?: XOR<NilaiCreateWithoutMahasiswaInput, NilaiUncheckedCreateWithoutMahasiswaInput> | NilaiCreateWithoutMahasiswaInput[] | NilaiUncheckedCreateWithoutMahasiswaInput[]
    connectOrCreate?: NilaiCreateOrConnectWithoutMahasiswaInput | NilaiCreateOrConnectWithoutMahasiswaInput[]
    upsert?: NilaiUpsertWithWhereUniqueWithoutMahasiswaInput | NilaiUpsertWithWhereUniqueWithoutMahasiswaInput[]
    createMany?: NilaiCreateManyMahasiswaInputEnvelope
    set?: NilaiWhereUniqueInput | NilaiWhereUniqueInput[]
    disconnect?: NilaiWhereUniqueInput | NilaiWhereUniqueInput[]
    delete?: NilaiWhereUniqueInput | NilaiWhereUniqueInput[]
    connect?: NilaiWhereUniqueInput | NilaiWhereUniqueInput[]
    update?: NilaiUpdateWithWhereUniqueWithoutMahasiswaInput | NilaiUpdateWithWhereUniqueWithoutMahasiswaInput[]
    updateMany?: NilaiUpdateManyWithWhereWithoutMahasiswaInput | NilaiUpdateManyWithWhereWithoutMahasiswaInput[]
    deleteMany?: NilaiScalarWhereInput | NilaiScalarWhereInput[]
  }

  export type RoleUpdateOneRequiredWithoutMahasiswasNestedInput = {
    create?: XOR<RoleCreateWithoutMahasiswasInput, RoleUncheckedCreateWithoutMahasiswasInput>
    connectOrCreate?: RoleCreateOrConnectWithoutMahasiswasInput
    upsert?: RoleUpsertWithoutMahasiswasInput
    connect?: RoleWhereUniqueInput
    update?: XOR<XOR<RoleUpdateToOneWithWhereWithoutMahasiswasInput, RoleUpdateWithoutMahasiswasInput>, RoleUncheckedUpdateWithoutMahasiswasInput>
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type MataKuliahMahasiswaUncheckedUpdateManyWithoutMahasiswaNestedInput = {
    create?: XOR<MataKuliahMahasiswaCreateWithoutMahasiswaInput, MataKuliahMahasiswaUncheckedCreateWithoutMahasiswaInput> | MataKuliahMahasiswaCreateWithoutMahasiswaInput[] | MataKuliahMahasiswaUncheckedCreateWithoutMahasiswaInput[]
    connectOrCreate?: MataKuliahMahasiswaCreateOrConnectWithoutMahasiswaInput | MataKuliahMahasiswaCreateOrConnectWithoutMahasiswaInput[]
    upsert?: MataKuliahMahasiswaUpsertWithWhereUniqueWithoutMahasiswaInput | MataKuliahMahasiswaUpsertWithWhereUniqueWithoutMahasiswaInput[]
    createMany?: MataKuliahMahasiswaCreateManyMahasiswaInputEnvelope
    set?: MataKuliahMahasiswaWhereUniqueInput | MataKuliahMahasiswaWhereUniqueInput[]
    disconnect?: MataKuliahMahasiswaWhereUniqueInput | MataKuliahMahasiswaWhereUniqueInput[]
    delete?: MataKuliahMahasiswaWhereUniqueInput | MataKuliahMahasiswaWhereUniqueInput[]
    connect?: MataKuliahMahasiswaWhereUniqueInput | MataKuliahMahasiswaWhereUniqueInput[]
    update?: MataKuliahMahasiswaUpdateWithWhereUniqueWithoutMahasiswaInput | MataKuliahMahasiswaUpdateWithWhereUniqueWithoutMahasiswaInput[]
    updateMany?: MataKuliahMahasiswaUpdateManyWithWhereWithoutMahasiswaInput | MataKuliahMahasiswaUpdateManyWithWhereWithoutMahasiswaInput[]
    deleteMany?: MataKuliahMahasiswaScalarWhereInput | MataKuliahMahasiswaScalarWhereInput[]
  }

  export type NilaiUncheckedUpdateManyWithoutMahasiswaNestedInput = {
    create?: XOR<NilaiCreateWithoutMahasiswaInput, NilaiUncheckedCreateWithoutMahasiswaInput> | NilaiCreateWithoutMahasiswaInput[] | NilaiUncheckedCreateWithoutMahasiswaInput[]
    connectOrCreate?: NilaiCreateOrConnectWithoutMahasiswaInput | NilaiCreateOrConnectWithoutMahasiswaInput[]
    upsert?: NilaiUpsertWithWhereUniqueWithoutMahasiswaInput | NilaiUpsertWithWhereUniqueWithoutMahasiswaInput[]
    createMany?: NilaiCreateManyMahasiswaInputEnvelope
    set?: NilaiWhereUniqueInput | NilaiWhereUniqueInput[]
    disconnect?: NilaiWhereUniqueInput | NilaiWhereUniqueInput[]
    delete?: NilaiWhereUniqueInput | NilaiWhereUniqueInput[]
    connect?: NilaiWhereUniqueInput | NilaiWhereUniqueInput[]
    update?: NilaiUpdateWithWhereUniqueWithoutMahasiswaInput | NilaiUpdateWithWhereUniqueWithoutMahasiswaInput[]
    updateMany?: NilaiUpdateManyWithWhereWithoutMahasiswaInput | NilaiUpdateManyWithWhereWithoutMahasiswaInput[]
    deleteMany?: NilaiScalarWhereInput | NilaiScalarWhereInput[]
  }

  export type DosenCreateNestedOneWithoutMatakuliahsInput = {
    create?: XOR<DosenCreateWithoutMatakuliahsInput, DosenUncheckedCreateWithoutMatakuliahsInput>
    connectOrCreate?: DosenCreateOrConnectWithoutMatakuliahsInput
    connect?: DosenWhereUniqueInput
  }

  export type MataKuliahMahasiswaCreateNestedManyWithoutMatakuliahInput = {
    create?: XOR<MataKuliahMahasiswaCreateWithoutMatakuliahInput, MataKuliahMahasiswaUncheckedCreateWithoutMatakuliahInput> | MataKuliahMahasiswaCreateWithoutMatakuliahInput[] | MataKuliahMahasiswaUncheckedCreateWithoutMatakuliahInput[]
    connectOrCreate?: MataKuliahMahasiswaCreateOrConnectWithoutMatakuliahInput | MataKuliahMahasiswaCreateOrConnectWithoutMatakuliahInput[]
    createMany?: MataKuliahMahasiswaCreateManyMatakuliahInputEnvelope
    connect?: MataKuliahMahasiswaWhereUniqueInput | MataKuliahMahasiswaWhereUniqueInput[]
  }

  export type NilaiCreateNestedManyWithoutMatakuliahInput = {
    create?: XOR<NilaiCreateWithoutMatakuliahInput, NilaiUncheckedCreateWithoutMatakuliahInput> | NilaiCreateWithoutMatakuliahInput[] | NilaiUncheckedCreateWithoutMatakuliahInput[]
    connectOrCreate?: NilaiCreateOrConnectWithoutMatakuliahInput | NilaiCreateOrConnectWithoutMatakuliahInput[]
    createMany?: NilaiCreateManyMatakuliahInputEnvelope
    connect?: NilaiWhereUniqueInput | NilaiWhereUniqueInput[]
  }

  export type MataKuliahMahasiswaUncheckedCreateNestedManyWithoutMatakuliahInput = {
    create?: XOR<MataKuliahMahasiswaCreateWithoutMatakuliahInput, MataKuliahMahasiswaUncheckedCreateWithoutMatakuliahInput> | MataKuliahMahasiswaCreateWithoutMatakuliahInput[] | MataKuliahMahasiswaUncheckedCreateWithoutMatakuliahInput[]
    connectOrCreate?: MataKuliahMahasiswaCreateOrConnectWithoutMatakuliahInput | MataKuliahMahasiswaCreateOrConnectWithoutMatakuliahInput[]
    createMany?: MataKuliahMahasiswaCreateManyMatakuliahInputEnvelope
    connect?: MataKuliahMahasiswaWhereUniqueInput | MataKuliahMahasiswaWhereUniqueInput[]
  }

  export type NilaiUncheckedCreateNestedManyWithoutMatakuliahInput = {
    create?: XOR<NilaiCreateWithoutMatakuliahInput, NilaiUncheckedCreateWithoutMatakuliahInput> | NilaiCreateWithoutMatakuliahInput[] | NilaiUncheckedCreateWithoutMatakuliahInput[]
    connectOrCreate?: NilaiCreateOrConnectWithoutMatakuliahInput | NilaiCreateOrConnectWithoutMatakuliahInput[]
    createMany?: NilaiCreateManyMatakuliahInputEnvelope
    connect?: NilaiWhereUniqueInput | NilaiWhereUniqueInput[]
  }

  export type DosenUpdateOneRequiredWithoutMatakuliahsNestedInput = {
    create?: XOR<DosenCreateWithoutMatakuliahsInput, DosenUncheckedCreateWithoutMatakuliahsInput>
    connectOrCreate?: DosenCreateOrConnectWithoutMatakuliahsInput
    upsert?: DosenUpsertWithoutMatakuliahsInput
    connect?: DosenWhereUniqueInput
    update?: XOR<XOR<DosenUpdateToOneWithWhereWithoutMatakuliahsInput, DosenUpdateWithoutMatakuliahsInput>, DosenUncheckedUpdateWithoutMatakuliahsInput>
  }

  export type MataKuliahMahasiswaUpdateManyWithoutMatakuliahNestedInput = {
    create?: XOR<MataKuliahMahasiswaCreateWithoutMatakuliahInput, MataKuliahMahasiswaUncheckedCreateWithoutMatakuliahInput> | MataKuliahMahasiswaCreateWithoutMatakuliahInput[] | MataKuliahMahasiswaUncheckedCreateWithoutMatakuliahInput[]
    connectOrCreate?: MataKuliahMahasiswaCreateOrConnectWithoutMatakuliahInput | MataKuliahMahasiswaCreateOrConnectWithoutMatakuliahInput[]
    upsert?: MataKuliahMahasiswaUpsertWithWhereUniqueWithoutMatakuliahInput | MataKuliahMahasiswaUpsertWithWhereUniqueWithoutMatakuliahInput[]
    createMany?: MataKuliahMahasiswaCreateManyMatakuliahInputEnvelope
    set?: MataKuliahMahasiswaWhereUniqueInput | MataKuliahMahasiswaWhereUniqueInput[]
    disconnect?: MataKuliahMahasiswaWhereUniqueInput | MataKuliahMahasiswaWhereUniqueInput[]
    delete?: MataKuliahMahasiswaWhereUniqueInput | MataKuliahMahasiswaWhereUniqueInput[]
    connect?: MataKuliahMahasiswaWhereUniqueInput | MataKuliahMahasiswaWhereUniqueInput[]
    update?: MataKuliahMahasiswaUpdateWithWhereUniqueWithoutMatakuliahInput | MataKuliahMahasiswaUpdateWithWhereUniqueWithoutMatakuliahInput[]
    updateMany?: MataKuliahMahasiswaUpdateManyWithWhereWithoutMatakuliahInput | MataKuliahMahasiswaUpdateManyWithWhereWithoutMatakuliahInput[]
    deleteMany?: MataKuliahMahasiswaScalarWhereInput | MataKuliahMahasiswaScalarWhereInput[]
  }

  export type NilaiUpdateManyWithoutMatakuliahNestedInput = {
    create?: XOR<NilaiCreateWithoutMatakuliahInput, NilaiUncheckedCreateWithoutMatakuliahInput> | NilaiCreateWithoutMatakuliahInput[] | NilaiUncheckedCreateWithoutMatakuliahInput[]
    connectOrCreate?: NilaiCreateOrConnectWithoutMatakuliahInput | NilaiCreateOrConnectWithoutMatakuliahInput[]
    upsert?: NilaiUpsertWithWhereUniqueWithoutMatakuliahInput | NilaiUpsertWithWhereUniqueWithoutMatakuliahInput[]
    createMany?: NilaiCreateManyMatakuliahInputEnvelope
    set?: NilaiWhereUniqueInput | NilaiWhereUniqueInput[]
    disconnect?: NilaiWhereUniqueInput | NilaiWhereUniqueInput[]
    delete?: NilaiWhereUniqueInput | NilaiWhereUniqueInput[]
    connect?: NilaiWhereUniqueInput | NilaiWhereUniqueInput[]
    update?: NilaiUpdateWithWhereUniqueWithoutMatakuliahInput | NilaiUpdateWithWhereUniqueWithoutMatakuliahInput[]
    updateMany?: NilaiUpdateManyWithWhereWithoutMatakuliahInput | NilaiUpdateManyWithWhereWithoutMatakuliahInput[]
    deleteMany?: NilaiScalarWhereInput | NilaiScalarWhereInput[]
  }

  export type MataKuliahMahasiswaUncheckedUpdateManyWithoutMatakuliahNestedInput = {
    create?: XOR<MataKuliahMahasiswaCreateWithoutMatakuliahInput, MataKuliahMahasiswaUncheckedCreateWithoutMatakuliahInput> | MataKuliahMahasiswaCreateWithoutMatakuliahInput[] | MataKuliahMahasiswaUncheckedCreateWithoutMatakuliahInput[]
    connectOrCreate?: MataKuliahMahasiswaCreateOrConnectWithoutMatakuliahInput | MataKuliahMahasiswaCreateOrConnectWithoutMatakuliahInput[]
    upsert?: MataKuliahMahasiswaUpsertWithWhereUniqueWithoutMatakuliahInput | MataKuliahMahasiswaUpsertWithWhereUniqueWithoutMatakuliahInput[]
    createMany?: MataKuliahMahasiswaCreateManyMatakuliahInputEnvelope
    set?: MataKuliahMahasiswaWhereUniqueInput | MataKuliahMahasiswaWhereUniqueInput[]
    disconnect?: MataKuliahMahasiswaWhereUniqueInput | MataKuliahMahasiswaWhereUniqueInput[]
    delete?: MataKuliahMahasiswaWhereUniqueInput | MataKuliahMahasiswaWhereUniqueInput[]
    connect?: MataKuliahMahasiswaWhereUniqueInput | MataKuliahMahasiswaWhereUniqueInput[]
    update?: MataKuliahMahasiswaUpdateWithWhereUniqueWithoutMatakuliahInput | MataKuliahMahasiswaUpdateWithWhereUniqueWithoutMatakuliahInput[]
    updateMany?: MataKuliahMahasiswaUpdateManyWithWhereWithoutMatakuliahInput | MataKuliahMahasiswaUpdateManyWithWhereWithoutMatakuliahInput[]
    deleteMany?: MataKuliahMahasiswaScalarWhereInput | MataKuliahMahasiswaScalarWhereInput[]
  }

  export type NilaiUncheckedUpdateManyWithoutMatakuliahNestedInput = {
    create?: XOR<NilaiCreateWithoutMatakuliahInput, NilaiUncheckedCreateWithoutMatakuliahInput> | NilaiCreateWithoutMatakuliahInput[] | NilaiUncheckedCreateWithoutMatakuliahInput[]
    connectOrCreate?: NilaiCreateOrConnectWithoutMatakuliahInput | NilaiCreateOrConnectWithoutMatakuliahInput[]
    upsert?: NilaiUpsertWithWhereUniqueWithoutMatakuliahInput | NilaiUpsertWithWhereUniqueWithoutMatakuliahInput[]
    createMany?: NilaiCreateManyMatakuliahInputEnvelope
    set?: NilaiWhereUniqueInput | NilaiWhereUniqueInput[]
    disconnect?: NilaiWhereUniqueInput | NilaiWhereUniqueInput[]
    delete?: NilaiWhereUniqueInput | NilaiWhereUniqueInput[]
    connect?: NilaiWhereUniqueInput | NilaiWhereUniqueInput[]
    update?: NilaiUpdateWithWhereUniqueWithoutMatakuliahInput | NilaiUpdateWithWhereUniqueWithoutMatakuliahInput[]
    updateMany?: NilaiUpdateManyWithWhereWithoutMatakuliahInput | NilaiUpdateManyWithWhereWithoutMatakuliahInput[]
    deleteMany?: NilaiScalarWhereInput | NilaiScalarWhereInput[]
  }

  export type MataKuliahCreateNestedManyWithoutDosenInput = {
    create?: XOR<MataKuliahCreateWithoutDosenInput, MataKuliahUncheckedCreateWithoutDosenInput> | MataKuliahCreateWithoutDosenInput[] | MataKuliahUncheckedCreateWithoutDosenInput[]
    connectOrCreate?: MataKuliahCreateOrConnectWithoutDosenInput | MataKuliahCreateOrConnectWithoutDosenInput[]
    createMany?: MataKuliahCreateManyDosenInputEnvelope
    connect?: MataKuliahWhereUniqueInput | MataKuliahWhereUniqueInput[]
  }

  export type RoleCreateNestedOneWithoutDosensInput = {
    create?: XOR<RoleCreateWithoutDosensInput, RoleUncheckedCreateWithoutDosensInput>
    connectOrCreate?: RoleCreateOrConnectWithoutDosensInput
    connect?: RoleWhereUniqueInput
  }

  export type MataKuliahUncheckedCreateNestedManyWithoutDosenInput = {
    create?: XOR<MataKuliahCreateWithoutDosenInput, MataKuliahUncheckedCreateWithoutDosenInput> | MataKuliahCreateWithoutDosenInput[] | MataKuliahUncheckedCreateWithoutDosenInput[]
    connectOrCreate?: MataKuliahCreateOrConnectWithoutDosenInput | MataKuliahCreateOrConnectWithoutDosenInput[]
    createMany?: MataKuliahCreateManyDosenInputEnvelope
    connect?: MataKuliahWhereUniqueInput | MataKuliahWhereUniqueInput[]
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type MataKuliahUpdateManyWithoutDosenNestedInput = {
    create?: XOR<MataKuliahCreateWithoutDosenInput, MataKuliahUncheckedCreateWithoutDosenInput> | MataKuliahCreateWithoutDosenInput[] | MataKuliahUncheckedCreateWithoutDosenInput[]
    connectOrCreate?: MataKuliahCreateOrConnectWithoutDosenInput | MataKuliahCreateOrConnectWithoutDosenInput[]
    upsert?: MataKuliahUpsertWithWhereUniqueWithoutDosenInput | MataKuliahUpsertWithWhereUniqueWithoutDosenInput[]
    createMany?: MataKuliahCreateManyDosenInputEnvelope
    set?: MataKuliahWhereUniqueInput | MataKuliahWhereUniqueInput[]
    disconnect?: MataKuliahWhereUniqueInput | MataKuliahWhereUniqueInput[]
    delete?: MataKuliahWhereUniqueInput | MataKuliahWhereUniqueInput[]
    connect?: MataKuliahWhereUniqueInput | MataKuliahWhereUniqueInput[]
    update?: MataKuliahUpdateWithWhereUniqueWithoutDosenInput | MataKuliahUpdateWithWhereUniqueWithoutDosenInput[]
    updateMany?: MataKuliahUpdateManyWithWhereWithoutDosenInput | MataKuliahUpdateManyWithWhereWithoutDosenInput[]
    deleteMany?: MataKuliahScalarWhereInput | MataKuliahScalarWhereInput[]
  }

  export type RoleUpdateOneRequiredWithoutDosensNestedInput = {
    create?: XOR<RoleCreateWithoutDosensInput, RoleUncheckedCreateWithoutDosensInput>
    connectOrCreate?: RoleCreateOrConnectWithoutDosensInput
    upsert?: RoleUpsertWithoutDosensInput
    connect?: RoleWhereUniqueInput
    update?: XOR<XOR<RoleUpdateToOneWithWhereWithoutDosensInput, RoleUpdateWithoutDosensInput>, RoleUncheckedUpdateWithoutDosensInput>
  }

  export type MataKuliahUncheckedUpdateManyWithoutDosenNestedInput = {
    create?: XOR<MataKuliahCreateWithoutDosenInput, MataKuliahUncheckedCreateWithoutDosenInput> | MataKuliahCreateWithoutDosenInput[] | MataKuliahUncheckedCreateWithoutDosenInput[]
    connectOrCreate?: MataKuliahCreateOrConnectWithoutDosenInput | MataKuliahCreateOrConnectWithoutDosenInput[]
    upsert?: MataKuliahUpsertWithWhereUniqueWithoutDosenInput | MataKuliahUpsertWithWhereUniqueWithoutDosenInput[]
    createMany?: MataKuliahCreateManyDosenInputEnvelope
    set?: MataKuliahWhereUniqueInput | MataKuliahWhereUniqueInput[]
    disconnect?: MataKuliahWhereUniqueInput | MataKuliahWhereUniqueInput[]
    delete?: MataKuliahWhereUniqueInput | MataKuliahWhereUniqueInput[]
    connect?: MataKuliahWhereUniqueInput | MataKuliahWhereUniqueInput[]
    update?: MataKuliahUpdateWithWhereUniqueWithoutDosenInput | MataKuliahUpdateWithWhereUniqueWithoutDosenInput[]
    updateMany?: MataKuliahUpdateManyWithWhereWithoutDosenInput | MataKuliahUpdateManyWithWhereWithoutDosenInput[]
    deleteMany?: MataKuliahScalarWhereInput | MataKuliahScalarWhereInput[]
  }

  export type MahasiswaCreateNestedOneWithoutNilaisInput = {
    create?: XOR<MahasiswaCreateWithoutNilaisInput, MahasiswaUncheckedCreateWithoutNilaisInput>
    connectOrCreate?: MahasiswaCreateOrConnectWithoutNilaisInput
    connect?: MahasiswaWhereUniqueInput
  }

  export type MataKuliahCreateNestedOneWithoutNilaisInput = {
    create?: XOR<MataKuliahCreateWithoutNilaisInput, MataKuliahUncheckedCreateWithoutNilaisInput>
    connectOrCreate?: MataKuliahCreateOrConnectWithoutNilaisInput
    connect?: MataKuliahWhereUniqueInput
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type MahasiswaUpdateOneRequiredWithoutNilaisNestedInput = {
    create?: XOR<MahasiswaCreateWithoutNilaisInput, MahasiswaUncheckedCreateWithoutNilaisInput>
    connectOrCreate?: MahasiswaCreateOrConnectWithoutNilaisInput
    upsert?: MahasiswaUpsertWithoutNilaisInput
    connect?: MahasiswaWhereUniqueInput
    update?: XOR<XOR<MahasiswaUpdateToOneWithWhereWithoutNilaisInput, MahasiswaUpdateWithoutNilaisInput>, MahasiswaUncheckedUpdateWithoutNilaisInput>
  }

  export type MataKuliahUpdateOneRequiredWithoutNilaisNestedInput = {
    create?: XOR<MataKuliahCreateWithoutNilaisInput, MataKuliahUncheckedCreateWithoutNilaisInput>
    connectOrCreate?: MataKuliahCreateOrConnectWithoutNilaisInput
    upsert?: MataKuliahUpsertWithoutNilaisInput
    connect?: MataKuliahWhereUniqueInput
    update?: XOR<XOR<MataKuliahUpdateToOneWithWhereWithoutNilaisInput, MataKuliahUpdateWithoutNilaisInput>, MataKuliahUncheckedUpdateWithoutNilaisInput>
  }

  export type MahasiswaCreateNestedOneWithoutMatakuliahsInput = {
    create?: XOR<MahasiswaCreateWithoutMatakuliahsInput, MahasiswaUncheckedCreateWithoutMatakuliahsInput>
    connectOrCreate?: MahasiswaCreateOrConnectWithoutMatakuliahsInput
    connect?: MahasiswaWhereUniqueInput
  }

  export type MataKuliahCreateNestedOneWithoutMahasiswasInput = {
    create?: XOR<MataKuliahCreateWithoutMahasiswasInput, MataKuliahUncheckedCreateWithoutMahasiswasInput>
    connectOrCreate?: MataKuliahCreateOrConnectWithoutMahasiswasInput
    connect?: MataKuliahWhereUniqueInput
  }

  export type MahasiswaUpdateOneRequiredWithoutMatakuliahsNestedInput = {
    create?: XOR<MahasiswaCreateWithoutMatakuliahsInput, MahasiswaUncheckedCreateWithoutMatakuliahsInput>
    connectOrCreate?: MahasiswaCreateOrConnectWithoutMatakuliahsInput
    upsert?: MahasiswaUpsertWithoutMatakuliahsInput
    connect?: MahasiswaWhereUniqueInput
    update?: XOR<XOR<MahasiswaUpdateToOneWithWhereWithoutMatakuliahsInput, MahasiswaUpdateWithoutMatakuliahsInput>, MahasiswaUncheckedUpdateWithoutMatakuliahsInput>
  }

  export type MataKuliahUpdateOneRequiredWithoutMahasiswasNestedInput = {
    create?: XOR<MataKuliahCreateWithoutMahasiswasInput, MataKuliahUncheckedCreateWithoutMahasiswasInput>
    connectOrCreate?: MataKuliahCreateOrConnectWithoutMahasiswasInput
    upsert?: MataKuliahUpsertWithoutMahasiswasInput
    connect?: MataKuliahWhereUniqueInput
    update?: XOR<XOR<MataKuliahUpdateToOneWithWhereWithoutMahasiswasInput, MataKuliahUpdateWithoutMahasiswasInput>, MataKuliahUncheckedUpdateWithoutMahasiswasInput>
  }

  export type DosenCreateNestedManyWithoutRoleInput = {
    create?: XOR<DosenCreateWithoutRoleInput, DosenUncheckedCreateWithoutRoleInput> | DosenCreateWithoutRoleInput[] | DosenUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: DosenCreateOrConnectWithoutRoleInput | DosenCreateOrConnectWithoutRoleInput[]
    createMany?: DosenCreateManyRoleInputEnvelope
    connect?: DosenWhereUniqueInput | DosenWhereUniqueInput[]
  }

  export type MahasiswaCreateNestedManyWithoutRoleInput = {
    create?: XOR<MahasiswaCreateWithoutRoleInput, MahasiswaUncheckedCreateWithoutRoleInput> | MahasiswaCreateWithoutRoleInput[] | MahasiswaUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: MahasiswaCreateOrConnectWithoutRoleInput | MahasiswaCreateOrConnectWithoutRoleInput[]
    createMany?: MahasiswaCreateManyRoleInputEnvelope
    connect?: MahasiswaWhereUniqueInput | MahasiswaWhereUniqueInput[]
  }

  export type DosenUncheckedCreateNestedManyWithoutRoleInput = {
    create?: XOR<DosenCreateWithoutRoleInput, DosenUncheckedCreateWithoutRoleInput> | DosenCreateWithoutRoleInput[] | DosenUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: DosenCreateOrConnectWithoutRoleInput | DosenCreateOrConnectWithoutRoleInput[]
    createMany?: DosenCreateManyRoleInputEnvelope
    connect?: DosenWhereUniqueInput | DosenWhereUniqueInput[]
  }

  export type MahasiswaUncheckedCreateNestedManyWithoutRoleInput = {
    create?: XOR<MahasiswaCreateWithoutRoleInput, MahasiswaUncheckedCreateWithoutRoleInput> | MahasiswaCreateWithoutRoleInput[] | MahasiswaUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: MahasiswaCreateOrConnectWithoutRoleInput | MahasiswaCreateOrConnectWithoutRoleInput[]
    createMany?: MahasiswaCreateManyRoleInputEnvelope
    connect?: MahasiswaWhereUniqueInput | MahasiswaWhereUniqueInput[]
  }

  export type DosenUpdateManyWithoutRoleNestedInput = {
    create?: XOR<DosenCreateWithoutRoleInput, DosenUncheckedCreateWithoutRoleInput> | DosenCreateWithoutRoleInput[] | DosenUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: DosenCreateOrConnectWithoutRoleInput | DosenCreateOrConnectWithoutRoleInput[]
    upsert?: DosenUpsertWithWhereUniqueWithoutRoleInput | DosenUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: DosenCreateManyRoleInputEnvelope
    set?: DosenWhereUniqueInput | DosenWhereUniqueInput[]
    disconnect?: DosenWhereUniqueInput | DosenWhereUniqueInput[]
    delete?: DosenWhereUniqueInput | DosenWhereUniqueInput[]
    connect?: DosenWhereUniqueInput | DosenWhereUniqueInput[]
    update?: DosenUpdateWithWhereUniqueWithoutRoleInput | DosenUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: DosenUpdateManyWithWhereWithoutRoleInput | DosenUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: DosenScalarWhereInput | DosenScalarWhereInput[]
  }

  export type MahasiswaUpdateManyWithoutRoleNestedInput = {
    create?: XOR<MahasiswaCreateWithoutRoleInput, MahasiswaUncheckedCreateWithoutRoleInput> | MahasiswaCreateWithoutRoleInput[] | MahasiswaUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: MahasiswaCreateOrConnectWithoutRoleInput | MahasiswaCreateOrConnectWithoutRoleInput[]
    upsert?: MahasiswaUpsertWithWhereUniqueWithoutRoleInput | MahasiswaUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: MahasiswaCreateManyRoleInputEnvelope
    set?: MahasiswaWhereUniqueInput | MahasiswaWhereUniqueInput[]
    disconnect?: MahasiswaWhereUniqueInput | MahasiswaWhereUniqueInput[]
    delete?: MahasiswaWhereUniqueInput | MahasiswaWhereUniqueInput[]
    connect?: MahasiswaWhereUniqueInput | MahasiswaWhereUniqueInput[]
    update?: MahasiswaUpdateWithWhereUniqueWithoutRoleInput | MahasiswaUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: MahasiswaUpdateManyWithWhereWithoutRoleInput | MahasiswaUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: MahasiswaScalarWhereInput | MahasiswaScalarWhereInput[]
  }

  export type DosenUncheckedUpdateManyWithoutRoleNestedInput = {
    create?: XOR<DosenCreateWithoutRoleInput, DosenUncheckedCreateWithoutRoleInput> | DosenCreateWithoutRoleInput[] | DosenUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: DosenCreateOrConnectWithoutRoleInput | DosenCreateOrConnectWithoutRoleInput[]
    upsert?: DosenUpsertWithWhereUniqueWithoutRoleInput | DosenUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: DosenCreateManyRoleInputEnvelope
    set?: DosenWhereUniqueInput | DosenWhereUniqueInput[]
    disconnect?: DosenWhereUniqueInput | DosenWhereUniqueInput[]
    delete?: DosenWhereUniqueInput | DosenWhereUniqueInput[]
    connect?: DosenWhereUniqueInput | DosenWhereUniqueInput[]
    update?: DosenUpdateWithWhereUniqueWithoutRoleInput | DosenUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: DosenUpdateManyWithWhereWithoutRoleInput | DosenUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: DosenScalarWhereInput | DosenScalarWhereInput[]
  }

  export type MahasiswaUncheckedUpdateManyWithoutRoleNestedInput = {
    create?: XOR<MahasiswaCreateWithoutRoleInput, MahasiswaUncheckedCreateWithoutRoleInput> | MahasiswaCreateWithoutRoleInput[] | MahasiswaUncheckedCreateWithoutRoleInput[]
    connectOrCreate?: MahasiswaCreateOrConnectWithoutRoleInput | MahasiswaCreateOrConnectWithoutRoleInput[]
    upsert?: MahasiswaUpsertWithWhereUniqueWithoutRoleInput | MahasiswaUpsertWithWhereUniqueWithoutRoleInput[]
    createMany?: MahasiswaCreateManyRoleInputEnvelope
    set?: MahasiswaWhereUniqueInput | MahasiswaWhereUniqueInput[]
    disconnect?: MahasiswaWhereUniqueInput | MahasiswaWhereUniqueInput[]
    delete?: MahasiswaWhereUniqueInput | MahasiswaWhereUniqueInput[]
    connect?: MahasiswaWhereUniqueInput | MahasiswaWhereUniqueInput[]
    update?: MahasiswaUpdateWithWhereUniqueWithoutRoleInput | MahasiswaUpdateWithWhereUniqueWithoutRoleInput[]
    updateMany?: MahasiswaUpdateManyWithWhereWithoutRoleInput | MahasiswaUpdateManyWithWhereWithoutRoleInput[]
    deleteMany?: MahasiswaScalarWhereInput | MahasiswaScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type MataKuliahMahasiswaCreateWithoutMahasiswaInput = {
    matakuliah: MataKuliahCreateNestedOneWithoutMahasiswasInput
  }

  export type MataKuliahMahasiswaUncheckedCreateWithoutMahasiswaInput = {
    matakuliahId: number
  }

  export type MataKuliahMahasiswaCreateOrConnectWithoutMahasiswaInput = {
    where: MataKuliahMahasiswaWhereUniqueInput
    create: XOR<MataKuliahMahasiswaCreateWithoutMahasiswaInput, MataKuliahMahasiswaUncheckedCreateWithoutMahasiswaInput>
  }

  export type MataKuliahMahasiswaCreateManyMahasiswaInputEnvelope = {
    data: MataKuliahMahasiswaCreateManyMahasiswaInput | MataKuliahMahasiswaCreateManyMahasiswaInput[]
    skipDuplicates?: boolean
  }

  export type NilaiCreateWithoutMahasiswaInput = {
    value: number
    matakuliah: MataKuliahCreateNestedOneWithoutNilaisInput
  }

  export type NilaiUncheckedCreateWithoutMahasiswaInput = {
    id?: number
    value: number
    matakuliahId: number
  }

  export type NilaiCreateOrConnectWithoutMahasiswaInput = {
    where: NilaiWhereUniqueInput
    create: XOR<NilaiCreateWithoutMahasiswaInput, NilaiUncheckedCreateWithoutMahasiswaInput>
  }

  export type NilaiCreateManyMahasiswaInputEnvelope = {
    data: NilaiCreateManyMahasiswaInput | NilaiCreateManyMahasiswaInput[]
    skipDuplicates?: boolean
  }

  export type RoleCreateWithoutMahasiswasInput = {
    name: string
    dosens?: DosenCreateNestedManyWithoutRoleInput
  }

  export type RoleUncheckedCreateWithoutMahasiswasInput = {
    id?: number
    name: string
    dosens?: DosenUncheckedCreateNestedManyWithoutRoleInput
  }

  export type RoleCreateOrConnectWithoutMahasiswasInput = {
    where: RoleWhereUniqueInput
    create: XOR<RoleCreateWithoutMahasiswasInput, RoleUncheckedCreateWithoutMahasiswasInput>
  }

  export type MataKuliahMahasiswaUpsertWithWhereUniqueWithoutMahasiswaInput = {
    where: MataKuliahMahasiswaWhereUniqueInput
    update: XOR<MataKuliahMahasiswaUpdateWithoutMahasiswaInput, MataKuliahMahasiswaUncheckedUpdateWithoutMahasiswaInput>
    create: XOR<MataKuliahMahasiswaCreateWithoutMahasiswaInput, MataKuliahMahasiswaUncheckedCreateWithoutMahasiswaInput>
  }

  export type MataKuliahMahasiswaUpdateWithWhereUniqueWithoutMahasiswaInput = {
    where: MataKuliahMahasiswaWhereUniqueInput
    data: XOR<MataKuliahMahasiswaUpdateWithoutMahasiswaInput, MataKuliahMahasiswaUncheckedUpdateWithoutMahasiswaInput>
  }

  export type MataKuliahMahasiswaUpdateManyWithWhereWithoutMahasiswaInput = {
    where: MataKuliahMahasiswaScalarWhereInput
    data: XOR<MataKuliahMahasiswaUpdateManyMutationInput, MataKuliahMahasiswaUncheckedUpdateManyWithoutMahasiswaInput>
  }

  export type MataKuliahMahasiswaScalarWhereInput = {
    AND?: MataKuliahMahasiswaScalarWhereInput | MataKuliahMahasiswaScalarWhereInput[]
    OR?: MataKuliahMahasiswaScalarWhereInput[]
    NOT?: MataKuliahMahasiswaScalarWhereInput | MataKuliahMahasiswaScalarWhereInput[]
    mahasiswaId?: IntFilter<"MataKuliahMahasiswa"> | number
    matakuliahId?: IntFilter<"MataKuliahMahasiswa"> | number
  }

  export type NilaiUpsertWithWhereUniqueWithoutMahasiswaInput = {
    where: NilaiWhereUniqueInput
    update: XOR<NilaiUpdateWithoutMahasiswaInput, NilaiUncheckedUpdateWithoutMahasiswaInput>
    create: XOR<NilaiCreateWithoutMahasiswaInput, NilaiUncheckedCreateWithoutMahasiswaInput>
  }

  export type NilaiUpdateWithWhereUniqueWithoutMahasiswaInput = {
    where: NilaiWhereUniqueInput
    data: XOR<NilaiUpdateWithoutMahasiswaInput, NilaiUncheckedUpdateWithoutMahasiswaInput>
  }

  export type NilaiUpdateManyWithWhereWithoutMahasiswaInput = {
    where: NilaiScalarWhereInput
    data: XOR<NilaiUpdateManyMutationInput, NilaiUncheckedUpdateManyWithoutMahasiswaInput>
  }

  export type NilaiScalarWhereInput = {
    AND?: NilaiScalarWhereInput | NilaiScalarWhereInput[]
    OR?: NilaiScalarWhereInput[]
    NOT?: NilaiScalarWhereInput | NilaiScalarWhereInput[]
    id?: IntFilter<"Nilai"> | number
    value?: FloatFilter<"Nilai"> | number
    mahasiswaId?: IntFilter<"Nilai"> | number
    matakuliahId?: IntFilter<"Nilai"> | number
  }

  export type RoleUpsertWithoutMahasiswasInput = {
    update: XOR<RoleUpdateWithoutMahasiswasInput, RoleUncheckedUpdateWithoutMahasiswasInput>
    create: XOR<RoleCreateWithoutMahasiswasInput, RoleUncheckedCreateWithoutMahasiswasInput>
    where?: RoleWhereInput
  }

  export type RoleUpdateToOneWithWhereWithoutMahasiswasInput = {
    where?: RoleWhereInput
    data: XOR<RoleUpdateWithoutMahasiswasInput, RoleUncheckedUpdateWithoutMahasiswasInput>
  }

  export type RoleUpdateWithoutMahasiswasInput = {
    name?: StringFieldUpdateOperationsInput | string
    dosens?: DosenUpdateManyWithoutRoleNestedInput
  }

  export type RoleUncheckedUpdateWithoutMahasiswasInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    dosens?: DosenUncheckedUpdateManyWithoutRoleNestedInput
  }

  export type DosenCreateWithoutMatakuliahsInput = {
    username: string
    password: string
    name: string
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    role: RoleCreateNestedOneWithoutDosensInput
  }

  export type DosenUncheckedCreateWithoutMatakuliahsInput = {
    id?: number
    username: string
    password: string
    name: string
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    roleId: number
  }

  export type DosenCreateOrConnectWithoutMatakuliahsInput = {
    where: DosenWhereUniqueInput
    create: XOR<DosenCreateWithoutMatakuliahsInput, DosenUncheckedCreateWithoutMatakuliahsInput>
  }

  export type MataKuliahMahasiswaCreateWithoutMatakuliahInput = {
    mahasiswa: MahasiswaCreateNestedOneWithoutMatakuliahsInput
  }

  export type MataKuliahMahasiswaUncheckedCreateWithoutMatakuliahInput = {
    mahasiswaId: number
  }

  export type MataKuliahMahasiswaCreateOrConnectWithoutMatakuliahInput = {
    where: MataKuliahMahasiswaWhereUniqueInput
    create: XOR<MataKuliahMahasiswaCreateWithoutMatakuliahInput, MataKuliahMahasiswaUncheckedCreateWithoutMatakuliahInput>
  }

  export type MataKuliahMahasiswaCreateManyMatakuliahInputEnvelope = {
    data: MataKuliahMahasiswaCreateManyMatakuliahInput | MataKuliahMahasiswaCreateManyMatakuliahInput[]
    skipDuplicates?: boolean
  }

  export type NilaiCreateWithoutMatakuliahInput = {
    value: number
    mahasiswa: MahasiswaCreateNestedOneWithoutNilaisInput
  }

  export type NilaiUncheckedCreateWithoutMatakuliahInput = {
    id?: number
    value: number
    mahasiswaId: number
  }

  export type NilaiCreateOrConnectWithoutMatakuliahInput = {
    where: NilaiWhereUniqueInput
    create: XOR<NilaiCreateWithoutMatakuliahInput, NilaiUncheckedCreateWithoutMatakuliahInput>
  }

  export type NilaiCreateManyMatakuliahInputEnvelope = {
    data: NilaiCreateManyMatakuliahInput | NilaiCreateManyMatakuliahInput[]
    skipDuplicates?: boolean
  }

  export type DosenUpsertWithoutMatakuliahsInput = {
    update: XOR<DosenUpdateWithoutMatakuliahsInput, DosenUncheckedUpdateWithoutMatakuliahsInput>
    create: XOR<DosenCreateWithoutMatakuliahsInput, DosenUncheckedCreateWithoutMatakuliahsInput>
    where?: DosenWhereInput
  }

  export type DosenUpdateToOneWithWhereWithoutMatakuliahsInput = {
    where?: DosenWhereInput
    data: XOR<DosenUpdateWithoutMatakuliahsInput, DosenUncheckedUpdateWithoutMatakuliahsInput>
  }

  export type DosenUpdateWithoutMatakuliahsInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    role?: RoleUpdateOneRequiredWithoutDosensNestedInput
  }

  export type DosenUncheckedUpdateWithoutMatakuliahsInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    roleId?: IntFieldUpdateOperationsInput | number
  }

  export type MataKuliahMahasiswaUpsertWithWhereUniqueWithoutMatakuliahInput = {
    where: MataKuliahMahasiswaWhereUniqueInput
    update: XOR<MataKuliahMahasiswaUpdateWithoutMatakuliahInput, MataKuliahMahasiswaUncheckedUpdateWithoutMatakuliahInput>
    create: XOR<MataKuliahMahasiswaCreateWithoutMatakuliahInput, MataKuliahMahasiswaUncheckedCreateWithoutMatakuliahInput>
  }

  export type MataKuliahMahasiswaUpdateWithWhereUniqueWithoutMatakuliahInput = {
    where: MataKuliahMahasiswaWhereUniqueInput
    data: XOR<MataKuliahMahasiswaUpdateWithoutMatakuliahInput, MataKuliahMahasiswaUncheckedUpdateWithoutMatakuliahInput>
  }

  export type MataKuliahMahasiswaUpdateManyWithWhereWithoutMatakuliahInput = {
    where: MataKuliahMahasiswaScalarWhereInput
    data: XOR<MataKuliahMahasiswaUpdateManyMutationInput, MataKuliahMahasiswaUncheckedUpdateManyWithoutMatakuliahInput>
  }

  export type NilaiUpsertWithWhereUniqueWithoutMatakuliahInput = {
    where: NilaiWhereUniqueInput
    update: XOR<NilaiUpdateWithoutMatakuliahInput, NilaiUncheckedUpdateWithoutMatakuliahInput>
    create: XOR<NilaiCreateWithoutMatakuliahInput, NilaiUncheckedCreateWithoutMatakuliahInput>
  }

  export type NilaiUpdateWithWhereUniqueWithoutMatakuliahInput = {
    where: NilaiWhereUniqueInput
    data: XOR<NilaiUpdateWithoutMatakuliahInput, NilaiUncheckedUpdateWithoutMatakuliahInput>
  }

  export type NilaiUpdateManyWithWhereWithoutMatakuliahInput = {
    where: NilaiScalarWhereInput
    data: XOR<NilaiUpdateManyMutationInput, NilaiUncheckedUpdateManyWithoutMatakuliahInput>
  }

  export type MataKuliahCreateWithoutDosenInput = {
    name: string
    mahasiswas?: MataKuliahMahasiswaCreateNestedManyWithoutMatakuliahInput
    nilais?: NilaiCreateNestedManyWithoutMatakuliahInput
  }

  export type MataKuliahUncheckedCreateWithoutDosenInput = {
    id?: number
    name: string
    mahasiswas?: MataKuliahMahasiswaUncheckedCreateNestedManyWithoutMatakuliahInput
    nilais?: NilaiUncheckedCreateNestedManyWithoutMatakuliahInput
  }

  export type MataKuliahCreateOrConnectWithoutDosenInput = {
    where: MataKuliahWhereUniqueInput
    create: XOR<MataKuliahCreateWithoutDosenInput, MataKuliahUncheckedCreateWithoutDosenInput>
  }

  export type MataKuliahCreateManyDosenInputEnvelope = {
    data: MataKuliahCreateManyDosenInput | MataKuliahCreateManyDosenInput[]
    skipDuplicates?: boolean
  }

  export type RoleCreateWithoutDosensInput = {
    name: string
    mahasiswas?: MahasiswaCreateNestedManyWithoutRoleInput
  }

  export type RoleUncheckedCreateWithoutDosensInput = {
    id?: number
    name: string
    mahasiswas?: MahasiswaUncheckedCreateNestedManyWithoutRoleInput
  }

  export type RoleCreateOrConnectWithoutDosensInput = {
    where: RoleWhereUniqueInput
    create: XOR<RoleCreateWithoutDosensInput, RoleUncheckedCreateWithoutDosensInput>
  }

  export type MataKuliahUpsertWithWhereUniqueWithoutDosenInput = {
    where: MataKuliahWhereUniqueInput
    update: XOR<MataKuliahUpdateWithoutDosenInput, MataKuliahUncheckedUpdateWithoutDosenInput>
    create: XOR<MataKuliahCreateWithoutDosenInput, MataKuliahUncheckedCreateWithoutDosenInput>
  }

  export type MataKuliahUpdateWithWhereUniqueWithoutDosenInput = {
    where: MataKuliahWhereUniqueInput
    data: XOR<MataKuliahUpdateWithoutDosenInput, MataKuliahUncheckedUpdateWithoutDosenInput>
  }

  export type MataKuliahUpdateManyWithWhereWithoutDosenInput = {
    where: MataKuliahScalarWhereInput
    data: XOR<MataKuliahUpdateManyMutationInput, MataKuliahUncheckedUpdateManyWithoutDosenInput>
  }

  export type MataKuliahScalarWhereInput = {
    AND?: MataKuliahScalarWhereInput | MataKuliahScalarWhereInput[]
    OR?: MataKuliahScalarWhereInput[]
    NOT?: MataKuliahScalarWhereInput | MataKuliahScalarWhereInput[]
    id?: IntFilter<"MataKuliah"> | number
    name?: StringFilter<"MataKuliah"> | string
    dosenId?: IntFilter<"MataKuliah"> | number
  }

  export type RoleUpsertWithoutDosensInput = {
    update: XOR<RoleUpdateWithoutDosensInput, RoleUncheckedUpdateWithoutDosensInput>
    create: XOR<RoleCreateWithoutDosensInput, RoleUncheckedCreateWithoutDosensInput>
    where?: RoleWhereInput
  }

  export type RoleUpdateToOneWithWhereWithoutDosensInput = {
    where?: RoleWhereInput
    data: XOR<RoleUpdateWithoutDosensInput, RoleUncheckedUpdateWithoutDosensInput>
  }

  export type RoleUpdateWithoutDosensInput = {
    name?: StringFieldUpdateOperationsInput | string
    mahasiswas?: MahasiswaUpdateManyWithoutRoleNestedInput
  }

  export type RoleUncheckedUpdateWithoutDosensInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    mahasiswas?: MahasiswaUncheckedUpdateManyWithoutRoleNestedInput
  }

  export type MahasiswaCreateWithoutNilaisInput = {
    username: string
    password: string
    name: string
    email: string
    matakuliahs?: MataKuliahMahasiswaCreateNestedManyWithoutMahasiswaInput
    role: RoleCreateNestedOneWithoutMahasiswasInput
  }

  export type MahasiswaUncheckedCreateWithoutNilaisInput = {
    id?: number
    username: string
    password: string
    name: string
    email: string
    roleId: number
    matakuliahs?: MataKuliahMahasiswaUncheckedCreateNestedManyWithoutMahasiswaInput
  }

  export type MahasiswaCreateOrConnectWithoutNilaisInput = {
    where: MahasiswaWhereUniqueInput
    create: XOR<MahasiswaCreateWithoutNilaisInput, MahasiswaUncheckedCreateWithoutNilaisInput>
  }

  export type MataKuliahCreateWithoutNilaisInput = {
    name: string
    dosen: DosenCreateNestedOneWithoutMatakuliahsInput
    mahasiswas?: MataKuliahMahasiswaCreateNestedManyWithoutMatakuliahInput
  }

  export type MataKuliahUncheckedCreateWithoutNilaisInput = {
    id?: number
    name: string
    dosenId: number
    mahasiswas?: MataKuliahMahasiswaUncheckedCreateNestedManyWithoutMatakuliahInput
  }

  export type MataKuliahCreateOrConnectWithoutNilaisInput = {
    where: MataKuliahWhereUniqueInput
    create: XOR<MataKuliahCreateWithoutNilaisInput, MataKuliahUncheckedCreateWithoutNilaisInput>
  }

  export type MahasiswaUpsertWithoutNilaisInput = {
    update: XOR<MahasiswaUpdateWithoutNilaisInput, MahasiswaUncheckedUpdateWithoutNilaisInput>
    create: XOR<MahasiswaCreateWithoutNilaisInput, MahasiswaUncheckedCreateWithoutNilaisInput>
    where?: MahasiswaWhereInput
  }

  export type MahasiswaUpdateToOneWithWhereWithoutNilaisInput = {
    where?: MahasiswaWhereInput
    data: XOR<MahasiswaUpdateWithoutNilaisInput, MahasiswaUncheckedUpdateWithoutNilaisInput>
  }

  export type MahasiswaUpdateWithoutNilaisInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    matakuliahs?: MataKuliahMahasiswaUpdateManyWithoutMahasiswaNestedInput
    role?: RoleUpdateOneRequiredWithoutMahasiswasNestedInput
  }

  export type MahasiswaUncheckedUpdateWithoutNilaisInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    roleId?: IntFieldUpdateOperationsInput | number
    matakuliahs?: MataKuliahMahasiswaUncheckedUpdateManyWithoutMahasiswaNestedInput
  }

  export type MataKuliahUpsertWithoutNilaisInput = {
    update: XOR<MataKuliahUpdateWithoutNilaisInput, MataKuliahUncheckedUpdateWithoutNilaisInput>
    create: XOR<MataKuliahCreateWithoutNilaisInput, MataKuliahUncheckedCreateWithoutNilaisInput>
    where?: MataKuliahWhereInput
  }

  export type MataKuliahUpdateToOneWithWhereWithoutNilaisInput = {
    where?: MataKuliahWhereInput
    data: XOR<MataKuliahUpdateWithoutNilaisInput, MataKuliahUncheckedUpdateWithoutNilaisInput>
  }

  export type MataKuliahUpdateWithoutNilaisInput = {
    name?: StringFieldUpdateOperationsInput | string
    dosen?: DosenUpdateOneRequiredWithoutMatakuliahsNestedInput
    mahasiswas?: MataKuliahMahasiswaUpdateManyWithoutMatakuliahNestedInput
  }

  export type MataKuliahUncheckedUpdateWithoutNilaisInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    dosenId?: IntFieldUpdateOperationsInput | number
    mahasiswas?: MataKuliahMahasiswaUncheckedUpdateManyWithoutMatakuliahNestedInput
  }

  export type MahasiswaCreateWithoutMatakuliahsInput = {
    username: string
    password: string
    name: string
    email: string
    nilais?: NilaiCreateNestedManyWithoutMahasiswaInput
    role: RoleCreateNestedOneWithoutMahasiswasInput
  }

  export type MahasiswaUncheckedCreateWithoutMatakuliahsInput = {
    id?: number
    username: string
    password: string
    name: string
    email: string
    roleId: number
    nilais?: NilaiUncheckedCreateNestedManyWithoutMahasiswaInput
  }

  export type MahasiswaCreateOrConnectWithoutMatakuliahsInput = {
    where: MahasiswaWhereUniqueInput
    create: XOR<MahasiswaCreateWithoutMatakuliahsInput, MahasiswaUncheckedCreateWithoutMatakuliahsInput>
  }

  export type MataKuliahCreateWithoutMahasiswasInput = {
    name: string
    dosen: DosenCreateNestedOneWithoutMatakuliahsInput
    nilais?: NilaiCreateNestedManyWithoutMatakuliahInput
  }

  export type MataKuliahUncheckedCreateWithoutMahasiswasInput = {
    id?: number
    name: string
    dosenId: number
    nilais?: NilaiUncheckedCreateNestedManyWithoutMatakuliahInput
  }

  export type MataKuliahCreateOrConnectWithoutMahasiswasInput = {
    where: MataKuliahWhereUniqueInput
    create: XOR<MataKuliahCreateWithoutMahasiswasInput, MataKuliahUncheckedCreateWithoutMahasiswasInput>
  }

  export type MahasiswaUpsertWithoutMatakuliahsInput = {
    update: XOR<MahasiswaUpdateWithoutMatakuliahsInput, MahasiswaUncheckedUpdateWithoutMatakuliahsInput>
    create: XOR<MahasiswaCreateWithoutMatakuliahsInput, MahasiswaUncheckedCreateWithoutMatakuliahsInput>
    where?: MahasiswaWhereInput
  }

  export type MahasiswaUpdateToOneWithWhereWithoutMatakuliahsInput = {
    where?: MahasiswaWhereInput
    data: XOR<MahasiswaUpdateWithoutMatakuliahsInput, MahasiswaUncheckedUpdateWithoutMatakuliahsInput>
  }

  export type MahasiswaUpdateWithoutMatakuliahsInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    nilais?: NilaiUpdateManyWithoutMahasiswaNestedInput
    role?: RoleUpdateOneRequiredWithoutMahasiswasNestedInput
  }

  export type MahasiswaUncheckedUpdateWithoutMatakuliahsInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    roleId?: IntFieldUpdateOperationsInput | number
    nilais?: NilaiUncheckedUpdateManyWithoutMahasiswaNestedInput
  }

  export type MataKuliahUpsertWithoutMahasiswasInput = {
    update: XOR<MataKuliahUpdateWithoutMahasiswasInput, MataKuliahUncheckedUpdateWithoutMahasiswasInput>
    create: XOR<MataKuliahCreateWithoutMahasiswasInput, MataKuliahUncheckedCreateWithoutMahasiswasInput>
    where?: MataKuliahWhereInput
  }

  export type MataKuliahUpdateToOneWithWhereWithoutMahasiswasInput = {
    where?: MataKuliahWhereInput
    data: XOR<MataKuliahUpdateWithoutMahasiswasInput, MataKuliahUncheckedUpdateWithoutMahasiswasInput>
  }

  export type MataKuliahUpdateWithoutMahasiswasInput = {
    name?: StringFieldUpdateOperationsInput | string
    dosen?: DosenUpdateOneRequiredWithoutMatakuliahsNestedInput
    nilais?: NilaiUpdateManyWithoutMatakuliahNestedInput
  }

  export type MataKuliahUncheckedUpdateWithoutMahasiswasInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    dosenId?: IntFieldUpdateOperationsInput | number
    nilais?: NilaiUncheckedUpdateManyWithoutMatakuliahNestedInput
  }

  export type DosenCreateWithoutRoleInput = {
    username: string
    password: string
    name: string
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    matakuliahs?: MataKuliahCreateNestedManyWithoutDosenInput
  }

  export type DosenUncheckedCreateWithoutRoleInput = {
    id?: number
    username: string
    password: string
    name: string
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
    matakuliahs?: MataKuliahUncheckedCreateNestedManyWithoutDosenInput
  }

  export type DosenCreateOrConnectWithoutRoleInput = {
    where: DosenWhereUniqueInput
    create: XOR<DosenCreateWithoutRoleInput, DosenUncheckedCreateWithoutRoleInput>
  }

  export type DosenCreateManyRoleInputEnvelope = {
    data: DosenCreateManyRoleInput | DosenCreateManyRoleInput[]
    skipDuplicates?: boolean
  }

  export type MahasiswaCreateWithoutRoleInput = {
    username: string
    password: string
    name: string
    email: string
    matakuliahs?: MataKuliahMahasiswaCreateNestedManyWithoutMahasiswaInput
    nilais?: NilaiCreateNestedManyWithoutMahasiswaInput
  }

  export type MahasiswaUncheckedCreateWithoutRoleInput = {
    id?: number
    username: string
    password: string
    name: string
    email: string
    matakuliahs?: MataKuliahMahasiswaUncheckedCreateNestedManyWithoutMahasiswaInput
    nilais?: NilaiUncheckedCreateNestedManyWithoutMahasiswaInput
  }

  export type MahasiswaCreateOrConnectWithoutRoleInput = {
    where: MahasiswaWhereUniqueInput
    create: XOR<MahasiswaCreateWithoutRoleInput, MahasiswaUncheckedCreateWithoutRoleInput>
  }

  export type MahasiswaCreateManyRoleInputEnvelope = {
    data: MahasiswaCreateManyRoleInput | MahasiswaCreateManyRoleInput[]
    skipDuplicates?: boolean
  }

  export type DosenUpsertWithWhereUniqueWithoutRoleInput = {
    where: DosenWhereUniqueInput
    update: XOR<DosenUpdateWithoutRoleInput, DosenUncheckedUpdateWithoutRoleInput>
    create: XOR<DosenCreateWithoutRoleInput, DosenUncheckedCreateWithoutRoleInput>
  }

  export type DosenUpdateWithWhereUniqueWithoutRoleInput = {
    where: DosenWhereUniqueInput
    data: XOR<DosenUpdateWithoutRoleInput, DosenUncheckedUpdateWithoutRoleInput>
  }

  export type DosenUpdateManyWithWhereWithoutRoleInput = {
    where: DosenScalarWhereInput
    data: XOR<DosenUpdateManyMutationInput, DosenUncheckedUpdateManyWithoutRoleInput>
  }

  export type DosenScalarWhereInput = {
    AND?: DosenScalarWhereInput | DosenScalarWhereInput[]
    OR?: DosenScalarWhereInput[]
    NOT?: DosenScalarWhereInput | DosenScalarWhereInput[]
    id?: IntFilter<"Dosen"> | number
    username?: StringFilter<"Dosen"> | string
    password?: StringFilter<"Dosen"> | string
    name?: StringFilter<"Dosen"> | string
    email?: StringFilter<"Dosen"> | string
    createdAt?: DateTimeFilter<"Dosen"> | Date | string
    updatedAt?: DateTimeFilter<"Dosen"> | Date | string
    roleId?: IntFilter<"Dosen"> | number
  }

  export type MahasiswaUpsertWithWhereUniqueWithoutRoleInput = {
    where: MahasiswaWhereUniqueInput
    update: XOR<MahasiswaUpdateWithoutRoleInput, MahasiswaUncheckedUpdateWithoutRoleInput>
    create: XOR<MahasiswaCreateWithoutRoleInput, MahasiswaUncheckedCreateWithoutRoleInput>
  }

  export type MahasiswaUpdateWithWhereUniqueWithoutRoleInput = {
    where: MahasiswaWhereUniqueInput
    data: XOR<MahasiswaUpdateWithoutRoleInput, MahasiswaUncheckedUpdateWithoutRoleInput>
  }

  export type MahasiswaUpdateManyWithWhereWithoutRoleInput = {
    where: MahasiswaScalarWhereInput
    data: XOR<MahasiswaUpdateManyMutationInput, MahasiswaUncheckedUpdateManyWithoutRoleInput>
  }

  export type MahasiswaScalarWhereInput = {
    AND?: MahasiswaScalarWhereInput | MahasiswaScalarWhereInput[]
    OR?: MahasiswaScalarWhereInput[]
    NOT?: MahasiswaScalarWhereInput | MahasiswaScalarWhereInput[]
    id?: IntFilter<"Mahasiswa"> | number
    username?: StringFilter<"Mahasiswa"> | string
    password?: StringFilter<"Mahasiswa"> | string
    name?: StringFilter<"Mahasiswa"> | string
    email?: StringFilter<"Mahasiswa"> | string
    roleId?: IntFilter<"Mahasiswa"> | number
  }

  export type MataKuliahMahasiswaCreateManyMahasiswaInput = {
    matakuliahId: number
  }

  export type NilaiCreateManyMahasiswaInput = {
    id?: number
    value: number
    matakuliahId: number
  }

  export type MataKuliahMahasiswaUpdateWithoutMahasiswaInput = {
    matakuliah?: MataKuliahUpdateOneRequiredWithoutMahasiswasNestedInput
  }

  export type MataKuliahMahasiswaUncheckedUpdateWithoutMahasiswaInput = {
    matakuliahId?: IntFieldUpdateOperationsInput | number
  }

  export type MataKuliahMahasiswaUncheckedUpdateManyWithoutMahasiswaInput = {
    matakuliahId?: IntFieldUpdateOperationsInput | number
  }

  export type NilaiUpdateWithoutMahasiswaInput = {
    value?: FloatFieldUpdateOperationsInput | number
    matakuliah?: MataKuliahUpdateOneRequiredWithoutNilaisNestedInput
  }

  export type NilaiUncheckedUpdateWithoutMahasiswaInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: FloatFieldUpdateOperationsInput | number
    matakuliahId?: IntFieldUpdateOperationsInput | number
  }

  export type NilaiUncheckedUpdateManyWithoutMahasiswaInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: FloatFieldUpdateOperationsInput | number
    matakuliahId?: IntFieldUpdateOperationsInput | number
  }

  export type MataKuliahMahasiswaCreateManyMatakuliahInput = {
    mahasiswaId: number
  }

  export type NilaiCreateManyMatakuliahInput = {
    id?: number
    value: number
    mahasiswaId: number
  }

  export type MataKuliahMahasiswaUpdateWithoutMatakuliahInput = {
    mahasiswa?: MahasiswaUpdateOneRequiredWithoutMatakuliahsNestedInput
  }

  export type MataKuliahMahasiswaUncheckedUpdateWithoutMatakuliahInput = {
    mahasiswaId?: IntFieldUpdateOperationsInput | number
  }

  export type MataKuliahMahasiswaUncheckedUpdateManyWithoutMatakuliahInput = {
    mahasiswaId?: IntFieldUpdateOperationsInput | number
  }

  export type NilaiUpdateWithoutMatakuliahInput = {
    value?: FloatFieldUpdateOperationsInput | number
    mahasiswa?: MahasiswaUpdateOneRequiredWithoutNilaisNestedInput
  }

  export type NilaiUncheckedUpdateWithoutMatakuliahInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: FloatFieldUpdateOperationsInput | number
    mahasiswaId?: IntFieldUpdateOperationsInput | number
  }

  export type NilaiUncheckedUpdateManyWithoutMatakuliahInput = {
    id?: IntFieldUpdateOperationsInput | number
    value?: FloatFieldUpdateOperationsInput | number
    mahasiswaId?: IntFieldUpdateOperationsInput | number
  }

  export type MataKuliahCreateManyDosenInput = {
    id?: number
    name: string
  }

  export type MataKuliahUpdateWithoutDosenInput = {
    name?: StringFieldUpdateOperationsInput | string
    mahasiswas?: MataKuliahMahasiswaUpdateManyWithoutMatakuliahNestedInput
    nilais?: NilaiUpdateManyWithoutMatakuliahNestedInput
  }

  export type MataKuliahUncheckedUpdateWithoutDosenInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    mahasiswas?: MataKuliahMahasiswaUncheckedUpdateManyWithoutMatakuliahNestedInput
    nilais?: NilaiUncheckedUpdateManyWithoutMatakuliahNestedInput
  }

  export type MataKuliahUncheckedUpdateManyWithoutDosenInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
  }

  export type DosenCreateManyRoleInput = {
    id?: number
    username: string
    password: string
    name: string
    email: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type MahasiswaCreateManyRoleInput = {
    id?: number
    username: string
    password: string
    name: string
    email: string
  }

  export type DosenUpdateWithoutRoleInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    matakuliahs?: MataKuliahUpdateManyWithoutDosenNestedInput
  }

  export type DosenUncheckedUpdateWithoutRoleInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    matakuliahs?: MataKuliahUncheckedUpdateManyWithoutDosenNestedInput
  }

  export type DosenUncheckedUpdateManyWithoutRoleInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MahasiswaUpdateWithoutRoleInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    matakuliahs?: MataKuliahMahasiswaUpdateManyWithoutMahasiswaNestedInput
    nilais?: NilaiUpdateManyWithoutMahasiswaNestedInput
  }

  export type MahasiswaUncheckedUpdateWithoutRoleInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    matakuliahs?: MataKuliahMahasiswaUncheckedUpdateManyWithoutMahasiswaNestedInput
    nilais?: NilaiUncheckedUpdateManyWithoutMahasiswaNestedInput
  }

  export type MahasiswaUncheckedUpdateManyWithoutRoleInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use MahasiswaCountOutputTypeDefaultArgs instead
     */
    export type MahasiswaCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MahasiswaCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MataKuliahCountOutputTypeDefaultArgs instead
     */
    export type MataKuliahCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MataKuliahCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DosenCountOutputTypeDefaultArgs instead
     */
    export type DosenCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DosenCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use RoleCountOutputTypeDefaultArgs instead
     */
    export type RoleCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = RoleCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MahasiswaDefaultArgs instead
     */
    export type MahasiswaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MahasiswaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MataKuliahDefaultArgs instead
     */
    export type MataKuliahArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MataKuliahDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DosenDefaultArgs instead
     */
    export type DosenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DosenDefaultArgs<ExtArgs>
    /**
     * @deprecated Use NilaiDefaultArgs instead
     */
    export type NilaiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = NilaiDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MataKuliahMahasiswaDefaultArgs instead
     */
    export type MataKuliahMahasiswaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MataKuliahMahasiswaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use RoleDefaultArgs instead
     */
    export type RoleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = RoleDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}